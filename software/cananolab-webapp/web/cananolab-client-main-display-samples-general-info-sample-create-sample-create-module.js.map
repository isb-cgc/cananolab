{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create.component.html"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-create-sample-create-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleCreateComponent } from './sample-create.component';\nconst routes: Routes = [{ path: '', component: SampleCreateComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleCreateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleCreateComponent } from './sample-create.component';\nimport { SampleCreateRoutingModule } from './sample-create-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\n\n\n@NgModule({\n    declarations: [SampleCreateComponent],\n    imports: [\n      CommonModule,\n      SampleCreateRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule\n    ]\n  })\n  export class SampleCreateModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../../constants';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\nimport { Properties } from 'src/assets/properties';\n@Component( {\n    selector: 'canano-sample-create',\n    templateUrl: './sample-create.component.html',\n    styleUrls: ['./sample-create.component.scss']\n} )\nexport class SampleCreateComponent implements OnInit{\n    currentDropdownValues={};\n    data;\n    dataTrailer;\n    errors={};\n    helpUrl = Consts.HELP_URL_SAMPLE_CREATE;\n    pointOfContact;\n    pointOfContactIndex;\n    piiConfirmed=false;\n    constructor(private apiService:ApiService,private httpClient: HttpClient,\n                 private router: Router){\n    }\n\n    ngOnInit(): void{\n        setTimeout(()=> {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.apiService.doGet(Consts.QUERY_SAMPLE_SUBMISSION_SETUP,'').subscribe(data=> {\n            this.data=data;\n            this.data['sampleId']=0;\n            this.pointOfContact={dirty:true,organization:{name:\"\"},address:{},role:\"\"};\n            this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n        },\n        errors=> {\n            this.errors=errors;\n        })\n    }\n\n    addOtherValue(field,currentValue) {\n        this.currentDropdownValues[field]=currentValue;\n    };\n\n    addPointOfContact() {\n        this.pointOfContactIndex=-1;\n    }\n\n    reset() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n        this.pointOfContact={dirty:true,organization:{name:\"\"},address:{},role:\"\"};\n        this.errors={};\n        this.piiConfirmed=false;\n    }\n\n    onSaveSample(){\n        this.data.pointOfContacts.push(this.pointOfContact);\n        this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_SAVE,this.data).subscribe(data=> {\n            if( data['errors'].length > 0 ){\n                this.errors['error'] = data['errors'];\n            }else{\n                this.router.navigate( ['home/samples/sample', data.sampleId] );\n            }\n        },\n        errors=>{\n            this.errors=errors;\n        })\n    }\n\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'],newItem['value'])\n            this.setValue(newItem['field'],newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'],newItem['value']);\n        }\n    };\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"'Create Sample'\"\n>\n</canano-main-display-heading>\n<div class=\"mainSection\" *ngIf=\"data\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <form name=\"createSampleForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"sampleName\">\n                            Sample Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input [(ngModel)]=\"data.sampleName\" name=\"data.sampleName\" id=\"data.sampleName\" type=\"text\" size=\"100\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"pointOfContact\">\n                            Point of Contact*\n                        </label>\n                    </td>\n                    <td>\n                        <div class=\"mainBorder\" id=\"pocForm\">\n                            <table class=\"dataMain\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.organization.name\">\n                                            Organization Name*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('pointOfContact.organization.name',pointOfContact.organization.name)\" name=\"pointOfContact.organization.name\" id=\"pointOfContact.organization.name\" [(ngModel)]=\"pointOfContact.organization.name\">\n                                            <option [ngValue]=\"''\">--Select--</option>\n                                            <option *ngFor=\"let org of data.organizationNamesForUser\" [ngValue]=\"org\">\n                                                {{org}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"pointOfContact.organization.name ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Organization Name'\" [value]=\"currentDropdownValues['pointOfContact.organization.name']\" [field]=\"'pointOfContact.organization.name'\" [array]=\"'data.organizationNamesForUser'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.role\">\n                                            Role\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <select (ngModelChange)=\"addOtherValue('pointOfContact.role',pointOfContact.role)\" name=\"pointOfContact.role\" id=\"pointOfContact.role\" [(ngModel)]=\"pointOfContact['role']\">\n                                            <option [ngValue]=\"''\">--Select--</option>\n                                            <option *ngFor=\"let role of data.contactRoles\" [ngValue]=\"role\">\n                                                {{role}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"pointOfContact.role ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Role'\" [value]=\"currentDropdownValues['pointOfContact.role']\" [field]=\"'pointOfContact.role'\" [array]=\"'data.contactRoles'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.firstName\">\n                                            First Name\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.firstName\" id=\"pointOfContact.firstName\" [(ngModel)]=\"pointOfContact.firstName\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.middleInitial\">\n                                            Middle Initial\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.middleInitial\" id=\"pointOfContact.middleInitial\" [(ngModel)]=\"pointOfContact.middleInitial\" size=\"4\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.lastName\">\n                                            Last Name\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.lastName\" id=\"pointOfContact.lastName\" [(ngModel)]=\"pointOfContact.lastName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.phoneNumber\">\n                                            Phone Number\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.phoneNumber\" id=\"pointOfContact.phoneNumber\" [(ngModel)]=\"pointOfContact.phoneNumber\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.email\">\n                                            Email\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <input type=\"text\" name=\"pointOfContact.email\" id=\"pointOfContact.email\" [(ngModel)]=\"pointOfContact.email\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.line1\">\n                                            Address Line 1\n                                        </label>\n                                    </td>\n                                    <td colspan=\"5\">\n                                        <input type=\"text\" name=\"pointOfContact.address.line1\" id=\"pointOfContact.address.line1\" [(ngModel)]=\"pointOfContact.address.line1\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.line2\">\n                                            Address Line 2\n                                        </label>\n                                    </td>\n                                    <td colspan=\"5\">\n                                        <input type=\"text\" name=\"pointOfContact.address.line2\" id=\"pointOfContact.address.line2\" [(ngModel)]=\"pointOfContact.address.line2\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.city\">\n                                            City\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.address.city\" id=\"pointOfContact.address.city\" [(ngModel)]=\"pointOfContact.address.city\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.stateProvince\">\n                                            State\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.address.stateProvince\" id=\"pointOfContact.address.stateProvince\" [(ngModel)]=\"pointOfContact.address.stateProvince\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.zip\">\n                                            Zip/Postal Code\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.address.zip\" id=\"pointOfContact.address.zip\" [(ngModel)]=\"pointOfContact.address.zip\" size=\"10\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.country\">\n                                            Country\n                                        </label>\n                                    </td>\n                                    <td colspan=\"5\">\n                                        <input type=\"text\" name=\"pointOfContact.address.country\" id=\"pointOfContact.address.country\" [(ngModel)]=\"pointOfContact.address.country\">\n                                    </td>\n                                </tr>\n                            </table>\n                            <br>\n                             <div style=\"width:900px\">\n                                <div>\n                                    Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                                    points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                                </div>\n                                <br>\n                                <div>\n                                    <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                                    <b> * I have read and understood the message above.</b>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n\n            </table>\n        </div>\n        <br />\n        <div>\n            <table class=\"submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"data.sampleName==''||pointOfContact.name==''||pointOfContact.role==''||!piiConfirmed\" (click)=\"onSaveSample()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Save</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n\n<!-- <canano-point-of-contact-create\n    [poc]=pointOfContacts\n    [sampleData]=\"organizationNames\"\n    [sampleName]=\"sampleName\"\n></canano-point-of-contact-create> -->\n"],"sourceRoot":"webpack:///"}