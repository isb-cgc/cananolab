{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/characterization/characterization-routing.module.ts","./src/app/cananolab-client/main-display/samples/characterization/characterization.component.ts","./src/app/cananolab-client/main-display/samples/characterization/characterization.component.html","./src/app/cananolab-client/main-display/samples/characterization/characterization.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-characterization-characterization-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CharacterizationComponent } from './characterization.component';\nconst routes: Routes = [{ path: '', component: CharacterizationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CharacterizationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../assets/properties';\nimport { Consts } from '../../../../constants';\nimport { timeout } from 'rxjs/operators';\nimport { NavigationService } from '../../../common/services/navigation.service';\nimport { ApiService } from '../../../common/services/api.service';\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\nimport { UtilService } from '../../../common/services/util.service';\n@Component( {\n    selector: 'canano-characterization',\n    templateUrl: './characterization.component.html',\n    styleUrls: ['./characterization.component.scss']\n} )\nexport class CharacterizationComponent implements OnInit{\n    errors;\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleName;\n    tempData;\n    toolHeadingNameManage;\n    helpUrl = Consts.HELP_URL_SAMPLE_CHARACTERIZATION;\n    sectionToShow='all';\n    serverUrl = Properties.API_SERVER_URL;\n    setupData;\n\n    characterizationData =\n        {\n        }\n    types = []\n    editUrl=false;\n\n    constructor( private statusDisplayService:StatusDisplayService,private apiService:ApiService,private navigationService:NavigationService, private router: Router, private route: ActivatedRoute, private utilService: UtilService  ){\n    }\n\n    ngOnInit(): void{\n        this.editUrl=this.statusDisplayService.isEditUrl();\n        this.navigationService.setCurrentSelectedItem(2);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                setTimeout(()=> {\n                    Properties.SAMPLE_TOOLS = true;\n\n                },200)\n                this.sampleId = params['sampleId'];\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data=>this.toolHeadingNameManage='Sample ' +data['sampleName'] + ' Characterization'\n                )\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                };\n\n                this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_SETUP_EDIT,'sampleId='+this.sampleId).subscribe(data=> {\n                    for (var x=0; x<data.length;x++) {\n                        this.types.push(data[x]['type']);\n                        this.characterizationData[data[x]['type']]=[];\n                    }\n                    console.log(this.types)\n                    console.log(this.characterizationData)\n                    this.getCharacterizationData().subscribe( data => {\n                        this.tempData=data;\n                        this.separateDataSets(data);\n                    },\n                    err => {\n                        console.error( 'Error ', err );\n                    });\n                },\n                errors=> {\n                    this.errors=errors;\n                })\n            }\n        );\n    }\n\n    // returns all data for this page //\n    getCharacterizationData() {\n        let results;\n        try{\n            results = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_VIEW,'sampleId='+this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            console.error( 'doGet Exception: ' + e );\n        }\n\n        return results;\n    }\n\n\n    getExperiments(data) {\n        let value=data.value;\n        let rows=[];\n        let rowLength=0;\n        let headers=[];\n        value.forEach((data,index)=> {\n            let key=Object.keys(data)[0];\n          headers.push(key);\n          rowLength=data[key].length;\n        })\n\n\n        for (var x=0;x<rowLength;x++) {\n            let currentRow=[];\n            value.forEach((data,index)=> {\n              let key=Object.keys(data)[0];\n              currentRow.push(data[key][x]);\n          })\n          rows.push(currentRow);\n        }\n        return [rows,headers]\n    }\n\n    // separates out all data into subsets of physico, in vivo, in vitro and other characterization types //\n    separateDataSets(data) {\n        console.log(data)\n        // let types =['in vitro characterization','in vivo characterization','physico-chemical characterization']\n        data.forEach(item=> {\n            item.charName=Object.keys(item.charsByAssayType)[0];\n            this.characterizationData[item.type].push(item)\n        })\n    }\n\n    // splits keywords for experiments and configurations //\n    splitKeywords(keywords) {\n        if (keywords) {\n            return keywords.split('\\n')\n        }\n        else {\n            return ''\n        }\n    }\n\n    // brings up new characterization form //\n    addCharacterization(type) {\n        this.router.navigate( ['home/samples/characterization/edit-characterization', Properties.CURRENT_SAMPLE_ID,type] );  // @FIXME  Don't hard code these\n    }\n\n    // brings up existing characterization form //\n    editCharacterization(charId,type, charClassName) {\n        this.router.navigate( ['home/samples/characterization/edit-characterization', Properties.CURRENT_SAMPLE_ID,charId, charClassName, type] );  // @FIXME  Don't hard code these\n    }\n\n\n    showSection(value) {\n        this.sectionToShow=value;\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'CHARACTERIZATION']\" [print]=\"true\"\n>\n</canano-main-display-heading>\n<ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let type of types\">\n        <a class=\"nav-link\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection(type)\">{{type}}</a>\n    </li>\n</ul>\n <ng-container *ngFor=\"let a of types\">\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'|| sectionToShow==a\">\n\n    <div class=\"header\">\n        {{a}} <button *ngIf=\"editUrl\" class=\"btn btn-primary btn-sm\" (click)=\"addCharacterization(a)\">Add</button>\n    </div>\n    <ng-container *ngFor=\"let b of characterizationData[a]\">\n\n        <ng-container *ngFor=\"let c of b.charsByAssayType | keyvalue\">\n            <div class=\"blueHeader\">{{c.key}}</div><br />\n                <div *ngFor=\"let d of c.value | keyvalue;let last=last\" class=\"mainBorder\" [ngClass]=\"{'last':last}\">\n\n                    <div class=\"editButton\" *ngIf=\"editUrl\"><button class=\"btn btn-primary btn-sm\" (click)=\"editCharacterization(d.value.charId,a, d.value.charClassName)\">Edit</button></div>\n                    <table class=\"dataMain\">\n\n                        <ng-container *ngFor=\"let e of d.value['displayableItems'] | keyvalue\">\n\n                            <tr *ngIf=\"e.value.value.length\">\n                                <td class=\"label\">\n                                    {{e.value.name}}\n                                </td>\n                                <td *ngIf=\"e.value.name=='Experiment Configurations'\">\n                                    <table class=\"dataTable\" *ngIf=\"getExperiments(e.value); let experiment\">\n                                        <tr>\n                                            <th *ngFor=\"let header of experiment[1]\">\n                                                {{header}}\n                                            </th>\n                                        </tr>\n                                        <tr *ngFor=\"let row of experiment[0];let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                            <td *ngFor=\"let column of row\">{{column}}</td>\n                                        </tr>\n                                    </table>\n                                </td>\n                                <td *ngIf=\"e.value.name=='Characterization Results'\">\n                                    <ng-container *ngFor=\"let f of e.value.value\">\n                                        <label for=\"dataConditions\">\n                                                 Conditions\n                                        </label>\n                                        <div *ngIf=\"f['Data and Conditions']\">\n                                            <table class=\"dataTable\" id=\"dataConditions\">\n                                                <ng-container *ngFor=\"let entry of f['Data and Conditions']; let even=even\">\n                                                    <tr *ngIf=\"entry.name=='colTitles'\">\n                                                        <th *ngFor=\"let title of entry.value\">\n                                                            <span [innerHTML]=\"title\">{{title}}</span>\n                                                        </th>\n                                                    </tr>\n                                                    <tr [ngClass]=\"{'rowOdd':even}\" *ngIf=\"entry.name=='colValues'\">\n                                                        <td *ngFor=\"let title of entry.value\">\n                                                            {{title}}\n                                                        </td>\n                                                    </tr>\n                                                </ng-container>\n                                            </table>\n                                        </div>\n                                        <div *ngIf=\"f['Files']\"><br />\n                                            <table class=\"files\">\n                                                <tr>\n                                                    <th>\n                                                        Files\n                                                    </th>\n                                                    <th>\n                                                        Keywords\n                                                    </th>\n                                                    <th>\n                                                        Description\n                                                    </th>\n                                                </tr>\n                                                <tr *ngFor=\"let file of f['Files']\">\n                                                    <td>\n                                                        <!-- Image -->\n                                                        <a *ngIf=\"file['imageTitle'] !== undefined\"\n                                                           [href]=\"serverUrl+'/rest/sample/download?fileId='+file.fileId\"\n                                                        >\n                                                            <img  [src]=\"serverUrl+'/rest/sample/download?fileId='+file.fileId\" width=\"150\">\n                                                        </a>\n\n                                                        <!-- Text file -->\n                                                        <a  *ngIf=\"file['title'] !== undefined\"\n                                                            [href]=\"serverUrl+'/rest/sample/download?fileId='+file.fileId\">\n                                                            {{file['title']}}\n                                                        </a>\n\n                                                        <a  *ngIf=\"file['title'] == undefined\"\n                                                        [href]=\"file['uri']\" target=\"_blank\" rel=\"nofollow noreferrer\">\n                                                        {{file['uri']}}\n                                                    </a>\n                                                    </td>\n                                                    <td>\n                                                        <ul>\n                                                            <li *ngFor=\"let keyword of splitKeywords(file['keywordsString'])\">\n                                                                {{keyword}}\n                                                            </li>\n                                                        </ul>\n                                                    </td>\n                                                    <td>{{file['description']}}</td>\n                                                </tr>\n                                            </table>\n                                        </div><br />\n                                    </ng-container>\n                                </td>\n                                <td *ngIf=\"e.value.name=='Properties'\">\n                                    <table class=\"dataTable\">\n                                        <tr *ngFor=\"let entry of e.value.value\">\n                                            <ng-container *ngIf=\"entry.name=='colTitles'\">\n                                                <th *ngFor=\"let title of entry.value\">\n                                                    <span [innerHTML]=\"title\">{{title}}</span>\n                                                </th>\n                                            </ng-container>\n                                            <ng-container *ngIf=\"entry.name=='colValues'\">\n                                                <td *ngFor=\"let title of entry.value\">\n                                                    {{title}}\n                                                </td>\n                                            </ng-container>\n                                        </tr>\n                                    </table>\n                                </td>\n                                <td *ngIf=\"e.value.name!='Characterization Results'&&e.value.name!='Experiment Configurations'&&e.value.name!='Properties'\">\n                                    {{e.value.value}}\n                                </td>\n                            </tr>\n                        </ng-container>\n                    </table>\n                </div>\n        </ng-container>\n    </ng-container>\n</div>\n</ng-container>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharacterizationComponent } from './characterization.component';\nimport { CharacterizationRoutingModule } from './characterization-routing.module';\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n    declarations: [CharacterizationComponent],\n    imports: [\n      CommonModule,\n      CharacterizationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\nexport class CharacterizationModule { }\n\n"],"sourceRoot":"webpack:///"}