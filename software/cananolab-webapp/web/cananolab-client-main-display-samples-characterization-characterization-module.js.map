{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/characterization/characterization-routing.module.ts","./src/app/cananolab-client/main-display/samples/characterization/characterization.component.ts","./src/app/cananolab-client/main-display/samples/characterization/characterization.component.html","./src/app/cananolab-client/main-display/samples/characterization/characterization.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-characterization-characterization-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CharacterizationComponent } from './characterization.component';\r\nconst routes: Routes = [{ path: '', component: CharacterizationComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CharacterizationRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Properties } from '../../../../../assets/properties';\r\nimport { Consts } from '../../../../constants';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { NavigationService } from '../../../common/services/navigation.service';\r\nimport { ApiService } from '../../../common/services/api.service';\r\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\r\nimport { UtilService } from '../../../common/services/util.service';\r\n@Component( {\r\n    selector: 'canano-characterization',\r\n    templateUrl: './characterization.component.html',\r\n    styleUrls: ['./characterization.component.scss']\r\n} )\r\nexport class CharacterizationComponent implements OnInit{\r\n    errors;\r\n    sampleId = Properties.CURRENT_SAMPLE_ID;\r\n    sampleName;\r\n    tempData;\r\n    toolHeadingNameManage;\r\n    helpUrl = Consts.HELP_URL_SAMPLE_CHARACTERIZATION;\r\n    sectionToShow='all';\r\n    serverUrl = Properties.API_SERVER_URL;\r\n    setupData;\r\n\r\n    characterizationData =\r\n        {\r\n        }\r\n    types = []\r\n    editUrl=false;\r\n\r\n    constructor( private statusDisplayService:StatusDisplayService,private apiService:ApiService,private navigationService:NavigationService, private router: Router, private route: ActivatedRoute, private utilService: UtilService  ){\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        this.editUrl=this.statusDisplayService.isEditUrl();\r\n        this.navigationService.setCurrentSelectedItem(2);\r\n        this.route.params.subscribe(\r\n            ( params: Params ) => {\r\n                setTimeout(()=> {\r\n                    Properties.SAMPLE_TOOLS = true;\r\n\r\n                },200)\r\n                this.sampleId = params['sampleId'];\r\n                this.apiService.getSampleName(this.sampleId).subscribe(\r\n                    data=>this.toolHeadingNameManage='Sample ' +data['sampleName'] + ' Characterization'\r\n                )\r\n                if(\r\n                    this.sampleId <= 0 ){\r\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\r\n                }else{\r\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\r\n                };\r\n\r\n                this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_SETUP_EDIT,'sampleId='+this.sampleId).subscribe(data=> {\r\n                    for (var x=0; x<data.length;x++) {\r\n                        this.types.push(data[x]['type']);\r\n                        this.characterizationData[data[x]['type']]=[];\r\n                    }\r\n                    console.log(this.types)\r\n                    console.log(this.characterizationData)\r\n                    this.getCharacterizationData().subscribe( data => {\r\n                        this.tempData=data;\r\n                        this.separateDataSets(data);\r\n                    },\r\n                    err => {\r\n                        console.error( 'Error ', err );\r\n                    });\r\n                },\r\n                errors=> {\r\n                    this.errors=errors;\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    // returns all data for this page //\r\n    getCharacterizationData() {\r\n        let results;\r\n        try{\r\n            results = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_VIEW,'sampleId='+this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\r\n        }catch( e ){\r\n            console.error( 'doGet Exception: ' + e );\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n\r\n    getExperiments(data) {\r\n        let value=data.value;\r\n        let rows=[];\r\n        let rowLength=0;\r\n        let headers=[];\r\n        value.forEach((data,index)=> {\r\n            let key=Object.keys(data)[0];\r\n          headers.push(key);\r\n          rowLength=data[key].length;\r\n        })\r\n\r\n\r\n        for (var x=0;x<rowLength;x++) {\r\n            let currentRow=[];\r\n            value.forEach((data,index)=> {\r\n              let key=Object.keys(data)[0];\r\n              currentRow.push(data[key][x]);\r\n          })\r\n          rows.push(currentRow);\r\n        }\r\n        return [rows,headers]\r\n    }\r\n\r\n    // separates out all data into subsets of physico, in vivo, in vitro and other characterization types //\r\n    separateDataSets(data) {\r\n        //console.log(data)\r\n        // let types =['in vitro characterization','in vivo characterization','physico-chemical characterization']\r\n        data.forEach(item=> {\r\n            item.charName=Object.keys(item.charsByAssayType)[0];\r\n            this.characterizationData[item.type].push(item)\r\n        })\r\n    }\r\n\r\n    // splits keywords for experiments and configurations //\r\n    splitKeywords(keywords) {\r\n        if (keywords) {\r\n            return keywords.split('\\n')\r\n        }\r\n        else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    // brings up new characterization form //\r\n    addCharacterization(type) {\r\n        this.router.navigate( ['home/samples/characterization/edit-characterization', Properties.CURRENT_SAMPLE_ID,type] );  // @FIXME  Don't hard code these\r\n    }\r\n\r\n    // brings up existing characterization form //\r\n    editCharacterization(charId,type, charClassName) {\r\n        this.router.navigate( ['home/samples/characterization/edit-characterization', Properties.CURRENT_SAMPLE_ID,charId, charClassName, type] );  // @FIXME  Don't hard code these\r\n    }\r\n\r\n\r\n    showSection(value) {\r\n        this.sectionToShow=value;\r\n    }\r\n}\r\n","<canano-main-display-heading\r\n    [helpUrl]=\"helpUrl\"\r\n    [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'CHARACTERIZATION']\" [print]=\"true\"\r\n>\r\n</canano-main-display-heading>\r\n<ul class=\"nav nav-tabs\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngFor=\"let type of types\">\r\n        <a class=\"nav-link\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection(type)\">{{type}}</a>\r\n    </li>\r\n</ul>\r\n <ng-container *ngFor=\"let a of types\">\r\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'|| sectionToShow==a\">\r\n\r\n    <div class=\"header\">\r\n        {{a}} <button *ngIf=\"editUrl\" class=\"btn btn-primary btn-sm\" (click)=\"addCharacterization(a)\">Add</button>\r\n    </div>\r\n    <ng-container *ngFor=\"let b of characterizationData[a]\">\r\n\r\n        <ng-container *ngFor=\"let c of b.charsByAssayType | keyvalue\">\r\n            <div class=\"blueHeader\">{{c.key}}</div><br />\r\n                <div *ngFor=\"let d of c.value | keyvalue;let last=last\" class=\"mainBorder\" [ngClass]=\"{'last':last}\">\r\n\r\n                    <div class=\"editButton\" *ngIf=\"editUrl\"><button class=\"btn btn-primary btn-sm\" (click)=\"editCharacterization(d.value.charId,a, d.value.charClassName)\">Edit</button></div>\r\n                    <table class=\"dataMain\">\r\n\r\n                        <ng-container *ngFor=\"let e of d.value['displayableItems'] | keyvalue\">\r\n\r\n                            <tr *ngIf=\"e.value.value.length\">\r\n                                <td class=\"label\">\r\n                                    {{e.value.name}}\r\n                                </td>\r\n                                <td *ngIf=\"e.value.name=='Experiment Configurations'\">\r\n                                    <table class=\"dataTable\" *ngIf=\"getExperiments(e.value); let experiment\">\r\n                                        <tr>\r\n                                            <th *ngFor=\"let header of experiment[1]\">\r\n                                                {{header}}\r\n                                            </th>\r\n                                        </tr>\r\n                                        <tr *ngFor=\"let row of experiment[0];let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\r\n                                            <td *ngFor=\"let column of row\">{{column}}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </td>\r\n                                <td *ngIf=\"e.value.name=='Characterization Results'\">\r\n                                    <ng-container *ngFor=\"let f of e.value.value\">\r\n                                        <label for=\"dataConditions\">\r\n                                                 Conditions\r\n                                        </label>\r\n                                        <div *ngIf=\"f['Data and Conditions']\">\r\n                                            <table class=\"dataTable\" id=\"dataConditions\">\r\n                                                <ng-container *ngFor=\"let entry of f['Data and Conditions']; let even=even\">\r\n                                                    <tr *ngIf=\"entry.name=='colTitles'\">\r\n                                                        <th *ngFor=\"let title of entry.value\">\r\n                                                            <span [innerHTML]=\"title\">{{title}}</span>\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    <tr [ngClass]=\"{'rowOdd':even}\" *ngIf=\"entry.name=='colValues'\">\r\n                                                        <td *ngFor=\"let title of entry.value\">\r\n                                                            {{title}}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </ng-container>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div *ngIf=\"f['Files']\"><br />\r\n                                            <table class=\"files\">\r\n                                                <tr>\r\n                                                    <th>\r\n                                                        Files\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        Keywords\r\n                                                    </th>\r\n                                                    <th>\r\n                                                        Description\r\n                                                    </th>\r\n                                                </tr>\r\n                                                <tr *ngFor=\"let file of f['Files']\">\r\n                                                    <td>\r\n                                                        <!-- Image -->\r\n                                                        <a *ngIf=\"file['imageTitle'] !== undefined\"\r\n                                                           [href]=\"serverUrl+'/rest/sample/download?fileId='+file.fileId\"\r\n                                                        >\r\n                                                            <img  [src]=\"serverUrl+'/rest/sample/download?fileId='+file.fileId\" width=\"150\">\r\n                                                        </a>\r\n\r\n                                                        <!-- Text file -->\r\n                                                        <a  *ngIf=\"file['title'] !== undefined\"\r\n                                                            [href]=\"serverUrl+'/rest/sample/download?fileId='+file.fileId\">\r\n                                                            {{file['title']}}\r\n                                                        </a>\r\n\r\n                                                        <a  *ngIf=\"file['title'] == undefined\"\r\n                                                        [href]=\"file['uri']\" target=\"_blank\" rel=\"nofollow noreferrer\">\r\n                                                        {{file['uri']}}\r\n                                                    </a>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <ul>\r\n                                                            <li *ngFor=\"let keyword of splitKeywords(file['keywordsString'])\">\r\n                                                                {{keyword}}\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </td>\r\n                                                    <td>{{file['description']}}</td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </div><br />\r\n                                    </ng-container>\r\n                                </td>\r\n                                <td *ngIf=\"e.value.name=='Properties'\">\r\n                                    <table class=\"dataTable\">\r\n                                        <tr *ngFor=\"let entry of e.value.value\">\r\n                                            <ng-container *ngIf=\"entry.name=='colTitles'\">\r\n                                                <th *ngFor=\"let title of entry.value\">\r\n                                                    <span [innerHTML]=\"title\">{{title}}</span>\r\n                                                </th>\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"entry.name=='colValues'\">\r\n                                                <td *ngFor=\"let title of entry.value\">\r\n                                                    {{title}}\r\n                                                </td>\r\n                                            </ng-container>\r\n                                        </tr>\r\n                                    </table>\r\n                                </td>\r\n                                <td *ngIf=\"e.value.name!='Characterization Results'&&e.value.name!='Experiment Configurations'&&e.value.name!='Properties'\">\r\n                                    {{e.value.value}}\r\n                                </td>\r\n                            </tr>\r\n                        </ng-container>\r\n                    </table>\r\n                </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>\r\n</ng-container>\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CharacterizationComponent } from './characterization.component';\r\nimport { CharacterizationRoutingModule } from './characterization-routing.module';\r\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    declarations: [CharacterizationComponent],\r\n    imports: [\r\n      CommonModule,\r\n      CharacterizationRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule\r\n    ]\r\n  })\r\nexport class CharacterizationModule { }\r\n\r\n"],"sourceRoot":"webpack:///"}