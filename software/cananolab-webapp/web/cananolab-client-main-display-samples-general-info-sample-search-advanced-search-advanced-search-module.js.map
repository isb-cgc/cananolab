{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search/advanced-search.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search/advanced-search.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search/advanced-search-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search/advanced-search.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-search-advanced-search-advanced-search-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\nimport { Consts } from 'src/app/constants';\nimport { AdvancedSearchService } from './advanced-search.service';\nimport { Router } from '@angular/router';\nimport { Properties } from 'src/assets/properties';\n@Component({\n  selector: 'canano-advanced-search',\n  templateUrl: './advanced-search.component.html',\n  styleUrls: ['./advanced-search.component.scss']\n})\nexport class AdvancedSearchComponent implements OnInit {\n\n    constructor(\n        private router:Router,\n        private advancedSearchService:AdvancedSearchService,\n        private apiService:ApiService) { }\n\n        characterizationEditIndex;\n        characterizationQuery;\n        characterizationQuery2;\n        compositionEditIndex;\n        compositionEntityTypes=[];\n        compositionQuery;\n        errors={};\n        loading;\n        loadingMessage=Consts.searchingMessage;\n        query={};\n        sampleEditIndex;\n        sampleQuery;\n        setupData={};\n\n    ngOnInit(): void {\n        setTimeout(()=> {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.loading=true;\n        this.loadingMessage=Consts.loadingMessage;\n        this.apiService.doGet(Consts.QUERY_SAMPLE_ADVANCED_SEARCH_SETUP,'').subscribe(data=> {\n            this.setupData=data;\n            this.setupData['characterizationDatumNames']=[];\n            this.setupData['characterizationDatumValueUnits']=[];\n            this.setupData['characterizationNames']=[];\n            this.setupData['compositionEntityTypes']=[];\n            this.setupData['loaded']=true;\n            this.loading=null;\n            },\n            error=> {\n                this.loading=null;\n            });\n        this.setupQueries(); // sets up main query //\n    }\n\n    changeCompositionType(event) {\n        if (event=='nanomaterial entity') this.setupData['compositionEntityTypes']=this.setupData['nanomaterialEntityTypes'];\n        if (event=='functionalizing entity') this.setupData['compositionEntityTypes']=this.setupData['functionalizingEntityTypes'];\n        if (event=='function') this.setupData['compositionEntityTypes']=this.setupData['functionTypes'];\n    }\n\n    changeCharacterizationType(event,currentVal) {\n        if (!currentVal) this.setupCharacterizationQuery();\n        this.setupData['characterizationDatumNames']=[];\n        this.setupData['characterizationDatumValueUnits']=[];\n        this.characterizationQuery['characterizationType']=event;\n        this.apiService.doGet(Consts.QUERY_SAMPLE_GET_CHARACTERIZATION_OPTIONS,'charType='+event).subscribe(data=> {\n            this.setupData['characterizationNames']=data;\n        },\n        errors=> {\n            this.errors=errors;\n        })\n    }\n\n    changeCharacterizationName(event) {\n        this.apiService.doGet(Consts.QUERY_SAMPLE_GET_DATUM_OPTIONS,'charType='+this.characterizationQuery.characterizationType+'&charName='+event).subscribe(data=> {\n            this.setupData['characterizationDatumNames']=data;\n            if (this.characterizationEditIndex==null) {\n                this.characterizationQuery['datumValueUnit']='';\n            }\n        },\n        errors=> {\n            this.errors=errors;\n        })\n    }\n\n    changeCharacterizationDatumName(event) {\n        this.apiService.doGet(Consts.QUERY_SAMPLE_GET_DATUM_UNIT_OPTIONS,'datumName='+event).subscribe(data=> {\n            this.setupData['characterizationDatumValueUnits']=data;\n            if (this.characterizationEditIndex==null) {\n                this.characterizationQuery['datumValueUnit']='';\n            }\n        },\n        errors=> {\n            this.errors=errors;\n        })\n    }\n\n    // sample methods //\n    cancelSampleQuery() {\n        this.sampleEditIndex=null;\n        this.setupSampleQuery();\n    }\n\n    deleteSampleQuery() {\n        if (confirm(\"Are you sure you wish to delete this sample query?\")) {\n            this.query['sampleQueries'].splice(this.sampleEditIndex,1)\n            this.sampleEditIndex=null;\n            this.setupSampleQuery();\n        }\n    }\n\n    editSampleQuery(index) {\n        this.sampleEditIndex=index;\n        this.sampleQuery=JSON.parse(JSON.stringify(this.query['sampleQueries'][index]));\n    }\n\n    saveSampleQuery() {\n        Object.keys(this.sampleQuery).forEach(item=> {\n            if (this.sampleQuery[item]=='') delete this.sampleQuery[item];\n        })\n        if (this.sampleEditIndex!=null) {\n            this.query['sampleQueries'][this.sampleEditIndex]=this.sampleQuery;\n        }\n        else {\n            this.query['sampleQueries'].push(this.sampleQuery);\n        }\n        this.sampleEditIndex=null;\n        this.setupSampleQuery();\n    }\n    // end sample methods\n\n    // composition methods //\n\n    cancelCompositionQuery() {\n        this.compositionEditIndex=null;\n        this.setupCompositionQuery();\n    }\n\n    deleteCompositionQuery() {\n        if (confirm(\"Are you sure you wish to delete this composition query?\")) {\n            this.query['compositionQueries'].splice(this.compositionEditIndex,1)\n            this.compositionEditIndex=null;\n            this.setupCompositionQuery();\n            this.setupData['compositionEntityTypes']=[];\n        }\n    }\n\n    editCompositionQuery(index) {\n        this.compositionEditIndex=index;\n        this.compositionQuery=JSON.parse(JSON.stringify(this.query['compositionQueries'][index]));\n        this.changeCompositionType(this.compositionQuery.compositionType);\n    }\n\n    saveCompositionQuery() {\n        Object.keys(this.compositionQuery).forEach(item=> {\n            if (this.compositionQuery[item]=='') delete this.compositionQuery[item];\n        })\n        if (this.compositionEditIndex!=null) {\n            this.query['compositionQueries'][this.compositionEditIndex]=this.compositionQuery;\n        }\n        else {\n            this.query['compositionQueries'].push(this.compositionQuery);\n        }\n        this.compositionEditIndex=null;\n        this.setupCompositionQuery();\n        this.setupData['compositionEntityTypes']=[];\n    }\n    // end composition methods //\n\n    // characterization methods //\n\n    cancelCharacterizationQuery() {\n        this.characterizationEditIndex=null;\n        this.setupCharacterizationQuery();\n        this.setupData['characterizationNames']=[];\n        this.setupData['characterizationDatumNames']=[];\n        this.setupData['characterizationDatumValueUnits']=[];\n    }\n\n    deleteCharacterizationQuery() {\n        if (confirm(\"Are you sure you wish to delete this characterization query?\")) {\n            this.query['characterizationQueries'].splice(this.characterizationQuery,1)\n            this.characterizationEditIndex=null;\n            this.setupCharacterizationQuery();\n            this.setupData['characterizationNames']=[];\n            this.setupData['characterizationDatumNames']=[];\n            this.setupData['characterizationDatumValueUnits']=[];\n        }\n    }\n\n    editCharacterizationQuery(index) {\n        this.characterizationEditIndex=index;\n        this.characterizationQuery=JSON.parse(JSON.stringify(this.query['characterizationQueries'][index]));\n        this.characterizationQuery2=JSON.parse(JSON.stringify(this.query['characterizationQueries'][index]));\n        this.changeCharacterizationType(this.characterizationQuery.characterizationType,1);\n        this.changeCharacterizationName(this.characterizationQuery.characterizationName);\n        this.changeCharacterizationDatumName(this.characterizationQuery.datumName);\n    }\n\n    saveCharacterizationQuery() {\n        Object.keys(this.characterizationQuery).forEach(item=> {\n            if (this.characterizationQuery[item]=='') delete this.characterizationQuery[item];\n        })\n        if (this.characterizationEditIndex!=null) {\n            this.query['characterizationQueries'][this.characterizationEditIndex]=this.characterizationQuery;\n        }\n        else {\n            this.query['characterizationQueries'].push(this.characterizationQuery);\n        }\n        this.characterizationEditIndex=null;\n        this.setupCharacterizationQuery();\n        this.setupData['characterizationNames']=[];\n        this.setupData['characterizationDatumNames']=[];\n        this.setupData['characterizationDatumValueUnits']=[];\n    }\n    // end characterization methods //\n\n    isCharacterizationAddValid() {\n        let validity=true;\n        let keys=['characterizationType','characterizationName'];\n        keys.forEach(key=> {\n            if (this.characterizationQuery[key]=='') {\n                validity=false;\n            };\n        })\n        return validity;\n    };\n\n    isCompositionAddValid() {\n        let validity=true;\n        let keys=['compositionType','entityType'];\n        keys.forEach(key=> {\n            if (this.compositionQuery[key]=='') {\n                validity=false;\n            };\n        })\n        return validity;\n    };\n\n    isSampleAddValid() {\n        let validity=true;\n        Object.keys(this.sampleQuery).forEach(key=> {\n            if (this.sampleQuery[key]=='') {\n                validity=false;\n            };\n        })\n        return validity;\n    };\n\n    reset() {\n        console.log('test')\n        this.setupCharacterizationQuery();\n        this.setupCompositionQuery();\n        this.setupSampleQuery();\n        this.query['characterizationQueries']=[];\n        this.query['compositionQueries']=[];\n        this.query['sampleQueries']=[];\n        this.setupData['characterizationDatumNames']=[];\n        this.setupData['characterizationDatumValueUnits']=[];\n        this.setupData['characterizationNames']=[];\n        this.setupData['compositionEntityTypes']=[];\n    }\n\n    resetSampleQueries() {\n        this.query['sampleQueries']=[];\n        this.setupSampleQuery();\n    }\n\n    resetCompositionQueries() {\n        this.query['compositionQueries']=[];\n        this.setupData['compositionEntityTypes']=[];\n        this.setupCompositionQuery();\n    }\n\n    resetCharacterizationQueries() {\n        this.query['characterizationQueries']=[];\n        this.setupData['characterizationNames']=[];\n        this.setupData['characterizationDatumNames']=[];\n        this.setupData['characterizationDatumValueUnits']=[];\n        this.setupCharacterizationQuery();\n    }\n    search() {\n        this.loading=true;\n        this.loadingMessage=Consts.searchingMessage;\n        this.apiService.doPost(Consts.QUERY_SAMPLE_ADVANCED_SEARCH,this.query).subscribe(data=> {\n            this.advancedSearchService.setAdvancedSearchResults(data);\n            this.router.navigate(['home/samples/sample-advanced-search-results'])\n        },\n        error=> {\n            this.loading=null;\n            this.errors=error;\n        })\n    }\n    setupQueries() {\n        this.query={\n            characterizationLogicalOperator:\"and\",\n            characterizationQueries:[],\n            compositionLogicalOperator:\"and\",\n            compositionQueries:[],\n            logicalOperator:\"and\",\n            sampleLogicalOperator:\"and\",\n            sampleQueries:[]\n        };\n\n        this.setupCharacterizationQuery();\n        this.setupCompositionQuery();\n        this.setupSampleQuery();\n\n    }\n\n    setupCharacterizationQuery() {\n        this.characterizationQuery={\n            characterizationName: \"\",\n            characterizationType: \"\",\n            datumName: \"\",\n            datumValue: \"\",\n            datumValueUnit: \"\",\n            operand: \"\",\n            type: \"CharacterizationQueryBean\"}\n    }\n\n    setupCompositionQuery() {\n        this.compositionQuery={\n            chemicalName: \"\",\n            compositionType: \"\",\n            entityType: \"\",\n            operand: \"\",\n            type: \"CompositionQueryBean\"\n        };\n    }\n\n    setupSampleQuery() {\n        this.sampleQuery={\n            nameType:\"\",\n            operand:\"\",\n            name:\"\",\n            type:\"SampleQueryBean\"\n        }\n    }\n}\n","\n<canano-main-display-heading [helpUrl]=\"'https://wiki.nci.nih.gov/display/caNanoLab/Managing+Samples+in+caNanoLab#ManagingSamplesincaNanoLab-AdvSearchSample'\" [toolHeadingName]=\"'ADVANCED SAMPLE SEARCH'\"\n[otherUrl]=\"{title:'Basic Search',link:'home/samples/sample-search'}\">\n</canano-main-display-heading>\n<div class=\"mainSection\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['message']}}\n    </div>\n    <canano-loader [loading]=\"loading\" [message]=\"loadingMessage\"></canano-loader>\n\n    <form name=\"advanced-search-form\" *ngIf=\"setupData['loaded']\">\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    Sample Criteria\n                </td>\n            </tr>\n            <!-- List Existing Queries -->\n            <tr *ngIf=\"query['sampleQueries'].length\">\n                <td>\n                    <div class=\"mainBorder\">\n                        <table class=\"records\">\n                            <tr *ngFor=\"let sample of query['sampleQueries'];let sampleIndex=index\">\n                                <td>\n                                    {{sample.nameType}}\n                                </td>\n                                <td>\n                                    {{sample.operand}}\n                                </td>\n                                <td>\n                                    {{sample.name}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editSampleQuery(sampleIndex)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <!-- End List Existing Queries -->\n\n            <!-- main selection area -->\n            <tr>\n                <td>\n                    <table class=\"inputs\">\n                        <tr>\n                            <td>\n                                <label for=\"sampleQuery.nameType\">\n                                    <select name=\"sampleQuery.nameType\" id=\"sampleQuery.nameType\" [(ngModel)]=\"sampleQuery.nameType\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option [ngValue]=\"'sample name'\">Sample Name</option>\n                                        <option [ngValue]=\"'point of contact name'\">Point of Contact Name</option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td>\n                                <label for=\"sampleQuery.operand\">\n                                    <select name=\"sampleQuery.operand\" id=\"sampleQuery.operand\" [(ngModel)]=\"sampleQuery.operand\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option [ngValue]=\"'contains'\">Contains</option>\n                                        <option [ngValue]=\"'equals'\">Equals</option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td>\n                                <label for=\"sampleQuery.name\">\n                                    <input type=\"text\" name=\"sampleQuery.name\" id=\"sampleQuery.name\" [(ngModel)]=\"sampleQuery.name\" size=\"50\">\n                                </label>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"sampleEditIndex!=null\">\n                            <td colspan=\"3\">\n                                <button [disabled]=\"!isSampleAddValid()\" (click)=\"saveSampleQuery()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Update</button>\n                                <button (click)=\"resetSampleQueries()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n                                <button (click)=\"deleteSampleQuery()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                <button (click)=\"cancelSampleQuery()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"sampleEditIndex==null\">\n                            <td colspan=\"3\">\n                                <button [disabled]=\"!isSampleAddValid()\" (click)=\"saveSampleQuery()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                <button (click)=\"resetSampleQueries()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"query.sampleQueries.length>1\">\n                            <td colspan=\"3\">\n                                <div>\n                                    <input type=\"radio\" name=\"sampleLogicalOperator\" id=\"sampleLogicalOperator\" [value]=\"'and'\" [(ngModel)]=\"query.sampleLogicalOperator\">\n                                    <label for=\"logicalOperator\" class=\"right\">\n                                        And\n                                    </label>\n                                    <input type=\"radio\" name=\"sampleLogicalOperator\" id=\"sampleLogicalOperator\" [value]=\"'or'\" [(ngModel)]=\"query.sampleLogicalOperator\">\n                                    <label for=\"sampleLogicalOperator\" class=\"right\">\n                                        Or\n                                    </label>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <!-- end main selection area -->\n        </table>\n    </div><br />\n\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    Composition Criteria\n                </td>\n            </tr>\n            <!-- List Existing Queries -->\n            <tr *ngIf=\"query['compositionQueries'].length\">\n                <td>\n                    <div class=\"mainBorder\">\n                        <table class=\"records\">\n                            <tr *ngFor=\"let composition of query['compositionQueries'];let compositionIndex=index\">\n                                <td>\n                                    {{composition.compositionType}}\n                                </td>\n                                <td>\n                                    {{composition.entityType}}\n                                </td>\n                                <td>\n                                    {{composition.operand}}\n                                </td>\n                                <td>\n                                    {{composition.chemicalName}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editCompositionQuery(compositionIndex)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <!-- End List Existing Queries -->\n\n            <!-- main selection area -->\n            <tr>\n                <td>\n                    <table class=\"inputs\">\n                        <tr>\n                            <td>\n                                <label for=\"compositionQuery.compositionType\">\n                                    <select (ngModelChange)=\"changeCompositionType($event)\" name=\"compositionQuery.compositionType\" id=\"compositionQuery.compositionType\" [(ngModel)]=\"compositionQuery.compositionType\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option [ngValue]=\"'nanomaterial entity'\">Nanomaterial Entity</option>\n                                        <option [ngValue]=\"'functionalizing entity'\">Functionalizing Entity</option>\n                                        <option [ngValue]=\"'function'\">Function</option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td>\n                                <label for=\"compositionQuery.entityType\">\n                                    <select name=\"compositionQuery.entityType\" id=\"compositionQuery.entityType\" [(ngModel)]=\"compositionQuery.entityType\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let entityType of setupData['compositionEntityTypes']\" [ngValue]=\"entityType\">{{entityType}}</option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td>\n                                with chemical name\n                            </td>\n                            <td>\n                                <label for=\"compositionQuery.operand\">\n                                    <select name=\"compositionQuery.operand\" id=\"compositionQuery.operand\" [(ngModel)]=\"compositionQuery.operand\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option [ngValue]=\"'contains'\">Contains</option>\n                                        <option [ngValue]=\"'equals'\">Equals</option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td>\n                                <input type=\"text\" name=\"compositionQuery.chemicalName\" id=\"compositionQuery.chemicalName\" [(ngModel)]=\"compositionQuery.chemicalName\">\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"compositionEditIndex!=null\">\n                            <td colspan=\"5\">\n                                <button [disabled]=\"!isCompositionAddValid()\" (click)=\"saveCompositionQuery()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Update</button>\n                                <button (click)=\"resetCompositionQueries()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n                                <button (click)=\"deleteCompositionQuery()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                <button (click)=\"cancelCompositionQuery()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"compositionEditIndex==null\">\n                            <td colspan=\"5\">\n                                <button [disabled]=\"!isCompositionAddValid()\" (click)=\"saveCompositionQuery()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                <button (click)=\"resetCompositionQueries()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"query.compositionQueries.length>1\">\n                            <td colspan=\"5\">\n                                <div>\n                                    <input type=\"radio\" name=\"compositionLogicalOperator\" id=\"compositionLogicalOperator\" [value]=\"'and'\" [(ngModel)]=\"query.compositionLogicalOperator\">\n                                    <label for=\"compositionLogicalOperator\" class=\"right\">\n                                        And\n                                    </label>\n                                    <input type=\"radio\" name=\"compositionLogicalOperator\" id=\"compositionLogicalOperator\" [value]=\"'or'\" [(ngModel)]=\"query.compositionLogicalOperator\">\n                                    <label for=\"compositionLogicalOperator\" class=\"right\">\n                                        Or\n                                    </label>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <!-- end main selection area -->\n        </table>\n    </div><br />\n\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    Characterization Criteria\n                </td>\n            </tr>\n            <!-- List Existing Queries -->\n            <tr *ngIf=\"query['characterizationQueries'].length\">\n                <td>\n                    <div class=\"mainBorder\">\n                        <table class=\"records\">\n                            <tr *ngFor=\"let characterization of query['characterizationQueries'];let characterizationIndex=index\">\n                                <td>\n                                    {{characterization.characterizationType}}\n                                </td>\n                                <td>\n                                    {{characterization.characterizationName}}\n                                </td>\n                                <td>\n                                    {{characterization.datumName}}\n                                </td>\n                                <td>\n                                    {{characterization.operand}}\n                                </td>\n                                <td>\n                                    {{characterization.datumValue}}\n                                </td>\n                                <td>\n                                    {{characterization.datumValueUnit}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editCharacterizationQuery(characterizationIndex)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <!-- End List Existing Queries -->\n\n            <!-- main selection area -->\n            <tr>\n                <td>\n                    <table class=\"inputs\">\n                        <tr>\n                            <td>\n                                <label for=\"characterizationQuery.characterizationType\">\n                                    <select (ngModelChange)=\"changeCharacterizationType($event,0)\" name=\"characterizationQuery.characterizationType\" id=\"characterizationQuery.characterizationType\" [(ngModel)]=\"characterizationQuery.characterizationType\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let type of setupData.characterizationTypes\" [ngValue]=\"type.value\">\n                                            {{type.label}}\n                                        </option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td *ngIf=\"setupData.characterizationNames.length\">\n                                <label for=\"characterizationQuery.characterizationName\">\n                                    <select (ngModelChange)=\"changeCharacterizationName($event)\" name=\"characterizationQuery.characterizationName\" id=\"characterizationQuery.characterizationName\" [(ngModel)]=\"characterizationQuery.characterizationName\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let name of setupData['characterizationNames']\" [ngValue]=\"name['value']\">\n                                            {{name['label']}}\n                                        </option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td *ngIf=\"setupData.characterizationDatumNames.length\">\n                                <label for=\"characterizationQuery.datumName\">\n                                    <select (ngModelChange)=\"changeCharacterizationDatumName($event)\" name=\"characterizationQuery.datumName\" id=\"characterizationQuery.datumName\" [(ngModel)]=\"characterizationQuery.datumName\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let datumName of setupData['characterizationDatumNames']\" [ngValue]=\"datumName['value']\">\n                                            {{datumName['label']}}\n                                        </option>\n                                    </select>\n                                </label>\n                            </td>\n                            <td *ngIf=\"setupData.characterizationDatumNames.length\">\n                                <label for=\"characterizationQuery.operand\">\n                                    <select name=\"characterizationQuery.operand\" id=\"characterizationQuery.operand\" [(ngModel)]=\"characterizationQuery.operand\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option [ngValue]=\"'='\">=</option>\n                                        <option [ngValue]=\"'>'\">&gt;</option>\n                                        <option [ngValue]=\"'>='\">&gt;=</option>\n                                        <option [ngValue]=\"'<'\">&lt;</option>\n                                        <option [ngValue]=\"'<='\">&lt;=</option>\n                                    </select>\n                                </label>\n\n                            </td>\n                            <td *ngIf=\"setupData.characterizationDatumNames.length\">\n                                <input type=\"number\" name=\"characterizationQuery.datumValue\" id=\"characterizationQuery.datumValue\" [(ngModel)]=\"characterizationQuery.datumValue\" size=\"15\">\n                            </td>\n                            <td *ngIf=\"setupData['characterizationDatumValueUnits'].length\">\n                                <label for=\"characterizationQuery.datumName\">\n                                    <select name=\"characterizationQuery.datumValueUnit\" id=\"characterizationQuery.datumValueUnit\" [(ngModel)]=\"characterizationQuery.datumValueUnit\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let datumValueUnit of setupData['characterizationDatumValueUnits']\" [ngValue]=\"datumValueUnit\">\n                                            {{datumValueUnit}}\n                                        </option>\n                                    </select>\n                                </label>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"characterizationEditIndex!=null\">\n                            <td [colspan]=\"6\">\n                                <button [disabled]=\"!isCharacterizationAddValid()\" (click)=\"saveCharacterizationQuery()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Update</button>\n                                <button (click)=\"resetCharacterizationQueries()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n                                <button (click)=\"deleteCharacterizationQuery()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                <button (click)=\"cancelCharacterizationQuery()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"characterizationEditIndex==null\">\n                            <td colspan=\"6\">\n                                <button [disabled]=\"!isCharacterizationAddValid()\" (click)=\"saveCharacterizationQuery()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                <button (click)=\"resetCharacterizationQueries()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"query.characterizationQueries.length>1\">\n                            <td colspan=\"6\">\n                                <div>\n                                    <input type=\"radio\" name=\"characterizationLogicalOperator\" id=\"characterizationLogicalOperator\" [value]=\"'and'\" [(ngModel)]=\"query.characterizationLogicalOperator\">\n                                    <label for=\"characterizationLogicalOperator\" class=\"right\">\n                                        And\n                                    </label>\n                                    <input type=\"radio\" name=\"characterizationLogicalOperator\" id=\"characterizationLogicalOperator\" [value]=\"'or'\" [(ngModel)]=\"query.characterizationLogicalOperator\">\n                                    <label for=\"characterizationLogicalOperator\" class=\"right\">\n                                        Or\n                                    </label>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <!-- end main selection area -->\n        </table>\n    </div><br />\n    <div>\n        <input type=\"radio\" name=\"logicalOperator\" id=\"logicalOperator\" [value]=\"'and'\" [(ngModel)]=\"query.logicalOperator\">\n        <label for=\"logicalOperator\" class=\"right\">\n            And\n        </label>\n        <input type=\"radio\" name=\"logicalOperator\" id=\"logicalOperator\" [value]=\"'or'\" [(ngModel)]=\"query.logicalOperator\">\n        <label for=\"logicalOperator\" class=\"right\">\n            Or\n        </label>\n    </div>\n    <div class=\"spacer center\"><i>Searching without any parameters returns all samples.</i></div>\n    <div>\n        <table class=\"submit\">\n            <tr>\n                <td>\n                    <button [disabled]=\"loading\" (click)=\"search()\" class=\"btn btn-primary float-right\">Search</button>\n                    <button [disabled]=\"loading\" (click)=\"reset()\" class=\"btn btn-danger float-right mr-1\">Reset</button>\n                </td>\n            </tr>\n        </table>\n\n    </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdvancedSearchComponent } from './advanced-search.component';\nconst routes: Routes = [{ path: '', component: AdvancedSearchComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdvancedSearchRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdvancedSearchComponent } from './advanced-search.component';\nimport { AdvancedSearchRoutingModule } from './advanced-search-routing.module';\nimport { SharedModule } from '../../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [AdvancedSearchComponent],\n    imports: [\n      CommonModule,\n      AdvancedSearchRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class AdvancedSearchModule { }\n\n"],"sourceRoot":"webpack:///"}