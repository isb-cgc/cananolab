{"version":3,"file":"src_app_cananolab-client_main-display_change-password_change-password_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACe;;;AACtE,MAAME,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,+EAAuBA;AAAA,CAAE,CAAC;AAMnE,MAAOI,2BAA2B;AAA3BA,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA;AAA2B;AAA3BA,2BAA2B;YAH5BL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,2BAA2B;IAAAE,UAAAA,yDAAAA;IAAAC,UAF5BR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACLsC;AAElB;;;;;;;;;ICiBlCW,4DAAAA,UAA0B;IAAAA,oDAAAA,4DAAuD;IAAAA,0DAAAA,EAAM;;;;;IACvFA,4DAAAA,cAA6C;IAAAA,oDAAAA,4DAAuD;IAAAA,0DAAAA,EAAM;;;;;IAI1GA,4DAAAA,UAA0B;IAAAA,oDAAAA,4DAAuD;IAAAA,0DAAAA,EAAM;;;;;IACvFA,4DAAAA,cAA6C;IAAAA,oDAAAA,4DAAuD;IAAAA,0DAAAA,EAAM;;;;;IAI1GA,4DAAAA,UAAuB;IAAAA,oDAAAA,8CAAyC;IAAAA,0DAAAA,EAAM;;;;;IACtEA,4DAAAA,cAA0C;IAAAA,oDAAAA,8CAAyC;IAAAA,0DAAAA,EAAM;;;;;IAIzFA,4DAAAA,UAA4B;IAAAA,oDAAAA,0DAAqD;IAAAA,0DAAAA,EAAM;;;;;IACvFA,4DAAAA,cAA+C;IAAAA,oDAAAA,0DAAqD;IAAAA,0DAAAA,EAAM;;;;;IAI1GA,4DAAAA,UAA0B;IAAAA,oDAAAA,GAA4D;IAAAA,0DAAAA,EAAM;;;;IAAlEA,uDAAAA,GAA4D;IAA5DA,gEAAAA,uEAA4D;;;;;IACtFA,4DAAAA,cAA6C;IAAAA,oDAAAA,GAA4D;IAAAA,0DAAAA,EAAM;;;;IAAlEA,uDAAAA,GAA4D;IAA5DA,gEAAAA,uEAA4D;;;;;IAIzGA,4DAAAA,UAAwB;IAAAA,oDAAAA,mCAA8B;IAAAA,0DAAAA,EAAM;;;;;IAC5DA,4DAAAA,cAA2C;IAAAA,oDAAAA,mCAA8B;IAAAA,0DAAAA,EAAM;;;ADlCnF,MAAOV,uBAAuB;EAiBlCW,YAAoBC,UAAsB,EAAUC,cAA6B,EAASC,MAAa,EAASC,UAAqB;IAAjH,eAAU,GAAVH,UAAU;IAAsB,mBAAc,GAAdC,cAAc;IAAwB,WAAM,GAANC,MAAM;IAAgB,eAAU,GAAVC,UAAU;IAhB1H,WAAM,GAAG,EAAE;IACX,eAAU,GAAG,EAAE;IACf,eAAU,GAAG,KAAK;IAClB,cAAS,GAAG,KAAK;IACjB,iBAAY,GAAG,KAAK;IACpB,iBAAY,GAAG,KAAK;IACpB,iBAAY,GAAG,KAAK;IACpB,mBAAc,GAAG,KAAK;IACtB,wBAAmB,GAAG,KAAK;IAC3B,oBAAe,GAAG,KAAK;IACvB,iBAAY,GAAG,CAAC;IAChB,UAAK,GAAG,EAAE;IACV,YAAO,GAAC,EAAE;IACV,iBAAY,GAAG,EAAE;IACjB,WAAM,GAAG,EAAE;EAE8H;EAEzIC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,WAAW,CAC5BC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,KAAK,GAAGD,MAAM,CAACC,KAAK;MAEzB,IAAIC,GAAG,GAAG,IAAI,CAACT,UAAU,CAACU,KAAK,CAACb,gFAAwC,EAAE,QAAQ,GAAG,IAAI,CAACW,KAAK,CAAC;MAChGC,GAAG,CAACH,SAAS,CACTM,IAAI,IAAG;QACL,IAAI,CAACC,eAAe,GAAGD,IAAI,CAAC,iBAAiB,CAAC;QAC9C,IAAI,CAACE,YAAY,GAAG,IAAI,CAACD,eAAe,GAAG,EAAE,GAAG,CAAC;MACnD,CAAC,EACDE,KAAK,IAAG;QACN,IAAI,CAACC,MAAM,GAAGD,KAAK;MACrB,CAAC,CACJ;IACH,CAAC,CACF;EACH;EAEAE,aAAa;IACXC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAEAC,qBAAqB;IACnB,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,IAAI,CAACC,mBAAmB,EAAE;MAC5B,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAAChB,KAAK,EAAE,IAAI,CAACiB,MAAM,CAAC;MACnDP,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;KAC/B,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;EAEvC;EAEAO,eAAe,CAACC,QAAQ;IACtB,IAAI,CAACF,MAAM,GAAGE,QAAQ;IACtB,IAAI,CAACL,mBAAmB,EAAE;EAC5B;EAEAM,mBAAmB,CAACD,QAAQ;IAC1B,IAAI,CAACE,UAAU,GAAGF,QAAQ;IAC1B,IAAI,CAACL,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmB;IACjB,IAAI,CAACQ,UAAU,GAAI,IAAI,CAACL,MAAM,KAAK,IAAI,CAACI,UAAU,IAAK,IAAI,CAACJ,MAAM,IAAI,EAAE;IACxE,IAAI,CAACM,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACP,MAAM,EAAE,QAAQ,CAAC;IAC7D,IAAI,CAACQ,YAAY,GAAG,IAAI,CAACD,gBAAgB,CAAC,IAAI,CAACP,MAAM,EAAE,WAAW,CAAC;IACnE,IAAI,CAACS,YAAY,GAAG,IAAI,CAACF,gBAAgB,CAAC,IAAI,CAACP,MAAM,EAAE,WAAW,CAAC;IACnE,IAAI,CAACU,YAAY,GAAG,IAAI,CAACH,gBAAgB,CAAC,IAAI,CAACP,MAAM,EAAE,QAAQ,CAAC;IAChE,IAAI,CAACW,cAAc,GAAG,IAAI,CAACJ,gBAAgB,CAAC,IAAI,CAACP,MAAM,EAAE,mBAAmB,CAAC;IAC7E,IAAI,CAACF,mBAAmB,GAAG,IAAI,CAACO,UAAU,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACE,YAAY,IAC5E,IAAI,CAACC,YAAY,IAAI,IAAI,CAACC,YAAY,IAAI,IAAI,CAACC,cAAc;EACpE;EAEAJ,gBAAgB,CAACK,KAAK,EAAEC,IAAI;IAC1B,QAAQA,IAAI;MACV,KAAK,mBAAmB;QACtB,OAAO,yCAAyC,CAACC,IAAI,CAACF,KAAK,CAAC;QAAC;MAC/D,KAAK,QAAQ;QACX,OAAO,IAAI,CAACE,IAAI,CAACF,KAAK,CAAC;MACzB,KAAK,WAAW;QACd,OAAO,OAAO,CAACE,IAAI,CAACF,KAAK,CAAC;MAC5B,KAAK,WAAW;QACd,OAAO,OAAO,CAACE,IAAI,CAACF,KAAK,CAAC;MAC5B,KAAK,QAAQ;QACX,OAAOA,KAAK,CAACG,MAAM,IAAI,IAAI,CAAC1B,YAAY,IAAIuB,KAAK,CAACG,MAAM,IAAI,EAAE;MAChE;QACE,OAAO,KAAK;IAAA;EAElB;EAEAhB,qBAAqB,CAAChB,KAAK,EAAEiB,MAAM;IACjC,IAAIgB,SAAS,GAAG;MACd,OAAO,EAAE,IAAI,CAACjC,KAAK;MACnB,aAAa,EAAE,IAAI,CAACiB;KACrB;IAED,IAAIlB,MAAM,GAAE,EAAE;IACdmC,MAAM,CAACC,IAAI,CAACF,SAAS,CAAC,CAACG,OAAO,CAACC,GAAG,IAAE;MAClCtC,MAAM,CAACuC,IAAI,CAACD,GAAG,GAAC,GAAG,GAAGJ,SAAS,CAACI,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,IAAIE,OAAO,GAAG,IAAInD,6DAAW,CAAE;MAC7B,cAAc,EAAE;KACf,CAAE;IACL,IAAIoD,OAAO,GAAC;MACVD,OAAO,EAACA,OAAO;MACfE,MAAM,EAAC;KACR;IACD,IAAI,CAAC9C,UAAU,CAAC+C,IAAI,CAACrD,sEAA8B,EAAEU,MAAM,CAAC6C,IAAI,CAAC,GAAG,CAAC,EAAEJ,OAAO,CAAC,CAAC1C,SAAS,CAACM,IAAI,IAAE;MAC9FM,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,IAAI,CAACkC,OAAO,GAAC,6BAA6B;MAC1C,IAAI,CAACnD,MAAM,CAACkB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,EACDJ,MAAM,IAAE;MACN,IAAIA,MAAM,CAACD,KAAK,CAACuC,IAAI,IAAE,SAAS,EAAE;QAChC,IAAI,CAACtC,MAAM,GAAC,EAAE;QACd,IAAI,CAACqC,OAAO,GAAC,6BAA6B;OAC3C,MACI;QACH,IAAI,CAACE,YAAY,GAACvC,MAAM,CAACD,KAAK;QAC9B,IAAI,CAACC,MAAM,GAACA,MAAM;;IAEtB,CAAC,CAAC;EACJ;;AA5HW5B,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAoE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbpC9D,4DAAAA,UAAK;MAGMA,oDAAAA,wBAAgB;MAAAA,0DAAAA,EAAK;MAAAA,uDAAAA,SAAI;MAE9BA,4DAAAA,cAAgG;MAE1FA,oDAAAA,GACJ;MAAAA,0DAAAA,EAAQ;MAGVA,4DAAAA,cAA+F;MAEzFA,oDAAAA,IACJ;MAAAA,0DAAAA,EAAQ;MAGVA,4DAAAA,WAAK;MACkBA,oDAAAA,8BAAsB;MAAAA,0DAAAA,EAAM;MAEjDA,4DAAAA,WAAK;MACHA,wDAAAA,6DAAuF;MACvFA,wDAAAA,6DAA0G;MAC5GA,0DAAAA,EAAM;MAENA,4DAAAA,WAAK;MACHA,wDAAAA,6DAAuF;MACvFA,wDAAAA,6DAA0G;MAC5GA,0DAAAA,EAAM;MAENA,4DAAAA,WAAK;MACHA,wDAAAA,6DAAsE;MACtEA,wDAAAA,6DAAyF;MAC3FA,0DAAAA,EAAM;MAENA,4DAAAA,WAAK;MACHA,wDAAAA,6DAAuF;MACvFA,wDAAAA,6DAA0G;MAC5GA,0DAAAA,EAAM;MAENA,4DAAAA,WAAK;MACHA,wDAAAA,6DAA4F;MAC5FA,wDAAAA,6DAA+G;MACjHA,0DAAAA,EAAM;MAENA,4DAAAA,WAAK;MACHA,wDAAAA,6DAA4D;MAC5DA,wDAAAA,6DAA+E;MACjFA,0DAAAA,EAAM;MAGRA,uDAAAA,UAAK;MAELA,4DAAAA,gBAAoD;MAG1BA,oDAAAA,oBAAY;MAAAA,0DAAAA,EAAQ;MAE1CA,4DAAAA,UAAI;MAEuBA,wDAAAA;QAAA,OAAiB+D,2BAAuB;MAAA,EAAC;QAAA;MAAA;MAAhE/D,0DAAAA,EAAwI;MAI9IA,4DAAAA,UAAI;MAEwBA,oDAAAA,wBAAgB;MAAAA,0DAAAA,EAAQ;MAElDA,4DAAAA,UAAI;MAEuBA,wDAAAA;QAAA,OAAiB+D,+BAA2B;MAAA,EAAC;QAAA;MAAA;MAApE/D,0DAAAA,EAAwJ;MAKhKA,uDAAAA,UAAI;MACJA,4DAAAA,iBAA4D;MAIEA,wDAAAA;QAAA,OAAS+D,mBAAe;MAAA,EAAC;MAAsC/D,oDAAAA,cAAM;MAAAA,0DAAAA,EAAS;MAExIA,4DAAAA,cAAgB;MAC0CA,wDAAAA;QAAA,OAAS+D,2BAAuB;MAAA,EAAC;MAAuC/D,oDAAAA,uBAAe;MAAAA,0DAAAA,EAAS;;;MA5ExJA,uDAAAA,GACJ;MADIA,gEAAAA,uBACJ;MAKIA,uDAAAA,GACJ;MADIA,gEAAAA,4BACJ;MAOQA,uDAAAA,GAAkB;MAAlBA,wDAAAA,0BAAkB;MACAA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;MAIrCA,uDAAAA,GAAkB;MAAlBA,wDAAAA,0BAAkB;MACAA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;MAIrCA,uDAAAA,GAAe;MAAfA,wDAAAA,uBAAe;MACGA,uDAAAA,GAAgB;MAAhBA,wDAAAA,wBAAgB;MAIlCA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;MACFA,uDAAAA,GAAqB;MAArBA,wDAAAA,6BAAqB;MAIvCA,uDAAAA,GAAkB;MAAlBA,wDAAAA,0BAAkB;MACAA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;MAIrCA,uDAAAA,GAAgB;MAAhBA,wDAAAA,wBAAgB;MACEA,uDAAAA,GAAiB;MAAjBA,wDAAAA,yBAAiB;MAoCjBA,uDAAAA,IAAiC;MAAjCA,wDAAAA,sCAAiC;;;;;;;;;;;;;;;;;;;;;;;;AClFpB;AAEgC;AACT;AACJ;;AAY5D,MAAOmE,oBAAoB;AAApBA,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA;AAAoB;AAApBA,oBAAoB;YAN7BH,yDAAY,EACZtE,wFAA2B,EAC3BuE,uDAAW,EACXC,+DAAmB;AAAA;;sHAGVC,oBAAoB;IAAAC,eARhB9E,+EAAuB;IAAAM,UAEpCoE,yDAAY,EACZtE,wFAA2B,EAC3BuE,uDAAW,EACXC,+DAAmB;EAAA;AAAA","sources":["./src/app/cananolab-client/main-display/change-password/change-password-routing.module.ts","./src/app/cananolab-client/main-display/change-password/change-password.component.ts","./src/app/cananolab-client/main-display/change-password/change-password.component.html","./src/app/cananolab-client/main-display/change-password/change-password.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangePasswordComponent } from './change-password.component';\nconst routes: Routes = [{ path: '', component: ChangePasswordComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChangePasswordRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Consts } from '../../../constants';\nimport { ApiService } from '../../common/services/api.service';\n\n\n@Component({\n  selector: 'canano-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  newPwd = \"\";\n  confirmPwd = \"\";\n  isPwdMatch = false;\n  hasNumber = false;\n  hasLowercase = false;\n  hasUppercase = false;\n  isGoodLength = false;\n  hasSpecialChar = false;\n  allValidationPassed = false;\n  isPrivilegeUser = false;\n  minCharCount = 8;\n  token = \"\";\n  message=\"\";\n  errorMessage = \"\";\n  errors = {};\n\n  constructor(private apiService: ApiService, private activatedRoute:ActivatedRoute,private router:Router,private httpClient:HttpClient) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams\n      .subscribe(params => {\n        this.token = params.token;\n\n        let url = this.apiService.doGet(Consts.QUERY_RESET_PASSWORD_ACCOUNT_TYPE, 'token=' + this.token);\n        url.subscribe(\n            data => {\n              this.isPrivilegeUser = data['isPrivilegeUser'];\n              this.minCharCount = this.isPrivilegeUser ? 15 : 8;\n            },\n            error => {\n              this.errors = error;\n            }\n        );\n      }\n    );\n  }\n\n  onCancelClick(): void {\n    console.log(\"Redirecting to home page...\");\n    this.router.navigate(['']);\n  }\n\n  onChangePasswordClick(): void {\n    this.checkAllValidations();\n    if (this.allValidationPassed) {\n      this.saveResetUserPassword(this.token, this.newPwd);\n      console.log(\"Send password!!\");\n    } else {\n      console.log(\"Password not ready??\");\n    }\n  }\n\n  onNewPwdChanged(newValue): void {\n    this.newPwd = newValue;\n    this.checkAllValidations();\n  }\n\n  onConfirmPwdChanged(newValue): void {\n    this.confirmPwd = newValue;\n    this.checkAllValidations();\n  }\n\n  checkAllValidations(): void {\n    this.isPwdMatch = (this.newPwd === this.confirmPwd) && this.newPwd != \"\";\n    this.hasNumber = this.checkValidations(this.newPwd, 'number');\n    this.hasLowercase = this.checkValidations(this.newPwd, 'lowercase');\n    this.hasUppercase = this.checkValidations(this.newPwd, 'uppercase');\n    this.isGoodLength = this.checkValidations(this.newPwd, 'length');\n    this.hasSpecialChar = this.checkValidations(this.newPwd, 'special-character');\n    this.allValidationPassed = this.isPwdMatch && this.hasNumber && this.hasLowercase\n      && this.hasUppercase && this.isGoodLength && this.hasSpecialChar;\n  }\n\n  checkValidations(value, type) {\n    switch (type) {\n      case 'special-character':\n        return /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(value);;\n      case 'number':\n        return /\\d/.test(value);\n      case 'lowercase':\n        return /[a-z]/.test(value);\n      case 'uppercase':\n        return /[A-Z]/.test(value);\n      case 'length':\n        return value.length >= this.minCharCount && value.length <= 32;\n      default:\n        return false\n    }\n  }\n\n  saveResetUserPassword(token, newPwd) {\n    var resetData = {\n      'token': this.token,\n      'newpassword': this.newPwd\n    }\n\n    let params =[];\n    Object.keys(resetData).forEach(key=> {\n      params.push(key+'=' + resetData[key])\n    })\n\n    let headers = new HttpHeaders( {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      } );\n    let options={\n      headers:headers,\n      method:'post',\n    }\n    this.httpClient.post(Consts.SAVE_RESET_PASSWORD_URL, params.join('&'), options).subscribe(data=> {\n      console.log(\"'Password Reset Successfully\");\n      this.message='Password Reset Successfully';\n      this.router.navigate(['']);\n    },\n    errors=> {\n      if (errors.error.text=='success') {\n        this.errors={};\n        this.message='Password Reset Successfully'\n      }\n      else {\n        this.errorMessage=errors.error;\n        this.errors=errors;\n      }\n    })\n  }\n\n}\n","<div>\n  <div>\n    <form novalidate style=\"margin-top: 10px; margin-left: 20px\">\n      <h3> Change Password </h3><br>\n\n      <span style=\"font-family:Helvetica,sans-serif;font-size:14px;color:blue;align-content: center;\">\n        <label ng-show=\"message!=''\">\n            {{message}}\n        </label>\n      </span>\n\n      <span style=\"font-family:Helvetica,sans-serif;font-size:14px;color:red;align-content: center;\">\n        <label ng-show=\"errorMessage!=''\">\n            {{errorMessage}}\n        </label>\n    \t</span>\n\n      <div>\n        <div class=\"message\">Password requirements:</div>\n\n        <div>\n          <div *ngIf=\"hasUppercase\">&#x2713; Must contain at least one UPPERCASE character.</div>\n          <div style=\"color:red\" *ngIf=\"!hasUppercase\">&#x2717; Must contain at least one UPPERCASE character.</div>\n        </div>\n\n        <div>\n          <div *ngIf=\"hasLowercase\">&#x2713; Must contain at least one LOWERCASE character.</div>\n          <div style=\"color:red\" *ngIf=\"!hasLowercase\">&#x2717; Must contain at least one LOWERCASE character.</div>\n        </div>\n\n        <div>\n          <div *ngIf=\"hasNumber\">&#x2713; Must contain at least one digit.</div>\n          <div style=\"color:red\" *ngIf=\"!hasNumber\">&#x2717; Must contain at least one digit.</div>\n        </div>\n\n        <div>\n          <div *ngIf=\"hasSpecialChar\">&#x2713; Must contain at least one special character.</div>\n          <div style=\"color:red\" *ngIf=\"!hasSpecialChar\">&#x2717; Must contain at least one special character.</div>\n        </div>\n\n        <div>\n          <div *ngIf=\"isGoodLength\">&#x2713; Must be between {{minCharCount}} and 32 characters.</div>\n          <div style=\"color:red\" *ngIf=\"!isGoodLength\">&#x2717; Must be between {{minCharCount}} and 32 characters.</div>\n        </div>\n\n        <div>\n          <div *ngIf=\"isPwdMatch\">&#x2713; Passwords must match.</div>\n          <div style=\"color:red\" *ngIf=\"!isPwdMatch\">&#x2717; Passwords must match.</div>\n        </div>\n      </div>\n\n      <br/>\n\n      <table width=\"100%\" align=\"center\" summary=\"layout\">\n        <tr>\n          <td class=\"cellLabel\" width=\"160\">\n            <label for=\"newPwd\">New Password</label>\n          </td>\n          <td>\n            <div>\n              <input type=\"password\" (ngModelChange)=\"onNewPwdChanged($event)\" name=\"newPwd\" (ngModel)=\"newPwd\" size=\"32\" ng-model-onblur id=\"newPwd\">\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <td class=\"cellLabel\">\n            <label for=\"confirmPwd\">Confirm Password</label>\n          </td>\n          <td>\n            <div>\n              <input type=\"password\" (ngModelChange)=\"onConfirmPwdChanged($event)\" name=\"confirmPwd\" (ngModel)=\"confirmPwd\" size=\"32\" ng-model-onblur id=\"confirmPwd\">\n            </div>\n          </td>\n        </tr>\n      </table>\n      <br>\n      <table width=\"100%\" class=\"invisibleTable\" summary=\"layout\">\n        <tbody>\n          <tr>\n          <td width=\"102\">\n            <button type='button' style=\"background-color: #A90101\" (click)=\"onCancelClick()\" class='btn-canano btn-canano-danger'>Cancel</button>\n          </td>\n          <td width=\"300\">\n            <button type='button' [disabled]=\"!allValidationPassed\" (click)=\"onChangePasswordClick()\" class='btn-canano btn-canano-primary'>Change Password</button>\n          </td>\n        </tr></tbody>\n      </table>\n    </form>\n  </div>\n</div>\n<!--<div id=\"loader\" ng-show=\"loader\">-->\n<!--  <div id=\"loaderText\">-->\n<!--    Loading-->\n<!--  </div>-->\n<!--  <div id=\"loaderGraphic\"></div>-->\n<!--</div>-->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChangePasswordRoutingModule } from './change-password-routing.module';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ChangePasswordComponent],\n  imports: [\n    CommonModule,\n    ChangePasswordRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class ChangePasswordModule { }\n"],"names":["RouterModule","ChangePasswordComponent","routes","path","component","ChangePasswordRoutingModule","forChild","imports","exports","HttpHeaders","Consts","i0","constructor","apiService","activatedRoute","router","httpClient","ngOnInit","queryParams","subscribe","params","token","url","doGet","QUERY_RESET_PASSWORD_ACCOUNT_TYPE","data","isPrivilegeUser","minCharCount","error","errors","onCancelClick","console","log","navigate","onChangePasswordClick","checkAllValidations","allValidationPassed","saveResetUserPassword","newPwd","onNewPwdChanged","newValue","onConfirmPwdChanged","confirmPwd","isPwdMatch","hasNumber","checkValidations","hasLowercase","hasUppercase","isGoodLength","hasSpecialChar","value","type","test","length","resetData","Object","keys","forEach","key","push","headers","options","method","post","SAVE_RESET_PASSWORD_URL","join","message","text","errorMessage","selectors","decls","vars","consts","template","ctx","CommonModule","FormsModule","ReactiveFormsModule","ChangePasswordModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}