{"version":3,"file":"src_app_cananolab-client_main-display_samples_characterization_characterization_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/characterization/characterization-routing.module.ts","./src/app/cananolab-client/main-display/samples/characterization/characterization.component.ts","./src/app/cananolab-client/main-display/samples/characterization/characterization.component.html","./src/app/cananolab-client/main-display/samples/characterization/characterization.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CharacterizationComponent } from './characterization.component';\nconst routes: Routes = [{ path: '', component: CharacterizationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CharacterizationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../assets/properties';\nimport { Consts } from '../../../../constants';\nimport { timeout } from 'rxjs/operators';\nimport { NavigationService } from '../../../common/services/navigation.service';\nimport { ApiService } from '../../../common/services/api.service';\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\nimport { UtilService } from '../../../common/services/util.service';\n@Component( {\n    selector: 'canano-characterization',\n    templateUrl: './characterization.component.html',\n    styleUrls: ['./characterization.component.scss']\n} )\nexport class CharacterizationComponent implements OnInit{\n    errors;\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleName;\n    tempData;\n    toolHeadingNameManage;\n    helpUrl = Consts.HELP_URL_SAMPLE_CHARACTERIZATION;\n    sectionToShow = 'all';\n    serverUrl = Properties.API_SERVER_URL;\n    setupData;\n\n    // This is all the data that is being displayed on the page!\n    characterizationData =\n        {\n        }\n    types = []\n    editUrl = false;\n\n    constructor( private statusDisplayService: StatusDisplayService, private apiService: ApiService, private navigationService: NavigationService, private router: Router, private route: ActivatedRoute, private utilService: UtilService  ){\n    }\n\n    ngOnInit(): void{\n        this.editUrl = this.statusDisplayService.isEditUrl();\n        this.navigationService.setCurrentSelectedItem(2);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                setTimeout(() => {\n                    Properties.SAMPLE_TOOLS = true;\n\n                }, 200)\n                this.sampleId = params['sampleId'];\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data => this.toolHeadingNameManage = 'Sample ' + data['sampleName'] + ' Characterization'\n                )\n                if (this.sampleId <= 0) {\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                } else {\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                }\n\n                // WJRL 2/2023: This called the setup edit page even in view mode:\n                let useURL = (this.editUrl) ? Consts.QUERY_CHARACTERIZATION_SETUP_EDIT : Consts.QUERY_CHARACTERIZATION_VIEW;\n\n                this.apiService.doGet(useURL, 'sampleId=' + this.sampleId).subscribe(data => {\n                    for (let x = 0; x < data.length; x++) {\n                        this.types.push(data[x]['type']);\n                        this.characterizationData[data[x]['type']] = [];\n                    }\n                    console.log(this.types)\n                    console.log(this.characterizationData)\n                    this.getCharacterizationData().subscribe( data => {\n                        this.tempData = data;\n                        this.separateDataSets(data);\n                    },\n                    err => {\n                        console.error( 'Error ', err );\n                    });\n                },\n                errors => {\n                    this.errors = errors;\n                })\n            }\n        );\n    }\n\n    // returns all data for this page //\n    getCharacterizationData() {\n        let results;\n        try{\n            results = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_VIEW, 'sampleId=' + this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            console.error( 'doGet Exception: ' + e );\n        }\n\n        return results;\n    }\n\n\n    getExperiments(data) {\n        let value = data.value;\n        let rows = [];\n        let rowLength = 0;\n        let headers = [];\n        value.forEach((data, index) => {\n            let key = Object.keys(data)[0];\n          headers.push(key);\n          rowLength = data[key].length;\n        })\n\n\n        for (let x = 0; x < rowLength; x++) {\n            let currentRow = [];\n            value.forEach((data, index) => {\n              let key = Object.keys(data)[0];\n              currentRow.push(data[key][x]);\n          })\n          rows.push(currentRow);\n        }\n        return [rows, headers]\n    }\n\n    // separates out all data into subsets of physico, in vivo, in vitro and other characterization types //\n    separateDataSets(data) {\n        // console.log(data)\n        // let types =['in vitro characterization','in vivo characterization','physico-chemical characterization']\n        data.forEach(item => {\n            item.charName = Object.keys(item.charsByAssayType)[0];\n            this.characterizationData[item.type].push(item)\n        })\n    }\n\n    // splits keywords for experiments and configurations //\n    splitKeywords(keywords) {\n        if (keywords) {\n            return keywords.split('\\n')\n        }\n        else {\n            return ''\n        }\n    }\n\n    // brings up new characterization form //\n    addCharacterization(type) {\n        this.router.navigate( ['home/samples/characterization/edit-characterization', Properties.CURRENT_SAMPLE_ID, type] );  // @FIXME  Don't hard code these\n    }\n\n    // brings up existing characterization form //\n    editCharacterization(charId, type, charClassName) {\n        this.router.navigate( ['home/samples/characterization/edit-characterization', Properties.CURRENT_SAMPLE_ID, charId, charClassName, type] );  // @FIXME  Don't hard code these\n    }\n\n\n    showSection(value) {\n        this.sectionToShow = value;\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'CHARACTERIZATION']\" [print]=\"true\"\n>\n</canano-main-display-heading>\n<ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\n    </li>\n    <li class=\"nav-item\" *ngFor=\"let type of types\">\n        <a class=\"nav-link\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection(type)\">{{type}}</a>\n    </li>\n</ul>\n <ng-container *ngFor=\"let a of types\">\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'|| sectionToShow==a\">\n\n    <div class=\"header\">\n        {{a}} <button *ngIf=\"editUrl\" class=\"btn btn-primary btn-sm\" (click)=\"addCharacterization(a)\">Add</button>\n    </div>\n    <ng-container *ngFor=\"let b of characterizationData[a]\">\n\n        <ng-container *ngFor=\"let c of b.charsByAssayType | keyvalue\">\n            <div class=\"blueHeader\">{{c.key}}</div><br />\n                <div *ngFor=\"let d of c.value | keyvalue;let last=last\" class=\"mainBorder\" [ngClass]=\"{'last':last}\">\n\n                    <div class=\"editButton\" *ngIf=\"editUrl\"><button class=\"btn btn-primary btn-sm\" (click)=\"editCharacterization(d.value.charId,a, d.value.charClassName)\">Edit</button></div>\n                    <table class=\"dataMain\">\n\n                        <ng-container *ngFor=\"let e of d.value['displayableItems'] | keyvalue\">\n\n                            <tr *ngIf=\"e.value.value.length\">\n                                <!--  Values like Point of Contact, Characterization Date Protocol -->\n                                <td class=\"label\">\n                                    {{e.value.name}}\n                                </td>\n                                <!--  This gets a big box -->\n                                <td *ngIf=\"e.value.name=='Experiment Configurations'\">\n                                    <table class=\"dataTable\" *ngIf=\"getExperiments(e.value); let experiment\">\n                                        <tr>\n                                            <th *ngFor=\"let header of experiment[1]\">\n                                                {{header}}\n                                            </th>\n                                        </tr>\n                                        <tr *ngFor=\"let row of experiment[0];let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                            <!-- These should be rendered with escapes -->\n                                            <td *ngFor=\"let column of row\" [innerHTML]=\"column\"></td>\n                                        </tr>\n                                    </table>\n                                </td>\n                                <!--  This also gets a big box -->\n                                <td *ngIf=\"e.value.name=='Characterization Results'\">\n                                    <ng-container *ngFor=\"let f of e.value.value\">\n                                        <label for=\"dataConditions\">\n                                                 Conditions\n                                        </label>\n                                        <div *ngIf=\"f['Data and Conditions']\">\n                                            <!--  These are the data tables -->\n                                            <div class=\"scroll-table-container\">\n                                                <table class=\"dataTable\" id=\"dataConditions\">\n                                                    <ng-container *ngFor=\"let entry of f['Data and Conditions']; let even=even\">\n                                                        <tr *ngIf=\"entry.name=='colTitles'\">\n                                                            <th *ngFor=\"let title of entry.value\">\n                                                                <span [innerHTML]=\"title\">{{title}}</span>\n                                                            </th>\n                                                        </tr>\n                                                        <tr [ngClass]=\"{'rowOdd':even}\" *ngIf=\"entry.name=='colValues'\">\n                                                            <td *ngFor=\"let title of entry.value\">\n                                                                <span [innerHTML]=\"title\">\n                                                                {{title}}\n                                                                </span>\n                                                            </td>\n                                                        </tr>\n                                                    </ng-container>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <!--  Next comes the files -->\n                                        <div *ngIf=\"f['Files']\"><br />\n                                            <table class=\"files\">\n                                                <tr>\n                                                    <th>\n                                                        Files\n                                                    </th>\n                                                    <th>\n                                                        Keywords\n                                                    </th>\n                                                    <th>\n                                                        Description\n                                                    </th>\n                                                </tr>\n                                                <tr *ngFor=\"let file of f['Files']\">\n                                                    <td>\n                                                        <!--  First column: image or file title  -->\n                                                        <!-- Image -->\n                                                        <a *ngIf=\"file['imageTitle'] !== undefined\"\n                                                           [href]=\"serverUrl+'/rest/sample/downloadImage?sampleId='+sampleId+'&fileId='+file.fileId\"\n                                                        >\n                                                            <img  [src]=\"serverUrl+'/rest/sample/downloadImage?sampleId='+sampleId+'&fileId='+file.fileId\" width=\"150\">\n                                                        </a>\n\n                                                        <!-- Text file -->\n                                                        <a  *ngIf=\"file['title'] !== undefined\"\n                                                            [href]=\"serverUrl+'/rest/sample/download?sampleId='+sampleId+'&fileId='+file.fileId\">\n                                                            {{file['title']}}\n                                                        </a>\n                                                        <!-- Everything else -->\n                                                        <a  *ngIf=\"file['title'] == undefined\"\n                                                        [href]=\"file['uri']\" target=\"_blank\" rel=\"nofollow noreferrer\">\n                                                        {{file['uri']}}\n                                                    </a>\n                                                    </td>\n                                                    <!--  Next column: keywords  -->\n                                                    <td>\n                                                        <ul>\n                                                            <li *ngFor=\"let keyword of splitKeywords(file['keywordsString'])\">\n                                                                <span [innerHtml]=\"keyword\"></span>\n                                                            </li>\n                                                        </ul>\n                                                    </td>\n                                                    <!--  Final column: description going into innerHTML  -->\n                                                    <td [innerHTML]=\"file['description']\"></td>\n                                                </tr>\n                                            </table>\n                                        </div><br />\n                                    </ng-container>\n                                </td>\n                                <!--  Another big box! -->\n                                <td *ngIf=\"e.value.name=='Properties'\">\n                                    <table class=\"dataTable\">\n                                        <tr *ngFor=\"let entry of e.value.value\">\n                                            <ng-container *ngIf=\"entry.name=='colTitles'\">\n                                                <th *ngFor=\"let title of entry.value\">\n                                                    <span [innerHTML]=\"title\">{{title}}</span>\n                                                </th>\n                                            </ng-container>\n                                            <ng-container *ngIf=\"entry.name=='colValues'\">\n                                                <td *ngFor=\"let title of entry.value\">\n                                                    {{title}}\n                                                </td>\n                                            </ng-container>\n                                        </tr>\n                                    </table>\n                                </td>\n                                <!--  This is just a line. Use innerHTML to parse out <sup> tags-->\n                                <td *ngIf=\"e.value.name!='Characterization Results'&&e.value.name!='Experiment Configurations'&&e.value.name!='Properties'\" [innerHTML]=\"e.value.value\"></td>\n                            </tr>\n                        </ng-container>\n                    </table>\n                </div>\n        </ng-container>\n    </ng-container>\n</div>\n</ng-container>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharacterizationComponent } from './characterization.component';\nimport { CharacterizationRoutingModule } from './characterization-routing.module';\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [CharacterizationComponent],\n    imports: [\n      CommonModule,\n      CharacterizationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\nexport class CharacterizationModule { }\n\n"],"names":["RouterModule","CharacterizationComponent","routes","path","component","CharacterizationRoutingModule","forChild","imports","exports","Properties","Consts","timeout","i0","constructor","statusDisplayService","apiService","navigationService","router","route","utilService","CURRENT_SAMPLE_ID","HELP_URL_SAMPLE_CHARACTERIZATION","API_SERVER_URL","ngOnInit","editUrl","isEditUrl","setCurrentSelectedItem","params","subscribe","setTimeout","SAMPLE_TOOLS","sampleId","getSampleName","data","toolHeadingNameManage","useURL","QUERY_CHARACTERIZATION_SETUP_EDIT","QUERY_CHARACTERIZATION_VIEW","doGet","x","length","types","push","characterizationData","console","log","getCharacterizationData","tempData","separateDataSets","err","error","errors","results","pipe","HTTP_TIMEOUT","e","getExperiments","value","rows","rowLength","headers","forEach","index","key","Object","keys","currentRow","item","charName","charsByAssayType","type","splitKeywords","keywords","split","addCharacterization","navigate","editCharacterization","charId","charClassName","showSection","sectionToShow","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","CharacterizationModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}