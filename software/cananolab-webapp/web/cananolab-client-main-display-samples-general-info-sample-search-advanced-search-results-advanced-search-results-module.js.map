{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-search-advanced-search-results-advanced-search-results-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdvancedSearchResultsComponent } from './advanced-search-results.component';\nconst routes: Routes = [{ path: '', component: AdvancedSearchResultsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdvancedSearchResultsRoutingModule { }\n","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport { AdvancedSearchService } from '../advanced-search/advanced-search.service';\nimport { Properties } from 'src/assets/properties';\nimport { SortState,Consts } from 'src/app/constants';\nimport { SearchResultsPagerService } from 'src/app/cananolab-client/common/components/search-results-pager/search-results-pager.service';\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\nimport { SampleAvailabilityDisplayService } from '../sample-search-results/sample-availability-display/sample-availability-display.service';\nimport { takeUntil, timeout } from 'rxjs/operators';\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n@Component({\n  selector: 'canano-advanced-search-results',\n  templateUrl: './advanced-search-results.component.html',\n  styleUrls: ['./advanced-search-results.component.scss']\n})\nexport class AdvancedSearchResultsComponent implements OnInit,OnDestroy {\n    columnHeadings = [\n    ];\n\n\n    sortingStates = [\n        SortState.NO_SORT\n    ];\n    data;\n    sampleIds;\n    loading;\n    searchResults;\n    pageCount = 10;\n    searchResultsCount = -1;\n    currentPage = 0;\n    searchResultsPageToDisplay;\n    maxPageLength = Properties.MAX_PAGE_LENGTH;\n    pageLength = Properties.DEFAULT_PAGE_LENGTH;\n    sortState = SortState;\n    properties = Properties;\n    userName;\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private advancedSearchService:AdvancedSearchService,\n        private searchResultsPagerService: SearchResultsPagerService,\n        private statusDisplayService: StatusDisplayService,\n        private apiService: ApiService,\n        private router: Router,\n        private sampleAvailabilityDisplayService: SampleAvailabilityDisplayService\n        ) { }\n\n\n\n    ngOnInit(): void {\n        setTimeout(()=> {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.data=this.advancedSearchService.getAdvancedSearchResults();\n        this.sampleIds=this.advancedSearchService.getSampleIds();\n\n        this.searchResults=this.data['resultTable']['dataRows'];\n        this.setupColumnHeadings();\n        this.searchResultsCount = this.searchResults.length;\n\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n\n        this.statusDisplayService.updateUserEmitter\n            .pipe(timeout(Properties.HTTP_TIMEOUT))\n            .subscribe((data) => {\n                this.userName = data;\n            });\n\n        this.searchResultsCount = this.searchResults.length;\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.onPageLengthChange();\n    }\n    navigateToSample(samp) {\n        this.router.navigate(['home/samples/view-sample', samp.sampleId]);\n    }\n\n    onAvailabilityClick(id) {\n        this.apiService\n            .doGet(Consts.QUERY_SAMPLE_AVAILABILITY, 'sampleId=' + id)\n            .subscribe(\n                (data) => {\n                    this.sampleAvailabilityDisplayService.displayStuff(data);\n                },\n                (err) => {\n                    console.log('ERROR QUERY_SAMPLE_AVAILABILITY: ', err);\n                }\n            );\n    }\n\n    setupPage() {\n        this.searchResultsPageToDisplay = this.searchResults.slice(\n            this.pageLength * this.currentPage,\n            this.pageLength * (this.currentPage + 1)\n        );\n    }\n\n    onPageLengthChange() {\n        if (this.pageLength < 1) {\n            this.pageLength = 1;\n        }\n        if (this.pageLength > this.maxPageLength) {\n            this.pageLength = this.maxPageLength;\n        }\n\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.searchResultsPagerService.setPageCount(this.pageCount);\n        this.setupPage(); // Sets this page as the currently vied search results.\n    }\n    downloadReady(event) {\n        if (event==true) {\n            this.loading=null;\n        }\n        if (event==false) {\n            this.loading=true;\n        }\n    }\n\n\n    onSortClick(i, key) {\n        if (i>=0) {\n            if (this.sortingStates[i]) {\n                // clicking on column that already is sorted on //\n                this.sortingStates[i] = this.sortingStates[i] == 1 ? 2 : 1;\n            } else {\n                // reset sorting states //\n                this.sortingStates.forEach((item, index) => {\n                    this.sortingStates[index] = 0;\n                });\n                this.sortingStates[i] = 1;\n            }\n            console.log(this.sortingStates)\n            if (this.sortingStates[i] == 1) {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) > this.getStringValue(b[key]) ? 1 : -1));\n            } else {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) < this.getStringValue(b[key]) ? 1 : -1));\n            }\n            this.setupPage();\n        }\n    }\n\n    getStringValue(val) {\n        if (val) {\n            return val.toString().toUpperCase()\n        }\n        return ''\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n\n    setupColumnHeadings(){\n        this.data['resultTable']['columnTitles'].forEach(item=> {\n            let heading={};\n            heading[item['value']]=item['label'];\n            this.sortingStates.push(SortState.NO_SORT);\n            this.columnHeadings.push(heading);\n        })\n    }\n\n    splitValue(val) {\n        return val.split('|')\n    }\n}\n","\n<canano-main-display-heading\n    [helpUrl]=\"'https://wiki.nci.nih.gov/display/caNanoLab/Managing+Samples+in+caNanoLab#ManagingSamplesincaNanoLab-AdvSearchSample'\"\n    [toolHeadingName]=\"'ADVANCED SAMPLE SEARCH RESULTS'\" [exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"sampleIds\" (downloadReady)=\"downloadReady($event)\"  [backUrl]=\"'home/samples/sample-advanced-search'\">\n</canano-main-display-heading>\n<!-- {{searchResults|json}}<Br />\n{{data|json}}<br /> -->\n<div class=\"mainSection\" *ngIf=\"searchResults\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n    <div *ngIf=\"!searchResults.length\" class=\"mainBorder\">\n        No search results found.\n    </div>\n\n    <div *ngIf=\"searchResults.length\">\n\n    <span class=\"ml-2\">\n        {{searchResults.length}} Item{{(searchResults.length > 1 ? 's' : '')}} found, displaying\n        {{(currentPage * pageLength) + 1}}\n        -{{ (((currentPage * pageLength) + pageLength) > searchResults.length) ? searchResults.length : (currentPage *\n        pageLength) + pageLength }}\n    </span>\n\n\n    <span class=\"search-results-pager\">\n        <!-- Page length number setting  -->\n        <span class=\"ml-5\">\n            Show\n            <input class=\"number-spinner rows-per-page-spinner\" min=\"1\" max=\"{{maxPageLength}}\" type=\"number\"\n                [(ngModel)]=\"pageLength\" (change)=\"onPageLengthChange()\">\n            entries\n        </span>\n\n        <!-- Pager buttons -->\n        <canano-search-results-pager style=\"float: right;\" [totalCount]=searchResultsCount\n            [startingPageLength]=pageLength></canano-search-results-pager>\n    </span>\n\n    <table class=\"dataTable\">\n        <!-- -----  Header row  ----- -->\n        <tr>\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <th *ngFor=\"let colKeyValue of col | keyvalue\" class=\"unselectable hand\"\n                    (click)=\"onSortClick(i, colKeyValue.key)\">\n                    <label for=\"sortClick\" class=\"hand\">\n                        {{ colKeyValue.value }}\n                        <span id=\"sortClick\" class=\"inline\">\n                            <span class=\"sortImages\" >\n                                <span *ngIf=\"sortingStates[i] === sortState.NO_SORT\">\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                    </svg>\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                    </svg>\n                                </span>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_UP\" width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                </svg>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_DOWN\"  width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                </svg>\n                            </span>\n                        </span>\n                    </label>\n                    <!-- No sorting for \"Actions\" column -->\n\n                    <!-- END Add sorting icons -->\n                </th>\n            </ng-container>\n        </tr>\n        <!-- -----  END Header row  ----- -->\n\n\n        <tr *ngFor=\"let samp of searchResultsPageToDisplay; let even=even; let odd=odd; let i=index\"\n            class=\"search-results-tr\" [ngClass]=\"{\n                '': even,\n                'rowOdd': odd\n            }\">\n\n\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <td *ngFor=\"let colKeyValue of col | keyvalue\">\n                    <span *ngIf=\"i>0\">\n                        <ng-container *ngFor=\"let val of samp[colKeyValue.key]\">\n                            <div *ngIf=\"splitValue(val) as arrayofValues\">\n                                <span [innerHtml]=\"arrayofValues[0]\"></span>\n                                <span *ngIf=\"arrayofValues.length>1\">\n                                    {{arrayofValues[1]}}\n                                </span>\n                            </div>\n                        </ng-container>\n                    </span>\n                    <span *ngIf=\"i==0\">\n                        <a (click)=\"navigateToSample(samp)\">\n                            {{samp[colKeyValue.key]}}\n                        </a>\n\n                    </span>\n                    <!-- {{splitValue(samp[colKeyValue.key])}} -->\n\n                </td>\n            </ng-container>\n        </tr>\n\n    </table><br />\n    <!-- Pager buttons -->\n    <canano-search-results-pager style=\"float: right; \" [totalCount]=searchResultsCount [startingPageLength]=pageLength>\n    </canano-search-results-pager>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdvancedSearchResultsComponent } from './advanced-search-results.component';\nimport { AdvancedSearchResultsRoutingModule } from './advanced-search-results-routing.module';\nimport { SharedModule } from '../../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n    declarations: [AdvancedSearchResultsComponent],\n    imports: [\n      CommonModule,\n      AdvancedSearchResultsRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class AdvnacedSearchResultsModule { }\n"],"sourceRoot":"webpack:///"}