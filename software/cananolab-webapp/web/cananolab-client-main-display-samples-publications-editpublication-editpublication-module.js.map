{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.pipe.ts","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.module.ts","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.component.ts","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.component.html","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-publications-editpublication-editpublication-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filtersamples'\n})\nexport class EditpublicationPipe implements PipeTransform {\n\n  transform(value, filterValue): unknown {\n      let array=[];\n      if (filterValue) {\n          value.forEach(item=> {\n              if (item.toLowerCase().indexOf(filterValue.toLowerCase())>-1) {\n                array.push(item)\n              }\n          })\n          return array\n      }\n      else {\n          return value\n      }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditpublicationComponent } from './editpublication.component';\nimport { EditpublicationRoutingModule } from './editpublication-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\nimport { EditpublicationPipe } from './editpublication.pipe';\nimport { DisclaimerModule } from 'src/app/cananolab-client/common/components/disclaimer/disclaimer.module';\n\n@NgModule({\n    declarations: [EditpublicationComponent,EditpublicationPipe],\n    imports: [\n      CommonModule,\n      EditpublicationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule,\n      DisclaimerModule\n    ]\n  })\n  export class EditpublicationModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router,ActivatedRoute, PRIMARY_OUTLET } from '@angular/router';\nimport { Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { EditpublicationPipe } from './editpublication.pipe';\n\n@Component({\n  selector: 'canano-editpublication',\n  templateUrl: './editpublication.component.html',\n  styleUrls: ['../../../../../btn-bravo-canano.scss','./editpublication.component.scss']\n})\nexport class EditpublicationComponent implements OnInit {\n    accessIndex;\n    authorIndex;\n    currentAuthor;\n    currentDropdownValues;\n    currentFile;\n    data;\n    dataTrailer;\n    errors;\n    fileName;\n    helpUrl = Consts.HELP_URL_SAMPLE_PUBLICATIONS;\n    message;\n    publicationId;\n    recipientList;\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleList;\n    samples;\n    setupData;\n    toolHeadingNameManage;\n    theAccess;\n    theFile;\n    type;\n    downloadUrl=Consts.QUERY_PUBLICATION_DOWNLOAD;\n    submitReviewButton=true;\n\n  constructor(private apiService:ApiService,private navigationService:NavigationService,private httpClient:HttpClient,private route:ActivatedRoute,private router:Router) { }\n\n  ngOnInit(): void {\n      console.log(Consts)\n    this.navigationService.setCurrentSelectedItem(3);\n    this.currentDropdownValues={};\n    this.recipientList;\n    this.errors={};\n    this.sampleList=[];\n    this.currentFile={\n        \"uriExternal\":false,\n\n\n    }\n    this.route.params.subscribe(\n        ( params: Params ) => {\n            this.sampleId=params['sampleId'];\n            this.type=params['type'];\n            this.publicationId=params['publicationId'];\n            if (this.sampleId) {\n                this.apiService.getSampleName(this.sampleId).subscribe(data=>this.toolHeadingNameManage='Edit '+data['sampleName']+' Publication')\n\n            }\n\n            if(\n                this.sampleId <= 0 ){\n                this.sampleId = Properties.CURRENT_SAMPLE_ID;\n            }else{\n                Properties.CURRENT_SAMPLE_ID = this.sampleId;\n            };\n\n            this.type=params['type'];\n            let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_SETUP,'');\n            url.subscribe(data=> {\n                if (this.sampleId) { Properties.SAMPLE_TOOLS = true; }\n                this.setupData=data;\n                this.setupData['otherSampleNames']=[];\n            },\n            error=> {\n                this.errors=error;\n            })\n\n            if (this.publicationId) {\n                if (this.publicationId!=-1) {\n                    this.toolHeadingNameManage='Edit Publication';\n\n                    var editUrl;\n                    if (this.sampleId) {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+this.publicationId+'&sampleId='+this.sampleId);\n                    }\n                    else {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+this.publicationId+'&sampleId=');\n                    }\n                    editUrl.subscribe(data=> {\n                        this.data=data;\n                        this.currentFile['uriExternal']=data['uriExternal'];\n                        this.currentFile['externalUrl']=data['uri'];\n                        this.errors={};\n                    },\n                    error=>{\n                        this.errors=error;\n                    })\n                }\n                else {\n                    this.toolHeadingNameManage='Create Publication';\n                    this.setupNewPublication();\n                }\n\n            }\n            else {\n                if (this.sampleId) {\n\n                }\n                else {\n                    console.log('completely new')\n                }\n                this.setupNewPublication();\n            }\n        }\n    );\n  }\n\n    addAccess() {\n        this.accessIndex=-1;\n        this.recipientList=null;\n        this.theAccess={\n                \"accessType\":\"\",\n                \"recipient\":\"\",\n                \"roleName\":\"\",\n                \"recipientDisplayName\":\"\"\n            }\n\n\n    }\n\n    addAuthor() {\n        this.authorIndex=-1;\n        this.currentAuthor={\n            \"firstName\":\"\",\n            \"lastName\":\"\",\n            \"initial\":\"\"\n        }\n    }\n\n    delete() {\n        if (confirm(\"Are you sure you wish to delete this publication?\")) {\n            let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_DELETE,this.data);\n            url.subscribe(data=> {\n                if (this.sampleId) {\n                    this.router.navigate( ['home/samples/publications', this.sampleId] );  // @FIXME  Don't hard code these\n                }\n                else {\n                    this.router.navigate( ['/home/publications'] );  // @FIXME  Don't hard code these\n                }\n            },\n            errors=> {\n                this.errors=errors;\n            })\n        };\n    };\n\n    editAccess(index,access) {\n        console.log(index,access)\n        this.accessIndex=index;\n        this.recipientList=null;\n        this.theAccess=JSON.parse(JSON.stringify(access));\n    }\n\n    editAuthor(index,author) {\n        this.authorIndex=index;\n        this.currentAuthor=JSON.parse(JSON.stringify(author));\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field,currentValue) {\n        this.currentDropdownValues[field]=currentValue;\n    };\n\n    cancelAuthor() {\n        this.authorIndex=null;\n    }\n\n    cancelAccess() {\n        this.accessIndex=null;\n    }\n\n    changeAccessType(event) {\n        this.recipientList=null;\n        this.theAccess.recipient='';\n        this.theAccess.roleName='';\n\n        if (event=='role') {\n            this.theAccess.recipient='ROLE_ANONYMOUS';\n            this.theAccess['recipientDisplayName']='public';\n            this.theAccess.roleName=\"R\";\n        }\n    }\n\n    deleteAuthor(index) {\n        if (confirm(\"Are you sure you wish to delete this author?\")) {\n            this.data['authors'].splice(index,1);\n            this.authorIndex=null;\n        }\n    }\n\n    deleteAccess() {\n        if (confirm(\"Are you sure you wish to delete this \" + this.theAccess.accessType + \"?\")) {\n            this.data['theAccess']=this.theAccess;\n            let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_DELETE_ACCESS,this.data);\n            url.subscribe(data=>{\n                this.data=data;\n                this.accessIndex=null;\n                this.errors={};\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n\n    }\n\n    getRecipientList() {\n        var url;\n        if (this.theAccess.accessType=='group') {\n            url = this.apiService.doGet(Consts.QUERY_GET_COLLABORATION_GROUPS,'searchStr=');\n        }\n        if (this.theAccess.accessType=='user') {\n            url = this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr=');\n        }\n        url.subscribe(data=> {\n            this.recipientList=data;\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n\n        })\n    }\n\n    getSampleList() {\n        let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_GET_SAMPLES,'searchStr=');\n        url.subscribe(data=> {\n            this.sampleList=data;\n        },\n        error=> {\n            this.errors=error;\n        })\n    }\n\n\n    lookupPubMedId(event) {\n        if (event.target.value!='') {\n            let category=JSON.parse(JSON.stringify(this.data.category));\n            let status=JSON.parse(JSON.stringify(this.data.status));\n            let getPubmedUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_GET_PUBMED_PUBLICATION,'pubmedId='+event.target.value);\n            getPubmedUrl.subscribe(data=> {\n                if (confirm(\"A database record with the same PubMed ID already exists.  Load saved information?\")) {\n                    var editUrl;\n                    if (this.sampleId) {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+data+'&sampleId='+this.sampleId);\n                    }\n                    else {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+data+'&sampleId=');\n                    }\n                    editUrl.subscribe(data=> {\n                        this.data=data;\n                        this.setupData['otherSampleNames']=this.data['otherSampleNames'];\n                        this.data['otherSampleNames']=[];\n                        this.authorIndex=null;\n                        this.accessIndex=null;\n                        this.errors={};\n                    },\n                    error=> {\n                        this.errors=error;\n\n                    })\n                }\n                else {\n                    this.retrieveRecordByPubmedId(event.target.value,category,status);\n                }\n            },\n            error=> {\n                this.retrieveRecordByPubmedId(event.target.value,category,status);\n            })\n        }\n\n    }\n\n    retrieveRecordByPubmedId(pubMedId,category,status) {\n        let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_GET_PUBMED_INFO,'pubmedId='+pubMedId);\n        url.subscribe(data=> {\n            this.authorIndex=null;\n            this.accessIndex=null;\n            this.data={\n                \"authors\":data['authors'],\n                \"otherSampleNames\":[],\n                \"pubMedId\":pubMedId,\n                \"category\":category,\n                \"status\":status,\n                \"description\":data['description'],\n                \"digitalObjectId\":data['domainFile']['digitalObjectId'],\n                \"endPage\":data['domainFile']['endPage'],\n                \"isPublic\":false,\n                \"journalName\":data['domainFile']['journalName'],\n                \"keywordsStr\":data['keywordsStr'],\n                \"startPage\":data['domainFile']['startPage'],\n                \"theAccess\":data['theAccess'],\n                \"title\":data['domainFile']['title'],\n                \"uriExternal\":data['domainFile']['uriExternal'],\n                \"volume\":data['domainFile']['volume'],\n                \"year\":data['domainFile']['year'],\n                \"groupAccesses\":[],\n                \"userAccesses\":[]\n            };\n\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n        })\n    }\n\n    resetPublication() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n    }\n\n    saveAuthor() {\n        if (this.authorIndex==-1) {\n            this.data.authors.push(this.currentAuthor);\n        }\n        else {\n            this.data['authors'][this.authorIndex]=this.currentAuthor;\n        }\n        this.authorIndex=null;\n    }\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'],newItem['value'])\n            this.setValue(newItem['field'],newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'],newItem['value']);\n        }\n    };\n\n    savePublication() {\n        console.log('upload file fifrst')\n    };\n\n    saveAccess() {\n        this.data['theAccess']=this.theAccess;\n        let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_SAVE_ACCESS,this.data);\n        url.subscribe(data=> {\n            this.data=data;\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n        });\n        this.accessIndex=null;\n    }\n\n    selectSamples() {\n        this.data.sampleNamesStr=this.samples.join('\\r');\n    }\n\n  setupNewPublication() {\n      this.data={\n          \"authors\":[],\n          \"theAccess\":{},\n          \"isPublic\":false,\n          \"otherSampleNames\":[],\n          \"status\":\"\",\n          \"title\":\"\",\n          \"uriExternal\":false,\n          \"year\":\"\",\n          \"category\":this.type,\n          \"sampleId\":this.sampleId,\n          \"researchAreas\":[],\n          \"userAccesses\":[],\n         \"groupAccesses\":[]\n      }\n      if (this.publicationId==-1) {\n        this.data['category']='';\n        this.data['sampleId']='';\n    }\n    console.log()\n      this.data['theAccess']={};\n      this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n  };\n\n  submit() {\n      if (this.theFile) {\n        this.theFile.append('uriExternal',this.currentFile['uriExternal']);\n        this.theFile.append('externalUrl',this.currentFile['externalUrl']);\n        let uploadFileUrl = this.httpClient.post(Consts.QUERY_UPLOAD_FILE,this.theFile);\n            uploadFileUrl.subscribe(data=> {\n            this.data['uri']=data['fileName'];\n            this.submitPublication();\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n        })\n      }\n      else {\n          if (this.currentFile['uriExternal']) {\n              if (this.currentFile['externalUrl']&& this.currentFile['externalUrl']!='') {\n                this.data['uriExternal']=true;\n                this.data['externalUrl']=this.currentFile['externalUrl'];\n              }\n          }\n          this.submitPublication();\n      }\n\n  }\n\n  submitPublication() {\n    this.data['sampleId']=this.sampleId;\n    let submitUrl = this.apiService.doPost(Consts.QUERY_PUBLICATION_SAVE,this.data);\n    submitUrl.subscribe(data=> {\n        if (this.sampleId) {\n            this.router.navigate( ['home/samples/publications', this.sampleId] );  // @FIXME  Don't hard code these\n        }\n        else {\n            if (this.publicationId==-1) {\n                this.router.navigate( ['home/samples/publications/publication', data[1]] );  // @FIXME  Don't hard code these\n                this.message='Publication successfully updated with the title '+this.data['title'];\n            }\n            else {\n                let editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+this.publicationId+'&sampleId=');\n                editUrl.subscribe(data=> {\n                    this.data=data;\n                    this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n\n                },\n                errors=> {\n                    this.errors=errors;\n                })\n                this.message='Publication successfully updated with the title '+this.data['title'];\n\n            }\n\n            setTimeout(function() {\n                document.getElementById('top').scrollIntoView();\n            },100);\n        }\n    },\n    error=> {\n        this.errors=error;\n\n    })\n  }\n\n\n    uploadFile(event) {\n        this.theFile = new FormData();\n        const tFile = event.target.files.item(0);\n        this.theFile.append('myFile', tFile, tFile.name);\n        this.theFile.append( 'uriExternal', 'false' );\n        this.theFile.append('authors',this.data['authors'])\n        this.theFile.append('theAccess',this.theAccess);\n        this.theFile.append('category',this.data['category']);\n        this.theFile.append('status',this.data['status']);\n  }\n\n\n  submitForReview() {\n      console.log(this.data)\n    let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_SUBMIT_REVIEW,{dataId:this.data.fileId,dataName:this.data.title,dataType:\"publication\"},'text');\n    url.subscribe(data=> {\n        this.submitReviewButton=false;\n    })\n}\n\n\n\n\n\n\n}\n","    <canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\"\n    id=\"top\"\n>\n</canano-main-display-heading>\n<div *ngIf=\"data&&setupData\">\n    <div class=\"mainSection\">\n        <div class=\"error\" *ngIf=\"errors['error']\">\n            {{errors['error']}}\n        </div>\n        <div class=\"error\" *ngIf=\"message\">\n            {{message}}\n        </div>\n        <form name=\"publicationForm\">\n            <div class=\"mainBorder\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"category\">\n                                Publication Type*\n                            </label>\n                        </td>\n                        <td>\n                            <select (ngModelChange)=\"addOtherValue('category',data.category)\" id=\"category\" name=\"data.category\" [(ngModel)]=\"data.category\">\n                                <option [selected]=\"data.category===''\" [ngValue]=\"''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['publicationCategories']\" [selected]=\"type==data.type\">{{type}}</option>\n                                <option>other</option>\n                            </select>\n                            <div *ngIf=\"data.category ==='other'\">\n                                <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Publication Type'\" [value]=\"currentDropdownValues['category']\" [field]=\"'data.category'\" [array]=\"'setupData.publicationCategories'\">\n\n                                </canano-other-dropdown>\n                            </div>\n                        </td>\n                        <td class=\"label\">\n                            <label for=\"status\">\n                                Publication Status*\n                            </label>\n                        </td>\n                        <td colspan=\"4\">\n                            <select (ngModelChange)=\"addOtherValue('status',data.status)\" id=\"category\" name=\"status\" [(ngModel)]=\"data.status\">\n                                <option [selected]=\"data.status===''\" [ngValue]=\"''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['publicationStatuses']\" [selected]=\"type==data.status\">{{type}}</option>\n                                <option>other</option>\n                            </select>\n                            <div *ngIf=\"data.status ==='other'\">\n                                <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Publication Status'\" [value]=\"currentDropdownValues['status']\" [field]=\"'data.status'\" [array]=\"'setupData.publicationStatuses'\">\n\n                                </canano-other-dropdown>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"pubMedId\">\n                                PubMed ID\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <a href=\"http://www.ncbi.nlm.nih.gov/pubmed/\" target=\"_blank\" rel=\"nofollow noreferrer\">Click to look up PubMed Identifier</a><br />\n                            <input (focusout)=\"lookupPubMedId($event)\" id=\"pubMedId\" type=\"text\" name=\"pubMedId\" size=\"70\" [(ngModel)]=\"data.pubMedId\"><br />\n                            <i>clicking outside of the text field after entering a valid PubMed ID enables auto-population of PubMed related fields</i>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"digitalObjectId\">\n                                Digital Object ID\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"digitalObjectId\" type=\"text\" name=\"digitalObjectId\" size=\"70\" [(ngModel)]=\"data.digitalObjectId\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"title\">\n                                Title*\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"title\" type=\"text\" name=\"title\" size=\"70\" [(ngModel)]=\"data.title\">\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"journal\">\n                                Journal\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"journal\" type=\"text\" name=\"journal\" size=\"70\" [(ngModel)]=\"data.journalName\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"year\">\n                                Year of Publication\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"year\" type=\"text\" name=\"year\" size=\"4\" [(ngModel)]=\"data.year\">\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"volume\">\n                                Volume\n                            </label>\n                        </td>\n                        <td>\n                            <input id=\"volume\" type=\"text\" name=\"volume\" size=\"6\" [(ngModel)]=\"data.volume\">\n                        </td>\n                        <td class=\"label\">\n                            <label for=\"startPage\">\n                                Start Page\n                            </label>\n                        </td>\n                        <td>\n                            <input id=\"startPage\" type=\"text\" name=\"startPage\" size=\"6\" [(ngModel)]=\"data.startPage\">\n                        </td>\n                        <td class=\"label\">\n                            <label for=\"endPage\">\n                                End Page\n                            </label>\n                        </td>\n                        <td>\n                            <input id=\"endPage\" type=\"text\" name=\"endPage\" size=\"6\" [(ngModel)]=\"data.endPage\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            Authors\n                        </td>\n                        <td colspan=\"5\">\n                            <button (click)=\"addAuthor()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"data['authors'].length\">\n                        <td></td>\n                        <td colspan=\"5\">\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th>Initials</th>\n                                    <th></th>\n                                </tr>\n                                <tr *ngFor=\"let author of data['authors'];let authorIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>\n                                        {{author.lastName}}\n                                    </td>\n                                    <td>\n                                        {{author.firstName}}\n                                    </td>\n                                    <td>\n                                        {{author.initial}}\n                                    </td>\n                                    <td>\n                                        <button (click)=\"editAuthor(authorIndex,author)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"authorIndex!=null\">\n                        <td></td>\n                        <td colspan=\"5\">\n                            <div class=\"mainBorder\">\n                            <table>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"lastName\">\n                                            Last Name\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <input type=\"text\" name=\"lastName\" [(ngModel)]=\"currentAuthor.lastName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"firstName\">\n                                            First Name\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <input type=\"text\" name=\"firstName\" [(ngModel)]=\"currentAuthor.firstName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"initial\">\n                                           Initials\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <input type=\"text\" name=\"initial\" [(ngModel)]=\"currentAuthor.initial\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"2\">\n                                        <br>\n                                         <div style=\"width:700px\">\n                                            <div>\n                                                Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                                                points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                                            </div>\n                                            <br>\n                                            <div>\n                                                <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                                                <b> * I have read and understood the message above.</b>\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteAuthor(authorIndex)\" [hidden]=\"authorIndex==-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td class=\"field\">\n                                        <button (click)=\"saveAuthor()\" [disabled]=\"currentAuthor.lastName=='' || currentAuthor.firstName=='' || !piiConfirmed\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelAuthor()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"keywordsStr\">\n                                Keywords<br />\n                                (one keyword per line)\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <textarea id=\"keywordsStr\" name=\"keywordsStr\" rows=\"5\" cols=\"70\" [(ngModel)]=\"data.keywordsStr\">\n                                {{data.keywordsStr}}\n                            </textarea>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"description\">\n                                Description\n                            </label>\n\n                        </td>\n                        <td colspan=\"5\">\n                            <textarea id=\"description\" name=\"description\" rows=\"5\" cols=\"70\" [(ngModel)]=\"data.description\">\n\n                            </textarea>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"researchAreas\">\n                                Research Category\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <select size=\"7\" id=\"researchAreas\" name=\"researchAreas\" multiple=\"multiple\" [(ngModel)]=\"data.researchAreas\">\n                                <option *ngFor=\"let area of setupData['publicationResearchAreas']\" [ngValue]=\"area\">{{area}}</option>\n                            </select>\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n            <div class=\"mainBorder\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">File</td>\n                        <td class=\"files\">\n                            <label for=\"fileUpload\">\n                                Upload\n                            </label>\n                            <input type=\"radio\" name=\"curentFile.uriExternal\" id=\"fileUpload\" [value]=\"false\" [(ngModel)]=\"currentFile.uriExternal\">\n                            &nbsp;\n                            &nbsp;\n                            <label for=\"fileURL\">\n                                Enter File URL\n                            </label>\n                            <input type=\"radio\" name=\"curentFile.uriExternal\" id=\"fileURL\" [value]=\"true\" [(ngModel)]=\"currentFile.uriExternal\">\n                            <br />\n                            <ng-container *ngIf=\"currentFile.uriExternal==1\">\n                                <input id=\"uriExternal\" *ngIf=\"currentFile.uriExternal==1\" type=\"text\" name=\"currentFile.externalUrl\" [(ngModel)]=\"currentFile.externalUrl\" size=\"60\">\n                                [<canano-disclaimer></canano-disclaimer>]\n                            </ng-container>\n                            <ng-container *ngIf=\"currentFile.uriExternal==0\">\n                                <input id=\"file\" (change)=\"uploadFile($event)\" type=\"file\" name=\"currentFile.uploadFile\" [(ngModel)]=\"currentFile.file\">\n                                <ng-container *ngIf=\"data['uri']\">\n                                    <br />\n                                    <a [href]=\"downloadUrl+'?fileId='+data.fileId\">{{data.uri}}</a>\n                                </ng-container>\n                            </ng-container>\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n\n            <div class=\"mainBorder\" *ngIf=\"sampleId\">\n                <table [ngClass]=\"{'otherSampleNames':!setupData['otherSampleNames'].length,'dataMain':setupData['otherSampleNames'].length}\">\n                    <tr *ngIf=\"!setupData['otherSampleNames'].length\">\n                        <td class=\"label\">\n                            There are no other samples to copy annotation to.\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"setupData['otherSampleNames'].length\">\n                        <td class=\"label\">\n                            <label for=\"otherSampleNames\">\n                                Copy to other samples with the same primary organization?\n                            </label>\n                        </td>\n                        <td>\n                            <select size=\"7\" id=\"otherSampleNames\" name=\"otherSampleNames\" multiple=\"multiple\" [(ngModel)]=\"data.otherSampleNames\">\n                                <option *ngFor=\"let s of setupData['otherSampleNames']\" [ngValue]=\"s\">{{s}}</option>\n                            </select>\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n\n            <div class=\"mainBorder\" *ngIf=\"!sampleId\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">\n                            Sample Name\n                        </td>\n                        <td>\n                            <textarea name=\"sampleName\" [(ngModel)]=\"data.sampleNamesStr\" rows=\"5\" cols=\"60\">\n\n                            </textarea><i>one name per line</i>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <button (click)=\"getSampleList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search for Samples</button>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"sampleList.length\">\n                        <td></td>\n                        <td>\n                            <table class=\"noSpacing\">\n                                <tr>\n                                    <td colspan=\"2\">\n                                        <label for=\"sampleFilter\">\n                                            Filter Samples\n                                        </label>\n                                        <input type=\"text\" name=\"sampleFilter\" id=\"sampleFilter\" [(ngModel)]=\"sampleFilter\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <select class=\"multiple\" name=\"samples\" [(ngModel)]=\"samples\" multiple=\"multiple\" size=\"10\">\n                                            <option *ngFor=\"let option of sampleList|filtersamples:sampleFilter\">\n                                                {{option}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"button\">\n                                        <button (click)=\"selectSamples()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Select</button>\n                                    </td>\n                                </tr>\n                            </table>\n\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n\n            <div class=\"mainBorder\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">\n                            Access to the Publication\n                        </td>\n                        <td>\n                            <button (click)=\"addAccess()\" [disabled]=\"data['title']=='' || data['status']==''||data['category']==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"data.groupAccesses.length\">\n                        <td></td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Group Name</th>\n                                    <th>Access</th>\n                                    <th></th>\n                                </tr>\n                                <tr *ngFor=\"let group of data.groupAccesses; let groupIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>{{group.recipientDisplayName}}</td>\n                                    <td>{{group.roleDisplayName}}</td>\n                                    <td>\n                                        <button *ngIf=\"group.recipient != 'ROLE_CURATOR'\" (click)=\"editAccess(groupIndex,group)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"data.userAccesses.length\">\n                        <td></td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>User Login Name\t</th>\n                                    <th>Access</th>\n                                    <th></th>\n                                </tr>\n                                <tr *ngFor=\"let user of data.userAccesses; let userIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>{{user.recipientDisplayName}}</td>\n                                    <td>{{user.roleDisplayName}}</td>\n                                    <td>\n                                        <button (click)=\"editAccess(userIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"accessIndex!=null\">\n                        <td></td>\n                        <td>\n                            <table class=\"authorForm\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"accessType\">\n                                            Access By*\n                                        </label>\n                                    </td>\n                                    <td class=\"field\" colspan=\"2\">\n                                        <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.group\" id=\"accessType.group\" [value]=\"'group'\" [(ngModel)]=\"theAccess['accessType']\">\n                                        <label for=\"accessType.group\" class=\"right\">\n                                            Collaboration Group\n                                        </label>\n                                        &nbsp;\n                                        <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.user\" id=\"accessType.user\" [value]=\"'user'\" [(ngModel)]=\"theAccess['accessType']\">\n                                        <label for=\"accessType.user\" class=\"right\">\n                                            User\n                                        </label>\n                                        &nbsp;\n                                        <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.role\" id=\"accessType.role\" [value]=\"'role'\" [(ngModel)]=\"theAccess['accessType']\">\n                                        <label for=\"accessType.role\" class=\"right\">\n                                            Public\n                                        </label>\n                                    </td>\n                                </tr>\n                                <tr *ngIf=\"theAccess.accessType&&theAccess.accessType!='role'\">\n                                    <td class=\"label\">\n                                        <label for=\"access.recipient\">\n                                            <span *ngIf=\"theAccess.accessType=='group'\">\n                                                Collaboration Group Name*\n                                            </span>\n                                            <span *ngIf=\"theAccess.accessType=='user'\">\n                                                User Login Name*\n                                            </span>\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <button (click)=\"getRecipientList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search</button>\n                                        <ng-container *ngIf=\"recipientList\">\n                                            &nbsp;&nbsp;\n                                            <select name=\"access.recipient\" [(ngModel)]=\"theAccess.recipient\">\n                                                <option [selected]=\"theAccess.recipient===''\" [ngValue]=\"''\">--select</option>\n                                                <ng-container *ngIf=\"theAccess.accessType=='group'\">\n                                                    <option *ngFor=\"let group of recipientList\">\n                                                        {{group}}\n                                                    </option>\n                                                </ng-container>\n                                                <ng-container *ngIf=\"theAccess.accessType=='user'\">\n                                                    <option *ngFor=\"let user of recipientList|keyvalue\" [ngValue]=\"user.key\">\n                                                        {{user.value}}\n                                                    </option>\n                                                </ng-container>\n\n                                            </select>\n                                        </ng-container>\n\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"access.roleName\">\n                                            Access to the Publication*\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <select [disabled]=\"theAccess.accessType=='role'\" name=\"access.roleName\" [(ngModel)]=\"theAccess.roleName\">\n                                            <option [selected]=\"theAccess.roleName===''\" [ngValue]=\"''\">--Select--</option>\n                                            <option *ngFor=\"let role of setupData.csmRoleNames | keyvalue\" [ngValue]=\"role.key\" [selected]=\"role.key==theAccess.roleName\">\n                                                {{role.value}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteAccess()\" *ngIf=\"accessIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td>\n                                        <button (click)=\"saveAccess()\" [disabled]=\"theAccess.accessType==''||theAccess.roleName==''||theAccess.recipient==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n            <br />\n            <div>\n                <table class=\"dataMain submit\">\n                    <tr>\n                        <td *ngIf=\"publicationId\" style=\"text-align:left;\">\n                            <button (click)=\"delete()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                        </td>\n                        <td>\n                            <button (click)=\"resetPublication()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                            <button [disabled]=\"data.category==''||data.status==''||data.title==''\" (click)=\"submit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditpublicationComponent } from './editpublication.component';\n\nconst routes: Routes = [{ path: '', component: EditpublicationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EditpublicationRoutingModule { }\n"],"sourceRoot":"webpack:///"}