{"version":3,"sources":["./src/app/cananolab-client/main-display/publications/search-publication/search-publication.service.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.service.ts","./src/app/cananolab-client/main-display/logout/logout.component.ts","./src/app/cananolab-client/main-display/publications/search-samples-by-publication/search-samples-by-publication.service.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search/advanced-search.service.ts","./src/app/cananolab-client/main-display/protocols/protocols.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchPublicationService {\r\n    publicationSearchResults;\r\n    constructor() { }\r\n\r\n    // gets publication search results //\r\n    getPublicationSearchResults() {\r\n        let results = JSON.parse(localStorage.getItem('cananolab_publication_search_results'));\r\n        if (results) {\r\n            return results\r\n        }\r\n        return this.publicationSearchResults;\r\n    }\r\n\r\n    // sets publicastion search results //\r\n    setPublicationSearchResults(data) {\r\n        this.publicationSearchResults=data;\r\n        localStorage.setItem('cananolab_publication_search_results',JSON.stringify(data));\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable( {\r\n    providedIn: 'root'\r\n} )\r\nexport class SampleSearchResultsService{\r\n\r\n    searchResults;\r\n    sampleIds=[];\r\n    searchResultsEmitter = new EventEmitter();\r\n\r\n    constructor(){\r\n    }\r\n\r\n    setSearchResults( sr ){\r\n        localStorage.setItem('cananolab_sample_search_results',JSON.stringify(sr));\r\n        this.searchResults = sr;\r\n        this.searchResultsEmitter.emit( sr );\r\n    }\r\n\r\n    getSearchResults(){\r\n        let results = JSON.parse(localStorage.getItem('cananolab_sample_search_results'));\r\n        if (results) {\r\n            return results\r\n        }\r\n        return this.searchResults;\r\n    }\r\n\r\n    getSampleIds() {\r\n        this.sampleIds=[];\r\n        let results = JSON.parse(localStorage.getItem('cananolab_sample_search_results'));\r\n        if (results) {\r\n            // do samples ids stuff\r\n        }\r\n        else {\r\n            results=this.searchResults;\r\n        }\r\n        results.forEach(sample=> {\r\n            this.sampleIds.push(sample.sampleId)\r\n        })\r\n        console.log(this.sampleIds)\r\n        return this.sampleIds;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../common/services/api.service';\r\nimport { Consts } from '../../../constants';\r\nimport { Properties } from '../../../../assets/properties';\r\nimport { StatusDisplayService } from '../../status-display/status-display.service';\r\nimport { Router } from '@angular/router';\r\nimport { UtilService } from '../../common/services/util.service';\r\nimport { TopMainMenuService } from '../../top-main-menu/top-main-menu.service';\r\n@Component({\r\n  selector: 'canano-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss']\r\n})\r\nexport class LogoutComponent implements OnInit{\r\n    properties=Properties;\r\n\r\n    constructor(private topMainMenuService:TopMainMenuService,private apiService: ApiService, private statusDisplayService: StatusDisplayService,\r\n                 private router: Router, private utilService: UtilService ){\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if(!Properties.LOGGING_OUT) {\r\n            Properties.LOGGING_OUT = true;\r\n            (Properties.LOGGED_IN) ? this.logOut() : console.log(\"User is already logged out.\");\r\n        } else {\r\n            console.log(\"Logout process underway elsewhere--updating display only.\");\r\n        }\r\n\r\n        this.topMainMenuService.showOnlyMenuItems([\r\n            'HOME','HELP','GLOSSARY','PROTOCOLS','SAMPLES','PUBLICATIONS','LOGIN'\r\n        ])\r\n        this.router.navigate( [this.utilService.getRouteByName( 'HOME' )] );\r\n    }\r\n\r\n    logOut() {\r\n        this.apiService.doPost( Consts.QUERY_LOGOUT, '' ).subscribe(\r\n            data => {\r\n                console.log(\"User logged out.\");\r\n                Properties.LOGGED_IN = false;\r\n                Properties.logged_in = false;\r\n                this.statusDisplayService.updateUser( 'guest' );\r\n                Properties.LOGGING_OUT = false;\r\n            },\r\n            err => {\r\n                this.statusDisplayService.updateUser( 'unknown' ); // CHECKME\r\n                console.log('ERROR doPost Consts.QUERY_LOGOUT: ');\r\n                console.log(err);\r\n                Properties.LOGGING_OUT = false;\r\n            }\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchSamplesByPublicationService {\r\n    samplesByPublicationResults;\r\n    constructor() { }\r\n\r\n    // gets publication search results //\r\n    getPublicationSearchResults() {\r\n        let results = JSON.parse(localStorage.getItem('cananolab_samples_by_publication_results'));\r\n        if (results) {\r\n            return results\r\n        }\r\n        return this.samplesByPublicationResults;\r\n    }\r\n\r\n    // sets publicastion search results //\r\n    setPublicationSearchResults(data) {\r\n        this.samplesByPublicationResults=data;\r\n        localStorage.setItem('cananolab_samples_by_publication_results',JSON.stringify(data));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdvancedSearchService {\r\n    sampleIds;\r\n    advancedSearchResults;\r\n    constructor() { }\r\n\r\n    getAdvancedSearchResults() {\r\n        let results = JSON.parse(localStorage.getItem('cananolab_advanced_search_results'));\r\n        if (results) {\r\n            return results\r\n        }\r\n        else {\r\n            return this.advancedSearchResults;\r\n        }\r\n    }\r\n\r\n    setAdvancedSearchResults(data) {\r\n        this.advancedSearchResults=data;\r\n        localStorage.setItem('cananolab_advanced_search_results',JSON.stringify(data));\r\n    }\r\n\r\n    getSampleIds() {\r\n        this.sampleIds=[];\r\n        let results = JSON.parse(localStorage.getItem('cananolab_advanced_search_results'));\r\n        if (results) {\r\n            // do samples ids stuff\r\n        }\r\n        else {\r\n            results=this.advancedSearchResults;\r\n        }\r\n        results['resultTable']['dataRows'].forEach(sample=> {\r\n            this.sampleIds.push(sample.sampleId)\r\n        })\r\n        return this.sampleIds;\r\n    }\r\n}\r\n","import { ProtocolScreen } from '../../../constants';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\n\r\n@Injectable( {\r\n    providedIn: 'root'\r\n} )\r\nexport class ProtocolsService{\r\n    currentProtocolInfo;\r\n    currentProtocolScreen = ProtocolScreen.PROTOCOL_SEARCH_INPUT_SCREEN;\r\n    protocolSearchResults;\r\n    currentProtocolScreenEmitter = new EventEmitter();\r\n\r\n    constructor(){\r\n    }\r\n\r\n    // gets publication search results //\r\n    getProtocolSearchResults() {\r\n        let results = JSON.parse(localStorage.getItem('cananolab_protocol_search_results'));\r\n        if (results) {\r\n            return results\r\n        }\r\n        return this.protocolSearchResults;\r\n    }\r\n\r\n    // sets publicastion search results //\r\n    setProtocolSearchResults(data) {\r\n        this.protocolSearchResults=data;\r\n        localStorage.setItem('cananolab_protocol_search_results',JSON.stringify(data));\r\n    }\r\n    setCurrentProtocolScreen( ps, info? ){\r\n        this.currentProtocolScreen = ps;\r\n        this.currentProtocolInfo = info;\r\n        if( info !== undefined){\r\n            this.currentProtocolScreenEmitter.emit( { ps, info } );\r\n        }else{\r\n            this.currentProtocolScreenEmitter.emit( { ps } );\r\n        }\r\n    }\r\n\r\n    getCurrentProtocolScreen(){\r\n        return this.currentProtocolScreen;\r\n    }\r\n\r\n    getCurrentProtocolInfo(){\r\n        return this.currentProtocolInfo;\r\n    }\r\n}\r\n\r\n//     PROTOCOL_SEARCH_RESULTS_SCREEN = 0;\r\n//     PROTOCOL_SEARCH_INPUT_SCREEN = 1;\r\n//     PROTOCOL_EDIT_SCREEN = 2;\r\n"],"sourceRoot":"webpack:///"}