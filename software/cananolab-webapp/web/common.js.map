{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/logout/logout.component.ts","./src/app/cananolab-client/main-display/protocols/protocols.service.ts","./src/app/cananolab-client/main-display/publications/search-publication/search-publication.service.ts","./src/app/cananolab-client/main-display/publications/search-samples-by-publication/search-samples-by-publication.service.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search/advanced-search.service.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../common/services/api.service';\nimport { Consts } from '../../../constants';\nimport { Properties } from '../../../../assets/properties';\nimport { StatusDisplayService } from '../../status-display/status-display.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from '../../common/services/util.service';\nimport { TopMainMenuService } from '../../top-main-menu/top-main-menu.service';\n@Component({\n  selector: 'canano-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit{\n    properties=Properties;\n\n    constructor(private topMainMenuService:TopMainMenuService, private apiService: ApiService,\n                private statusDisplayService: StatusDisplayService, private router: Router,\n                private utilService: UtilService ){\n    }\n\n    ngOnInit(): void {\n        if(Properties.LOGGED_IN) {\n            if(!Properties.LOGGING_OUT) {\n                Properties.LOGGING_OUT = true;\n                this.logOut();\n            } else {\n                console.log(\"Logout process underway already--updating display only.\");\n            }\n        } else {\n            console.log(\"User is already logged out.\");\n        }\n\n        this.topMainMenuService.showOnlyMenuItems([\n            'HOME','HELP','GLOSSARY','PROTOCOLS','SAMPLES','PUBLICATIONS','LOGIN'\n        ])\n        this.router.navigate( [this.utilService.getRouteByName( 'HOME' )] );\n    }\n\n    logOut() {\n        this.apiService.doPost( Consts.QUERY_LOGOUT, '' ).subscribe(\n            data => {\n                console.log(\"User logged out.\");\n                Properties.LOGGED_IN = false;\n                Properties.logged_in = false;\n                this.statusDisplayService.updateUser( 'guest' );\n                Properties.LOGGING_OUT = false;\n            },\n            err => {\n                this.statusDisplayService.updateUser( 'unknown' ); // CHECKME\n                console.log('ERROR doPost Consts.QUERY_LOGOUT: ');\n                console.log(err);\n                Properties.LOGGING_OUT = false;\n            }\n        );\n    }\n}\n","import { ProtocolScreen } from '../../../constants';\nimport { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class ProtocolsService{\n    currentProtocolInfo;\n    currentProtocolScreen = ProtocolScreen.PROTOCOL_SEARCH_INPUT_SCREEN;\n    protocolSearchResults;\n    currentProtocolScreenEmitter = new EventEmitter();\n\n    constructor(){\n    }\n\n    // gets publication search results //\n    getProtocolSearchResults() {\n        let results = JSON.parse(localStorage.getItem('cananolab_protocol_search_results'));\n        if (results) {\n            return results\n        }\n        return this.protocolSearchResults;\n    }\n\n    // sets publicastion search results //\n    setProtocolSearchResults(data) {\n        this.protocolSearchResults=data;\n        localStorage.setItem('cananolab_protocol_search_results',JSON.stringify(data));\n    }\n    setCurrentProtocolScreen( ps, info? ){\n        this.currentProtocolScreen = ps;\n        this.currentProtocolInfo = info;\n        if( info !== undefined){\n            this.currentProtocolScreenEmitter.emit( { ps, info } );\n        }else{\n            this.currentProtocolScreenEmitter.emit( { ps } );\n        }\n    }\n\n    getCurrentProtocolScreen(){\n        return this.currentProtocolScreen;\n    }\n\n    getCurrentProtocolInfo(){\n        return this.currentProtocolInfo;\n    }\n}\n\n//     PROTOCOL_SEARCH_RESULTS_SCREEN = 0;\n//     PROTOCOL_SEARCH_INPUT_SCREEN = 1;\n//     PROTOCOL_EDIT_SCREEN = 2;\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchPublicationService {\n    publicationSearchResults;\n    constructor() { }\n\n    // gets publication search results //\n    getPublicationSearchResults() {\n        let results = JSON.parse(localStorage.getItem('cananolab_publication_search_results'));\n        if (results) {\n            return results\n        }\n        return this.publicationSearchResults;\n    }\n\n    // sets publicastion search results //\n    setPublicationSearchResults(data) {\n        this.publicationSearchResults=data;\n        localStorage.setItem('cananolab_publication_search_results',JSON.stringify(data));\n    }\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchSamplesByPublicationService {\n    samplesByPublicationResults;\n    constructor() { }\n\n    // gets publication search results //\n    getPublicationSearchResults() {\n        let results = JSON.parse(localStorage.getItem('cananolab_samples_by_publication_results'));\n        if (results) {\n            return results\n        }\n        return this.samplesByPublicationResults;\n    }\n\n    // sets publication search results //\n    setPublicationSearchResults(data) {\n        this.samplesByPublicationResults = data;\n        localStorage.setItem('cananolab_samples_by_publication_results', JSON.stringify(data));\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvancedSearchService {\n    sampleIds;\n    advancedSearchResults;\n    constructor() { }\n\n    getAdvancedSearchResults() {\n        let results = JSON.parse(localStorage.getItem('cananolab_advanced_search_results'));\n        if (results) {\n            return results\n        }\n        else {\n            return this.advancedSearchResults;\n        }\n    }\n\n    setAdvancedSearchResults(data) {\n        this.advancedSearchResults=data;\n        localStorage.setItem('cananolab_advanced_search_results',JSON.stringify(data));\n    }\n\n    getSampleIds() {\n        this.sampleIds=[];\n        let results = JSON.parse(localStorage.getItem('cananolab_advanced_search_results'));\n        if (results) {\n            // do samples ids stuff\n        }\n        else {\n            results=this.advancedSearchResults;\n        }\n        results['resultTable']['dataRows'].forEach(sample=> {\n            this.sampleIds.push(sample.sampleId)\n        })\n        return this.sampleIds;\n    }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\n\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class SampleSearchResultsService{\n\n    searchResults;\n    sampleIds=[];\n    searchResultsEmitter = new EventEmitter();\n\n    constructor(){\n    }\n\n    setSearchResults( sr ){\n        localStorage.setItem('cananolab_sample_search_results',JSON.stringify(sr));\n        this.searchResults = sr;\n        this.searchResultsEmitter.emit( sr );\n    }\n\n    getSearchResults(){\n        let results = JSON.parse(localStorage.getItem('cananolab_sample_search_results'));\n        if (results) {\n            return results\n        }\n        return this.searchResults;\n    }\n\n    getSampleIds() {\n        this.sampleIds=[];\n        let results = JSON.parse(localStorage.getItem('cananolab_sample_search_results'));\n        if (results) {\n            // do samples ids stuff\n        }\n        else {\n            results=this.searchResults;\n        }\n        results.forEach(sample=> {\n            this.sampleIds.push(sample.sampleId)\n        })\n        console.log(this.sampleIds)\n        return this.sampleIds;\n    }\n}\n"],"names":["Consts","Properties","LogoutComponent","constructor","topMainMenuService","apiService","statusDisplayService","router","utilService","ngOnInit","LOGGED_IN","LOGGING_OUT","logOut","console","log","showOnlyMenuItems","navigate","getRouteByName","doPost","QUERY_LOGOUT","subscribe","data","logged_in","updateUser","err","selectors","decls","vars","template","styles","ProtocolScreen","EventEmitter","ProtocolsService","PROTOCOL_SEARCH_INPUT_SCREEN","getProtocolSearchResults","results","JSON","parse","localStorage","getItem","protocolSearchResults","setProtocolSearchResults","setItem","stringify","setCurrentProtocolScreen","ps","info","currentProtocolScreen","currentProtocolInfo","undefined","currentProtocolScreenEmitter","emit","getCurrentProtocolScreen","getCurrentProtocolInfo","factory","providedIn","SearchPublicationService","getPublicationSearchResults","publicationSearchResults","setPublicationSearchResults","SearchSamplesByPublicationService","samplesByPublicationResults","AdvancedSearchService","getAdvancedSearchResults","advancedSearchResults","setAdvancedSearchResults","getSampleIds","sampleIds","forEach","sample","push","sampleId","SampleSearchResultsService","setSearchResults","sr","searchResults","searchResultsEmitter","getSearchResults"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}