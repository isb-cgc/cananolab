{"version":3,"file":"src_app_cananolab-client_main-display_samples_sample-view_sample-view_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/sample-view/sample-view-routing.module.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.component.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.component.html","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleViewComponent } from './sample-view.component';\nconst routes: Routes = [{ path: '', component: SampleViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleViewRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../constants';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../assets/properties';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { NavigationService } from 'src/app/cananolab-client/common/services/navigation.service';\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\nimport { formatDate } from '@angular/common';\n@Component( {\n    selector: 'canano-sample-view',\n    templateUrl: './sample-view.component.html',\n    styleUrls: ['./sample-view.component.scss']\n} )\nexport class SampleViewComponent implements OnInit{\n    sampleId = -1;\n    sampleName = '';\n    sampleData;\n    loading;\n    helpUrl = Consts.HELP_URL_SAMPLE_VIEW;\n    toolHeadingNameViewSample = 'Sample ' + this.sampleName;\n    pointOfContacts = [];\n    keyWords = [];\n\n    constructor(\n        private navigationService:NavigationService,\n        private route: ActivatedRoute,\n        private httpClient: HttpClient,\n        private router: Router,\n        private apiService:ApiService){\n    }\n\n    ngOnInit(): void{\n        this.navigationService.setCurrentSelectedItem(0);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' ).replace( /&.*$/, '' );\n                this.sampleName = params['sampleId'].replace( /^.*sampleName=/, '' );\n                this.toolHeadingNameViewSample = 'Sample ' + this.sampleName;\n            } );\n\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' );\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                }\n\n                this.sampleData = this.getSampleViewData().subscribe(\n                    data => {\n                        Properties.SAMPLE_TOOLS = true;\n                        this.sampleData = data;\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                        // this.pointOfContacts = this.sampleData['pointOfContactMap'];\n                        this.getPointOfContacts(data);\n                        this.keyWords = this.sampleData.keywords.split( /<br>/ );\n                        this.toolHeadingNameViewSample = 'Sample ' + Properties.CURRENT_SAMPLE_NAME;\n                    } );\n            } );\n\n    }\n\n\n    downloadReady(event) {\n        if (event==true) {\n            this.loading=null;\n        }\n        if (event==false) {\n            this.loading=true;\n        }\n    }\n\n    topButtonGeneralInfo(){\n        this.router.navigate( ['home/samples/view-sample', '?sampleId=' + Properties.CURRENT_SAMPLE_ID] );\n    }\n    topButtonComposition(){\n        this.router.navigate( ['home/samples/composition', Properties.CURRENT_SAMPLE_ID] );\n    }\n\n    topButtonCharacterization(){\n        this.router.navigate( ['home/samples/characterization', Properties.CURRENT_SAMPLE_ID] );\n    }\n\n    topButtonPublication(){\n        this.router.navigate( ['home/samples/publications', Properties.CURRENT_SAMPLE_ID] );\n    }\n\n    getSampleViewData(){\n        let getUrl = Consts.QUERY_SAMPLE_VIEW;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n            console.log( curl );\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl, 'sampleId=' + this.sampleId);\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n    }\n\n    getPointOfContacts(data) {\n\n        data['pointOfContactMap']['contactPerson'].forEach((element, index) => {\n            let pointOfContact = {\n                primaryContact: data['pointOfContactMap']['primaryContact'][index],\n                organizationDisplayName: data['pointOfContactMap']['organizationDisplayName'][index],\n                role: data['pointOfContactMap']['role'][index],\n                contactPerson: data['pointOfContactMap']['contactPerson'][index]\n            };\n            this.pointOfContacts.push(pointOfContact);\n        });\n    }\n\n    dateFormat(date) {\n        if (date) {\n            return formatDate(date, 'shortDate', 'en-US')\n        }\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameViewSample\"\n    [exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"[sampleId]\" (downloadReady)=\"downloadReady($event)\" [backUrl]=\"'home/samples/sample-search'\">\n</canano-main-display-heading>\n<div class=\"mainSection\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n<div class=\"mainBorder\">\n    <table class=\"dataMain\">\n        <tr>\n            <td class=\"label\">\n                Sample Name\n            </td>\n            <td>\n                {{sampleData['sampleName']}}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                Created Date\n            </td>\n            <td>\n                  {{dateFormat(sampleData['createdDate'])}}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                Keywords\n            </td>\n            <td>\n                <div *ngFor=\"let keyword of keyWords\" [innerHTML]=\"keyword\"></div>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                Point of Contacts\n            </td>\n            <td>\n                <table class=\"dataTable\">\n                    <tr>\n                        <th>\n                            Primary Contact\n                        </th>\n                        <th>\n                            Contact Person\n                        </th>\n                        <th>\n                            Organization\n                        </th>\n                        <th>\n                            Role\n                        </th>\n                    </tr>\n                    <tr *ngFor=\"let contact of pointOfContacts\">\n                        <td>\n                            <ng-container *ngIf=\"contact.primaryContact\">\n                                Yes\n                            </ng-container>\n                            <ng-container *ngIf=\"!contact.primaryContact\">\n                                No\n                            </ng-container>\n                        </td>\n                        <td [innerHtml]=\"contact.contactPerson\"></td>\n                        <td [innerHtml]=\"contact.organizationDisplayName\"></td>\n                        <td [innerHtml]=\"contact.role\"></td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleViewComponent } from './sample-view.component';\nimport { SampleViewRoutingModule } from './sample-view-routing.module';\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [SampleViewComponent],\n    imports: [\n      CommonModule,\n      SampleViewRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\nexport class SampleViewModule { }\n\n"],"names":["RouterModule","SampleViewComponent","routes","path","component","SampleViewRoutingModule","forChild","imports","exports","Consts","Properties","HttpHeaders","formatDate","i0","constructor","navigationService","route","httpClient","router","apiService","HELP_URL_SAMPLE_VIEW","sampleName","ngOnInit","setCurrentSelectedItem","params","subscribe","sampleId","replace","toolHeadingNameViewSample","CURRENT_SAMPLE_ID","sampleData","getSampleViewData","data","SAMPLE_TOOLS","CURRENT_SAMPLE_NAME","getPointOfContacts","keyWords","keywords","split","downloadReady","event","loading","topButtonGeneralInfo","navigate","topButtonComposition","topButtonCharacterization","topButtonPublication","getUrl","QUERY_SAMPLE_VIEW","DEBUG_CURL","curl","console","log","headers","options","method","results","doGet","e","error","forEach","element","index","pointOfContact","primaryContact","organizationDisplayName","role","contactPerson","pointOfContacts","push","dateFormat","date","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","SampleViewModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}