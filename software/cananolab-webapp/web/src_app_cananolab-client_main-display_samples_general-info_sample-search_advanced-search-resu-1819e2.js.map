{"version":3,"file":"src_app_cananolab-client_main-display_samples_general-info_sample-search_advanced-search-resu-1819e2.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/advanced-search-results/advanced-search-results.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdvancedSearchResultsComponent } from './advanced-search-results.component';\nconst routes: Routes = [{ path: '', component: AdvancedSearchResultsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdvancedSearchResultsRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AdvancedSearchService } from '../advanced-search/advanced-search.service';\nimport { Properties } from 'src/assets/properties';\nimport { SortState, Consts } from 'src/app/constants';\nimport { SearchResultsPagerService } from 'src/app/cananolab-client/common/components/search-results-pager/search-results-pager.service';\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\nimport { SampleAvailabilityDisplayService } from '../sample-search-results/sample-availability-display/sample-availability-display.service';\nimport { takeUntil, timeout } from 'rxjs/operators';\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { timeoutWith } from 'rxjs/operators'\nimport { throwError } from 'rxjs'\n\n@Component({\n  selector: 'canano-advanced-search-results',\n  templateUrl: './advanced-search-results.component.html',\n  styleUrls: ['./advanced-search-results.component.scss']\n})\nexport class AdvancedSearchResultsComponent implements OnInit, OnDestroy {\n    columnHeadings = [\n    ];\n\n\n    sortingStates = [\n        SortState.NO_SORT\n    ];\n    data;\n    helpUrl = Consts.HELP_URL_SAMPLE_SEARCH_RESULTS;\n    toolHeadingName = 'Advanced Sample Search Results';\n    sampleIds;\n    loading;\n    searchResults;\n    pageCount = 10;\n    searchResultsCount = -1;\n    currentPage = 0;\n    searchResultsPageToDisplay;\n    maxPageLength = Properties.MAX_PAGE_LENGTH;\n    pageLength = Properties.DEFAULT_PAGE_LENGTH;\n    sortState = SortState;\n    properties = Properties;\n    userName;\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private advancedSearchService: AdvancedSearchService,\n        private searchResultsPagerService: SearchResultsPagerService,\n        private statusDisplayService: StatusDisplayService,\n        private apiService: ApiService,\n        private router: Router,\n        private sampleAvailabilityDisplayService: SampleAvailabilityDisplayService\n        ) { }\n\n\n\n    ngOnInit(): void {\n        setTimeout(() => {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.data = this.advancedSearchService.getAdvancedSearchResults();\n        this.sampleIds = this.advancedSearchService.getSampleIds();\n\n        this.searchResults = this.data['resultTable']['dataRows'];\n        this.setupColumnHeadings();\n        this.searchResultsCount = this.searchResults.length;\n\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n\n        this.statusDisplayService.updateUserEmitter\n            .subscribe((data) => {\n                this.userName = data;\n            });\n\n        this.searchResultsCount = this.searchResults.length;\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.onPageLengthChange();\n    }\n    navigateToSample(samp) {\n        this.router.navigate(['home/samples/view-sample', samp.sampleId]);\n    }\n\n    onAvailabilityClick(id) {\n        this.apiService\n            .doGet(Consts.QUERY_SAMPLE_AVAILABILITY, 'sampleId=' + id)\n            .subscribe(\n                (data) => {\n                    this.sampleAvailabilityDisplayService.displayStuff(data);\n                },\n                (err) => {\n                    console.log('ERROR QUERY_SAMPLE_AVAILABILITY: ', err);\n                }\n            );\n    }\n\n    setupPage() {\n        this.searchResultsPageToDisplay = this.searchResults.slice(\n            this.pageLength * this.currentPage,\n            this.pageLength * (this.currentPage + 1)\n        );\n    }\n\n    onPageLengthChange() {\n        if (this.pageLength < 1) {\n            this.pageLength = 1;\n        }\n        if (this.pageLength > this.maxPageLength) {\n            this.pageLength = this.maxPageLength;\n        }\n\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.searchResultsPagerService.setPageCount(this.pageCount);\n        this.setupPage(); // Sets this page as the currently vied search results.\n    }\n    downloadReady(event) {\n        if (event == true) {\n            this.loading = null;\n        }\n        if (event == false) {\n            this.loading = true;\n        }\n    }\n\n\n    onSortClick(i, key) {\n        if (i >= 0) {\n            if (this.sortingStates[i]) {\n                // clicking on column that already is sorted on //\n                this.sortingStates[i] = this.sortingStates[i] == 1 ? 2 : 1;\n            } else {\n                // reset sorting states //\n                this.sortingStates.forEach((item, index) => {\n                    this.sortingStates[index] = 0;\n                });\n                this.sortingStates[i] = 1;\n            }\n            console.log(this.sortingStates)\n            if (this.sortingStates[i] == 1) {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) > this.getStringValue(b[key]) ? 1 : -1));\n            } else {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) < this.getStringValue(b[key]) ? 1 : -1));\n            }\n            this.setupPage();\n        }\n    }\n\n    getStringValue(val) {\n        if (val) {\n            return val.toString().toUpperCase()\n        }\n        return ''\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n\n    setupColumnHeadings(){\n        this.data['resultTable']['columnTitles'].forEach(item => {\n            let heading = {};\n            heading[item['value']] = item['label'];\n            this.sortingStates.push(SortState.NO_SORT);\n            this.columnHeadings.push(heading);\n        })\n    }\n\n    splitValue(val) {\n        return val.split('|')\n    }\n}\n","\n<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingName\"\n    [exportXML]=\"true\"\n    [exportJSON]=\"true\"\n    [sampleIds]=\"sampleIds\"\n    (downloadReady)=\"downloadReady($event)\"\n    [backUrl]=\"'home/samples/sample-advanced-search'\">\n</canano-main-display-heading>\n<!-- {{searchResults|json}}<Br />\n{{data|json}}<br /> -->\n<div class=\"mainSection\" *ngIf=\"searchResults\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n    <div *ngIf=\"!searchResults.length\" class=\"mainBorder\">\n        No search results found.\n    </div>\n\n    <div *ngIf=\"searchResults.length\">\n\n    <span class=\"ml-2\">\n        {{searchResults.length}} Item{{(searchResults.length > 1 ? 's' : '')}} found, displaying\n        {{(currentPage * pageLength) + 1}}\n        -{{ (((currentPage * pageLength) + pageLength) > searchResults.length) ? searchResults.length : (currentPage *\n        pageLength) + pageLength }}\n    </span>\n\n\n    <span class=\"search-results-pager\">\n        <!-- Page length number setting  -->\n        <span class=\"ml-5\">\n            Show\n            <input class=\"number-spinner rows-per-page-spinner\" min=\"1\" max=\"{{maxPageLength}}\" type=\"number\"\n                [(ngModel)]=\"pageLength\" (change)=\"onPageLengthChange()\">\n            entries\n        </span>\n\n        <!-- Pager buttons -->\n        <canano-search-results-pager style=\"float: right;\" [totalCount]=searchResultsCount\n            [startingPageLength]=pageLength></canano-search-results-pager>\n    </span>\n\n    <table class=\"dataTable\">\n        <!-- -----  Header row  ----- -->\n        <tr>\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <th *ngFor=\"let colKeyValue of col | keyvalue\" class=\"unselectable hand\"\n                    (click)=\"onSortClick(i, colKeyValue.key)\">\n                    <label for=\"sortClick\" class=\"hand\">\n                        {{ colKeyValue.value }}\n                        <span id=\"sortClick\" class=\"inline\">\n                            <span class=\"sortImages\" >\n                                <span *ngIf=\"sortingStates[i] === sortState.NO_SORT\">\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                    </svg>\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                    </svg>\n                                </span>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_UP\" width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                </svg>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_DOWN\"  width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                </svg>\n                            </span>\n                        </span>\n                    </label>\n                    <!-- No sorting for \"Actions\" column -->\n\n                    <!-- END Add sorting icons -->\n                </th>\n            </ng-container>\n        </tr>\n        <!-- -----  END Header row  ----- -->\n\n\n        <tr *ngFor=\"let samp of searchResultsPageToDisplay; let even=even; let odd=odd; let i=index\"\n            class=\"search-results-tr\" [ngClass]=\"{\n                '': even,\n                'rowOdd': odd\n            }\">\n\n\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <td *ngFor=\"let colKeyValue of col | keyvalue\">\n                    <span *ngIf=\"i>0\">\n                        <ng-container *ngFor=\"let val of samp[colKeyValue.key]\">\n                            <div *ngIf=\"splitValue(val) as arrayofValues\">\n                                <span [innerHtml]=\"arrayofValues[0]\"></span>\n                                <span *ngIf=\"arrayofValues.length>1\">\n                                    {{arrayofValues[1]}}\n                                </span>\n                            </div>\n                        </ng-container>\n                    </span>\n                    <span *ngIf=\"i==0\">\n                        <a (click)=\"navigateToSample(samp)\">\n                            {{samp[colKeyValue.key]}}\n                        </a>\n\n                    </span>\n                    <!-- {{splitValue(samp[colKeyValue.key])}} -->\n\n                </td>\n            </ng-container>\n        </tr>\n\n    </table><br />\n    <!-- Pager buttons -->\n    <canano-search-results-pager style=\"float: right; \" [totalCount]=searchResultsCount [startingPageLength]=pageLength>\n    </canano-search-results-pager>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdvancedSearchResultsComponent } from './advanced-search-results.component';\nimport { AdvancedSearchResultsRoutingModule } from './advanced-search-results-routing.module';\nimport { SharedModule } from '../../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n    declarations: [AdvancedSearchResultsComponent],\n    imports: [\n      CommonModule,\n      AdvancedSearchResultsRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class AdvnacedSearchResultsModule { }\n"],"names":["RouterModule","AdvancedSearchResultsComponent","routes","path","component","AdvancedSearchResultsRoutingModule","forChild","imports","exports","Properties","SortState","Consts","takeUntil","Subject","i0","constructor","advancedSearchService","searchResultsPagerService","statusDisplayService","apiService","router","sampleAvailabilityDisplayService","NO_SORT","HELP_URL_SAMPLE_SEARCH_RESULTS","MAX_PAGE_LENGTH","DEFAULT_PAGE_LENGTH","ngOnInit","setTimeout","SAMPLE_TOOLS","data","getAdvancedSearchResults","sampleIds","getSampleIds","searchResults","setupColumnHeadings","searchResultsCount","length","currentPageChangeEmitter","pipe","ngUnsubscribe","subscribe","currentPage","setupPage","updateUserEmitter","userName","pageCount","Math","ceil","pageLength","onPageLengthChange","navigateToSample","samp","navigate","sampleId","onAvailabilityClick","id","doGet","QUERY_SAMPLE_AVAILABILITY","displayStuff","err","console","log","searchResultsPageToDisplay","slice","maxPageLength","setPageCount","downloadReady","event","loading","onSortClick","i","key","sortingStates","forEach","item","index","sort","a","b","getStringValue","val","toString","toUpperCase","ngOnDestroy","next","complete","heading","push","columnHeadings","splitValue","split","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","AdvnacedSearchResultsModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}