{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/composition/functionalizingentity/functionalizingentity.component.ts","./src/app/cananolab-client/main-display/samples/composition/functionalizingentity/functionalizingentity.component.html","./src/app/cananolab-client/main-display/samples/composition/functionalizingentity/functionalizingentity.module.ts","./src/app/cananolab-client/main-display/samples/composition/functionalizingentity/functionalizingentity-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-composition-functionalizingentity-functionalizingentity-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\n@Component({\n  selector: 'canano-functionalizingentity',\n  templateUrl: './functionalizingentity.component.html',\n  styleUrls: ['../../../../../btn-bravo-canano.scss','./functionalizingentity.component.scss']\n})\n\nexport class FunctionalizingentityComponent implements OnInit {\n    // currentDropdownValue is the previous dropdown value selected //\n    // This is used to reset the dropdown if other is selected and canceled //\n    currentDropdownValues;\n    consts=Consts;\n    dataId;\n    errors;\n    inherentFunction;\n\n    // use these instead to determine open or closed form //\n    inherentFunctionIndex;\n    //targetIndex;\n\n    inherentFunctionTrailer;\n    data;\n    dataTrailer;\n    fileIndex;\n    helpUrl =  Consts.HELP_URL_SAMPLE_COMPOSITION;\n    message;\n    resetStatus=false;\n    sampleName = Properties.CURRENT_SAMPLE_NAME;\n    sampleId;\n    setupData;\n    toolHeadingNameManage = 'Sample Composition';\n    targets;\n    target;\n    targetCopy;\n    targetIndex;\n\n  constructor( private apiService:ApiService,private navigationService:NavigationService,private router: Router, private route: ActivatedRoute ){\n  }\n\n  ngOnInit(): void{\n      console.log(this.data)\n      this.navigationService.setCurrentSelectedItem(1);\n      this.errors={};\n    this.route.params.subscribe(\n        ( params: Params ) => {\n          this.sampleId = params['sampleId'];\n          this.dataId = params['dataId'];\n          this.currentDropdownValues = {};\n          this.data = this.setDefaultDataSet();\n          this.dataTrailer = this.setDefaultDataSet();\n          if(\n                this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n            }else{\n                Properties.CURRENT_SAMPLE_ID = this.sampleId;\n            };\n            this.apiService.getSampleName(this.sampleId).subscribe(\n                data=>this.toolHeadingNameManage='Edit ' +data['sampleName'] + ' Functionalizing Entity'\n            )\n            if (this.dataId) {\n                this.data = this.getdata(this.sampleId).subscribe(\n                    data => {\n                        this.errors={};\n                        Properties.SAMPLE_TOOLS = true;\n                        this.data = data;\n                        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                    },\n                    error=> {\n                        this.errors=error;\n                    } );\n            };\n\n            this.setupData = this.getSetupData(this.sampleId).subscribe(\n                data => {\n                    Properties.SAMPLE_TOOLS = true;\n                    this.setupData = data;\n                    this.errors={};\n                },\n                error=>{\n                    this.errors=error;\n                } );\n        }\n    );\n}\n\naddFile() {\n    this.fileIndex=-1;\n}\n\n// cancels inherent function //\ncancelInherentFunction() {\n    this.inherentFunctionIndex=null;\n};\n\n// cancels target form //\ncancelTarget() {\n    if (this.targetIndex>=0) {\n        this.inherentFunction.targets[this.targetIndex]=this.targetCopy;\n    }\n    this.targetIndex=null;\n};\n\n// deletes current inherent function //\ndeleteInherentFunction() {\n    if (confirm(\"Are you sure you want to delete this inherent function?\")) {\n        this.data['simpleFunctionBean']=this.inherentFunction;\n        let url = this.apiService.doPost(Consts.QUERY_FUNCTIONALIZING_ENTITY_REMOVE_FUNCTION,this.data);\n        url.subscribe( data => {\n            this.data=data;\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n            this.errors={};\n        },\n        err => {\n            this.errors=err;\n        });\n        this.inherentFunctionIndex=null;\n        this.targetIndex=null;\n    };\n};\n\n// deletes current target //\ndeleteTarget() {\n    if (confirm(\"Are you sure you want to delete this target?\")) {\n        this.inherentFunction.targets.splice(this.targetIndex,1);\n        this.target=null;\n        this.targetIndex=null;\n    };\n};\n\n// brings up add inherent function form //\naddInherentFunction() {\n    this.inherentFunctionIndex=-1;\n    this.inherentFunction = {\n        \"type\":\"\",\"modality\":\"\",\n        \"description\":\"\",\n        \"targetId\":\"\",\n        \"targetType\":\"\",\n        \"speciesType\":\"\",\n        \"targetName\":\"\",\n        \"targetDescription\":\"\",\n        \"targets\":[]};\n};\n\n// brings up edit inherent function form //\neditInherentFunction(inherentFunction,index) {\n    this.inherentFunctionIndex=index;\n    this.target = null;\n    this.targetIndex = null;\n    this.inherentFunction = JSON.parse(JSON.stringify(inherentFunction));\n    this.inherentFunctionTrailer = JSON.parse(JSON.stringify(inherentFunction));\n\n};\n\n// brings up add target form //\naddTarget() {\n    this.targetIndex=-1;\n    this.target = {\n        \"type\":\"\",\n        \"description\":\"\",\n        \"name\":\"\",\n        \"species\":\"\"\n    };\n};\n\n// brings up edit target form //\neditTarget(target,index) {\n    this.targetIndex=parseInt(index);\n    this.target = target;\n    this.target['species']='';\n    this.targetCopy = JSON.parse(JSON.stringify(target));\n};\n\n// saves curent inherent function //\nsaveInherentFunction() {\n    this.data['simpleFunctionBean']=this.inherentFunction;\n    let url = this.apiService.doPost(Consts.QUERY_FUNCTIONALIZING_ENTITY_SAVE_FUNCTION,this.data);\n    url.subscribe( data => {\n        this.data=data;\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        this.errors={};\n    },\n    err => {\n        this.errors=err;\n    });\n    this.inherentFunction=null;\n    this.target=null;\n    this.targetIndex=null;\n    this.inherentFunctionIndex=null;\n};\n\n// saves current target //\nsaveTarget() {\n    if (this.targetIndex==-1) {\n        this.inherentFunction.targets.push(this.target);\n    };\n    this.targetIndex=null;\n};\n\n// gets all data for current functionalizing entity //\ngetdata(sampleId){\n    let getUrl = Consts.QUERY_FUNCTIONALIZING_ENTITY_EDIT;\n\n    if( Properties.DEBUG_CURL ){\n        let curl = 'curl  -k \\'' + getUrl + '\\'';\n    }\n\n    let headers = new HttpHeaders( {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    } );\n\n    let options = {\n        headers: headers,\n        method: 'get',\n    };\n\n    let results;\n    try{\n        results = this.apiService.doGet(getUrl,'sampleId=' + sampleId + '&dataId=' + this.dataId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n    }catch( e ){\n        // TODO react to error.\n        console.error( 'doGet Exception: ' + e );\n    }\n    return results;\n\n}\n\n    // gets dropdown data //\n    getSetupData(sampleId){\n        let getUrl = Consts.QUERY_FUNCTIONALIZING_ENTITY_SETUP;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl,'sampleId=' + sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n\n    };\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field,currentValue) {\n        this.currentDropdownValues[field]=currentValue;\n    };\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'],newItem['value']);\n            this.setValue(newItem['field'],newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'],newItem['value']);\n        }\n    };\n\n    // sets default data set for functionalizing entity for add //\n    setDefaultDataSet() {\n        return {\n            \"sampleId\":this.sampleId,\n            \"type\":\"\",\n            \"pubChemDataSourceName\":\"\",\n            \"molecularFormulaType\":\"\",\n            \"activationMethodType\":\"\",\n            \"domainEntity\":{\n                \"type\":\"\",\n                \"isoType\":\"\",\n                \"species\":\"\"\n            },\n            \"valueUnit\":\"\",\n            \"name\":\"\",\n            \"functionList\":[],\n            \"fileList\":[]\n        };\n    };\n\n    // deletes current functionalizing entity //\n    deleteFunctionalizingEntity() {\n        if (confirm(\"Are you sure you want to delete this functionalizing entity?\")) {\n            let url = this.apiService.doPost(Consts.QUERY_FUNCTIONALIZING_ENTITY_DELETE,this.data)\n            url.subscribe( data => {\n                this.router.navigate( ['home/samples/composition', this.sampleId] );\n                this.errors={};\n            },\n            err => {\n                this.errors=err;\n            });\n        };\n    };\n\n    // resets functionalizing entity form //\n    resetFunctionalizingEntity() {\n        this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n        this.inherentFunctionIndex=null;\n        this.targetIndex=null;\n        this.resetStatus=true;\n    };\n\n    // saves functionalizing entity //\n    submitFunctionalizingEntity() {\n        let url = this.apiService.doPost(Consts.QUERY_FUNCTIONALIZING_ENTITY_SAVE,this.data);\n        url.subscribe( data => {\n            this.router.navigate( ['home/samples/composition', this.sampleId] );\n            this.errors={};\n\n        },\n        err => {\n            this.errors=err;\n        });\n    };\n\n    changeFile(newItem:Object) {\n        if (newItem['type']=='save'||newItem['type']=='delete') {\n            this.data=newItem['data'];\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        }\n    }\n\n    getError(error:Object) {\n        this.errors=error;\n    }\n\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\"\n[toolHeadingName]=\"toolHeadingNameManage\">\n\n</canano-main-display-heading>\n\n<div class=\"mainSection\" *ngIf=\"data\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <div class=\"error\" *ngIf=\"message\">\n        {{message}}\n    </div>\n    <form action=\"\" method=\"get\" name=\"functionalizingEntityForm\">\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <!--Only Used for Add-->\n            <tr *ngIf=\"!dataId\">\n                <td class=\"label\">\n                    <label for=\"entityType\">\n                        Functionalizing Entity Type*\n                    </label>\n                </td>\n                <td colspan=\"3\">\n                    <select (ngModelChange)=\"addOtherValue('type',data.type)\" id=\"entityType\" [(ngModel)]=\"data.type\" name=\"entityType\">\n                        <option value=\"\" [selected]=\"data.type===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['functionalizingEntityTypes']\" [selected]=\"data.type===type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                        <option value=\"other\">other</option>\n\n                    </select>\n                    <div *ngIf=\"data.type ==='other'\">\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Functionalizing Entity Type'\" [value]=\"currentDropdownValues['type']\" [field]=\"'data.type'\" [array]=\"'setupData.functionalizingEntityTypes'\">\n\n                        </canano-other-dropdown>\n                    </div>\n                </td>\n            </tr>\n            <!--End Only Used for Add-->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"chemicalName\">\n                        Chemical Name*\n                    </label>\n                </td>\n                <td colspan=\"3\">\n                    <input [(ngModel)]=\"data.name\" id=\"chemicalName\" type=\"text\" name=\"name\" size=\"70\">\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"pubchemDatasource\">\n                        PubChem DataSource\n                    </label>\n                </td>\n                <td>\n                    <select id=\"pubchemDatasource\" [(ngModel)]=\"data.pubChemDataSourceName\" name=\"pubchemDatasource\">\n                        <option value=\"\" [selected]=\"data.pubChemDataSourceName===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['pubChemDataSources']\" [selected]=\"data.pubChemDataSourceName===type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                    </select>\n                </td>\n                <td class=\"label\">\n                    <label for=\"pubchemId\">\n                        PubChem Id\n                    </label>\n                </td>\n                <td>\n                    <input [(ngModel)]=\"data.pubChemId\" id=\"pubchemId\" type=\"number\" name=\"pubchemId\" size=\"30\">\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"amount\">\n                        Amount\n                    </label>\n                </td>\n                <td>\n                    <input [(ngModel)]=\"data.value\" id=\"amount\" type=\"text\" name=\"value\">\n                </td>\n                <td class=\"label\">\n                    <label for=\"amountUnit\">\n                        Amount Unit\n                    </label>\n                </td>\n                <td>\n                    <select (ngModelChange)=\"addOtherValue('valueUnit',data.valueUnit)\" id=\"amountUnit\" [(ngModel)]=\"data.valueUnit\" name=\"valueUnit\">\n                        <option value=\"\" [selected]=\"data.functionalizingEntityUnits===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['functionalizingEntityUnits']\" [selected]=\"data.valueUnit===type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                        <option value=\"[other]\">\n                            [other]\n                        </option>\n                    </select>\n                    <div *ngIf=\"data.valueUnit ==='[other]'\">\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Amount Unit'\" [value]=\"currentDropdownValues['valueUnit']\" [field]=\"'data.valueUnit'\" [array]=\"'setupData.functionalizingEntityUnits'\">\n\n                        </canano-other-dropdown>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"molecularFormulaType\">\n                        Molecular Formula Type\n                    </label>\n                </td>\n                <td>\n                    <select (ngModelChange)=\"addOtherValue('molecularFormulaType',data.molecularFormulaType)\" id=\"molecularFormulaType\" [(ngModel)]=\"data.molecularFormulaType\" name=\"molecularFormulaType\">\n                        <option value=\"\" [selected]=\"data.molecularFormulaType===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['molecularFormulaTypes']\" [selected]=\"data.molecularFormulaType==type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                        <option value=\"[other]\">\n                            [other]\n                        </option>\n                    </select>\n                    <div *ngIf=\"data.molecularFormulaType ==='[other]'\">\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Molecular Formula Type'\" [value]=\"currentDropdownValues['molecularFormulaType']\" [field]=\"'data.molecularFormulaType'\" [array]=\"'setupData.molecularFormulaTypes'\">\n\n                        </canano-other-dropdown>\n                    </div>\n                </td>\n                <td class=\"label\">\n                    <label for=\"molecularFormula\">\n                        Molecular Formula\n                    </label>\n\n                </td>\n                <td>\n                    <textarea [(ngModel)]=\"data.molecularFormula\" rows=\"2\" cols=\"80\" id=\"molecularFormula\" name=\"molecularFormula\">{{data.molecularFormula}}</textarea>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"activationMethodType\">\n                        Activation Method\n                    </label>\n                </td>\n                <td>\n                    <select (ngModelChange)=\"addOtherValue('activationMethodType',data.activationMethodType)\" id=\"activationMethodType\" [(ngModel)]=\"data.activationMethodType\" name=\"activationMethodType\">\n                        <option value=\"\" [selected]=\"data.activationMethodType===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['activationMethods']\" [selected]=\"data.activationMethodType==type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                        <option value=\"[other]\">\n                            [other]\n                        </option>\n                    </select>\n                    <div *ngIf=\"data.activationMethodType ==='[other]'\">\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Activation Method'\" [value]=\"currentDropdownValues['activationMethodType']\" [field]=\"'data.activationMethodType'\" [array]=\"'setupData.activationMethods'\">\n\n                        </canano-other-dropdown>\n                    </div>\n                </td>\n                <td class=\"label\">\n                    <label for=\"activationEffect\">\n                        Activation Effect\n                    </label>\n                </td>\n                <td>\n                    <input [(ngModel)]=\"data.activationEffect\" id=\"activationEffect\" type=\"text\" name=\"activationEffect\" size=\"70\">\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"description\">\n                        Description\n                    </label>\n                </td>\n                <td colspan=\"3\">\n                    <textarea [(ngModel)]=\"data.description\" rows=\"2\" cols=\"80\" id=\"description\" name=\"description\">{{data.description}}</textarea>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div class=\"mainBorder\" *ngIf=\"data.type=='antibody'\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    Antibody Properties\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <table class=\"antibodyProperties\">\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"type\">\n                                    Type\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('domainEntity.type',data.domainEntity.type)\" id=\"type\" [(ngModel)]=\"data['domainEntity']['type']\" name=\"type\">\n                                    <option value=\"\" [selected]=\"data.domainEntity['type']===''\">--Select--</option>\n                                    <option *ngFor=\"let type of setupData['antibodyTypes']\" [selected]=\"data.domainEntity['type']==type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                    <option value=\"[other]\">\n                                        [other]\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.domainEntity.type ==='[other]'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['domainEntity.type']\" [field]=\"'data.domainEntity.type'\" [array]=\"'setupData.antibodyTypes'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                            <td class=\"label\">\n                                <label for=\"isoType\">\n                                    Isotype\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('domainEntity.isoType',data.domainEntity.isoType)\" id=\"isoType\" [(ngModel)]=\"data['domainEntity']['isoType']\" name=\"isoType\">\n                                    <option value=\"\" [selected]=\"data.domainEntity['isoType']===''\">--Select--</option>\n                                    <option *ngFor=\"let type of setupData['antibodyIsotypes']\" [selected]=\"data.domainEntity['isoType']==type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                    <option value=\"[other]\">\n                                        [other]\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.domainEntity.isoType ==='[other]'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Isotype'\" [value]=\"currentDropdownValues['domainEntity.isoType']\" [field]=\"'data.domainEntity.isoType'\" [array]=\"'setupData.antibodyIsotypes'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                            <td class=\"label\">\n                                <label for=\"antibodySpecies\">\n                                    Species\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('domainEntity.species',data.domainEntity.species)\" id=\"species\" [(ngModel)]=\"data['domainEntity']['species']\" name=\"species\">\n                                    <option value=\"\" [selected]=\"data.domainEntity['species']===''\">--Select--</option>\n                                    <option *ngFor=\"let type of setupData['speciesTypes']\" [selected]=\"data.domainEntity['species']==type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                    <option value=\"[other]\">\n                                        [other]\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.domainEntity.species ==='[other]'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Species'\" [value]=\"currentDropdownValues['domainEntity.species']\" [field]=\"'data.domainEntity.species'\" [array]=\"'setupData.speciesTypes'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n\n    <div class=\"mainBorder\" *ngIf=\"data.type=='biopolymer'\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\" colspan=\"2\">\n                    Biopolymer Properties\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"biopolymerType\">Type*</label>\n                </td>\n                <td>\n                    <select (ngModelChange)=\"addOtherValue('domainEntity.type',data.domainEntity.type)\" id=\"biopolymerType\" [(ngModel)]=\"data['domainEntity']['type']\" name=\"biopolymerType\">\n                        <option value=\"\" [selected]=\"data.domainEntity['type']===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['biopolymerTypes']\" [selected]=\"data.domainEntity['type']==type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                        <option value=\"[other]\">\n                            [other]\n                        </option>\n                    </select>\n                    <div *ngIf=\"data.domainEntity.type ==='[other]'\">\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['domainEntity.type']\" [field]=\"'data.domainEntity.type'\" [array]=\"'setupData.biopolymerTypes'\">\n\n                        </canano-other-dropdown>\n                    </div>\n\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"biopolymerSequence\">Sequence</label>\n                </td>\n                <td>\n                    <textarea name=\"biopolymerSequence\" [(ngModel)]=\"data.domainEntity.sequence\" rows=\"3\" cols=\"80\">\n                        {{data.sequence}}\n                    </textarea>\n                </td>\n            </tr>\n        </table>\n    </div>\n\n    <div class=\"mainBorder\" *ngIf=\"data.type=='small molecule'\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\" colspan=\"2\">\n                    Small Molecule Properties\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"smallMoleculeAlternateName\">Alternate Name</label>\n                </td>\n                <td>\n                    <input type=\"text\" id=\"smallMoleculeAlternateName\" name=\"smallMoleculeAlternateName\" value=\"\" [(ngModel)]=\"data.domainEntity.alternateName\" size=\"90\">\n                </td>\n            </tr>\n        </table>\n    </div>\n    <br *ngIf=\"data.type=='antibody' || data.type=='biopolymer' || data.type=='small molecule'\" />\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    Inherent Function\n                </td>\n                <td style=\"text-align:left;\">\n                    <button (click)=\"addInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                </td>\n            </tr>\n            <tr *ngIf=\"data['functionList']\">\n                <td></td>\n                <td>\n                        <table class=\"dataTable\">\n                            <ng-container *ngIf=\"data['functionList'].length\">\n                                <tr>\n                                    <th>\n                                        Function Type\n                                    </th>\n                                    <th>\n                                        Imaging Modality\n                                    </th>\n                                    <th>\n                                        Targets\n                                    </th>\n                                    <th>\n                                        Description\n                                    </th>\n                                    <th>\n\n                                    </th>\n                            </tr>\n                            <tr *ngFor=\"let iFunction of data.functionList; let i= index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                <td>{{iFunction.type}}</td>\n                                <td>{{iFunction.modality}}</td>\n                                <td>\n                                    <div *ngFor=\"let target of iFunction.targets\">\n                                        {{target.type}} : {{target.name}}\n                                    </div>\n                                </td>\n                                <td>{{iFunction.description}}</td>\n                                <td>\n                                    <button (click)=\"editInherentFunction(iFunction,i)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                            </ng-container>\n                        </table>\n                        <table class=\"inherentFunction\" width=\"650px\">\n\n                            <tr *ngIf=\"inherentFunctionIndex!=null\">\n                                <td colspan=\"5\">\n                                    <div class=\"mainBorder\">\n                                        <table class=\"dataMain gray\" width=\"100%\">\n                                            <tr>\n                                                <td class=\"label\">\n                                                    <label for=\"functionType\">Function Type</label>\n                                                </td>\n                                                <td>\n\n                                                    <select id=\"functionType\" [(ngModel)]=\"inherentFunction.type\" name=\"functionType\">\n                                                        <option value=\"\" [selected]=\"inherentFunction.type===''\">--Select--</option>\n                                                        <option *ngFor=\"let type of setupData['functionTypes']\" [selected]=\"inherentFunction.type===type\" value=\"{{type}}\">\n                                                            {{type}}\n                                                        </option>\n                                                    </select>\n                                                </td>\n                                                <td class=\"label\">\n                                                    <label for=\"functionModalityType\" [hidden]=\"inherentFunction.type!='imaging function'\">Imaging Modality Type</label>\n                                                </td>\n                                                <td>\n                                                    <select [hidden]=\"inherentFunction.type!='imaging function'\" id=\"functionModalityType\" [(ngModel)]=\"inherentFunction.modality\" name=\"functionModalityType\">\n                                                        <option value=\"\" [selected]=\"inherentFunction.modality===''\">--Select--</option>\n                                                        <option *ngFor=\"let type of setupData['modalityTypes']\" [selected]=\"inherentFunction.modality===type\" value=\"{{type}}\">\n                                                            {{type}}\n                                                        </option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"label\">\n                                                    <label for=\"functionDescription\">\n                                                        Description\n                                                    </label>\n                                                </td>\n                                                <td colspan=\"3\">\n                                                    <textarea [(ngModel)]=\"inherentFunction.description\" rows=\"3\" cols=\"50\" id=\"functionDescription\" name=\"functionDescription\">{{inherentFunction.description}}</textarea>\n                                                </td>\n                                            </tr>\n                                            <tr [hidden]=\"inherentFunction.type!='targeting function'\">\n                                                <td class=\"label\">\n                                                    <label for=\"\">\n                                                        Target\n                                                    </label>\n                                                </td>\n                                                <td colspan=\"3\">\n                                                    <button (click)=\"addTarget()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">\n                                                        Add\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                            <tr [hidden]=\"inherentFunction.type!='targeting function' || !inherentFunction.targets.length\">\n                                                <td>&nbsp;</td>\n                                                <td colspan=\"3\">\n                                                    <div class=\"mainBorder\" style=\"width:450px\">\n                                                        <table class=\"dataMain\" width=\"100%\">\n                                                            <tr>\n                                                                <th>Type</th>\n                                                                <th>Name</th>\n                                                                <th colspan=\"2\">Description</th>\n                                                            </tr>\n                                                            <tr *ngFor=\"let target of inherentFunction.targets; let i= index\">\n                                                                <td>{{target.type}}</td>\n                                                                <td>{{target.name}}</td>\n                                                                <td>{{target.description}}</td>\n                                                                <td>\n                                                                    <button (click)=\"editTarget(target, i)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                                </td>\n                                                            </tr>\n                                                        </table>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"targetIndex!=null\">\n                                                <td>&nbsp;</td>\n                                                <td colspan=\"3\">\n                                                    <div class=\"mainBorder\" style=\"width:450px\">\n                                                        <table class=\"dataMain\" width=\"100%\">\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"targetingType\" style=\"width:150px\">\n                                                                        Type\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select id=\"targetingType\" [(ngModel)]=\"target.type\" name=\"targetingType\">\n                                                                        <option value=\"\" [selected]=\"target.type===''\">--Select--</option>\n                                                                        <option *ngFor=\"let type of setupData['targetTypes']\" [selected]=\"target.type===type\" value=\"{{type}}\">\n                                                                            {{type}}\n                                                                        </option>\n                                                                    </select>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\" style=\"width:150px\">\n                                                                    <label for=\"targetingName\">\n                                                                        Name\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <input type=\"text\" name=\"targetingName\" id=\"targetingName\" [(ngModel)]=\"target.name\">\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\" style=\"width:150px\">\n                                                                    <label for=\"targetingDescription\">\n                                                                        Description\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <textarea cols=\"30\" rows=\"3\" name=\"targetingDescription\" id=\"targetingDescription\" [(ngModel)]=\"target.description\">{{target.description}}</textarea>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>\n                                                                    <button (click)=\"deleteTarget()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                                </td>\n                                                                <td style=\"text-align:right\">\n                                                                    <button (click)=\"saveTarget()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                                    <button (click)=\"cancelTarget(target)\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                                </td>\n                                                            </tr>\n                                                        </table>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <button *ngIf=\"inherentFunctionIndex!=-1\" (click)=\"deleteInherentFunction()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                </td>\n                                                <td style=\"text-align:right\" colspan=\"3\">\n                                                    <button (click)=\"saveInherentFunction(iFunction)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                    <button (click)=\"cancelInherentFunction()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div class=\"mainBorder\" *ngIf=\"data['fileList']\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    File\n                </td>\n                <td>\n                    <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\"  (changeFile)=\"changeFile($event)\" [saveUrl]=\"consts.QUERY_FUNCTIONALIZING_ENTITY_SAVE_FILE\" [deleteUrl]=\"consts.QUERY_FUNCTIONALIZING_ENTITY_REMOVE_FILE\" [sampleId]=\"sampleId\" [data]=\"data\" [fileVariable]=\"'fileBean'\" [fileArray]=\"'fileList'\">\n\n                    </canano-file>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    <label for=\"otherSampleNames\">\n                        Copy to other samples with the same primary organization?\n                    </label>\n                </td>\n                <td>\n                    <select id=\"otherSampleNames\" name=\"otherSampleNames\" multiple=\"true\" size=\"10\" [(ngModel)]=\"data.otherSampleNames\">\n                        <option *ngFor=\"let sn of setupData['otherSampleNames']\" value=\"{{sn}}\" >\n                            {{sn}}\n                        </option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div>\n        <table class=\"submit\">\n            <tr>\n                <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                    <button (click)=\"deleteFunctionalizingEntity()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                </td>\n                <td>\n                    <button (click)=\"resetFunctionalizingEntity()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                    <button [disabled]=\"data.type==='' || data.name===''\" (click)=\"submitFunctionalizingEntity()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FunctionalizingentityComponent } from './functionalizingentity.component';\nimport { FunctionalizingentityRoutingModule } from './functionalizingentity-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n\n\n@NgModule({\n    declarations: [FunctionalizingentityComponent],\n    imports: [\n      CommonModule,\n      FunctionalizingentityRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule,\n      FileModule\n    ]\n  })\n  export class FunctionalizingentityModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FunctionalizingentityComponent } from './functionalizingentity.component';\nconst routes: Routes = [{ path: '', component: FunctionalizingentityComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FunctionalizingentityRoutingModule { }\n\n"],"sourceRoot":"webpack:///"}