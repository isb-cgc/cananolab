{"version":3,"file":"default-src_app_cananolab-client_main-display_home_right-side-bar_home-user-actions_login_log-90a285.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACJ;;;AACnD,MAAME,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,4DAAcA;AAAA,CAAE,CAAC;AAM1D,MAAOI,kBAAkB;AAAlBA,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA;AAAkB;AAAlBA,kBAAkB;YAHnBL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,kBAAkB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFnBR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACH0C;AACb;;;;;;;;;ICLrDW,uDAAAA,qCAG8B;;;;IAF5BA,wDAAAA,2BAAmB;;;;;IAMjBA,4DAAAA,aAA4C;IAAAA,oDAAAA,GAAe;IAAAA,0DAAAA,EAAM;;;;IAArBA,uDAAAA,GAAe;IAAfA,+DAAAA,oBAAe;;;;;IAC3DA,4DAAAA,aAA4C;IAAAA,oDAAAA,GAAgB;IAAAA,0DAAAA,EAAM;;;;IAAtBA,uDAAAA,GAAgB;IAAhBA,+DAAAA,qBAAgB;;;;;;IAC5DA,4DAAAA,UAAgC;IAIVA,oDAAAA,gEAAyD;IAAAA,0DAAAA,EAAI;IAG3EA,4DAAAA,SAAI;IAGQA,oDAAAA,kBACJ;IAAAA,0DAAAA,EAAQ;IAEZA,4DAAAA,UAAI;IAC+CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;IAAA,EAAkB;IAAjEA,0DAAAA,EAAkE;IAI1EA,4DAAAA,UAAI;IAGQA,oDAAAA,kBACJ;IAAAA,0DAAAA,EAAQ;IAEZA,4DAAAA,UAAI;IACqDA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;IAAA,EAAsB;IAA3EA,0DAAAA,EAA4E;IAGpFA,4DAAAA,UAAI;IACAA,uDAAAA,UAAS;IACTA,4DAAAA,UAAI;IACuCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,sBAAc;IAAA,EAAC;IAC3DA,oDAAAA,eACJ;IAAAA,0DAAAA,EAAS;IAGjBA,4DAAAA,UAAI;IACAA,uDAAAA,UAAS;IACTA,4DAAAA,UAAI;IACWA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,6BAAqB;IAAA,EAAC;IAACA,oDAAAA,wBAAgB;IAAAA,0DAAAA,EAAI;;;;IAzBhBA,uDAAAA,IAAkB;IAAlBA,wDAAAA,wBAAkB;IAWZA,uDAAAA,GAAsB;IAAtBA,wDAAAA,4BAAsB;;;;;;IAmB3FA,4DAAAA,UAA+B;IAITA,oDAAAA,yDAAkD;IAAAA,0DAAAA,EAAI;IAGpEA,4DAAAA,SAAI;IAGQA,oDAAAA,eACJ;IAAAA,0DAAAA,EAAQ;IAEZA,4DAAAA,UAAI;IAC2CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;IAAA,EAAmB;IAA9DA,0DAAAA,EAA+D;IAIvEA,4DAAAA,UAAI;IACAA,uDAAAA,UAAS;IACTA,4DAAAA,UAAI;IACuCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,uBAAc;IAAA,EAAC;IAC3DA,oDAAAA,wBACJ;IAAAA,0DAAAA,EAAS;IAGjBA,4DAAAA,UAAI;IACAA,uDAAAA,UAAS;IACTA,4DAAAA,UAAI;IACSA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,8BAAqB;IAAA,EAAC;IAACA,oDAAAA,qBAAa;IAAAA,0DAAAA,EAAI;;;;IAffA,uDAAAA,IAAmB;IAAnBA,wDAAAA,yBAAmB;;;;;;;;;;;;;;ADvD5E,MAAOV,cAAc;EAcvBW,YAAoBC,cAA6B,EAASC,MAAa,EAASC,UAAsB,EAAUC,oBAA0C;IAAtI,mBAAc,GAAdH,cAAc;IAAwB,WAAM,GAANC,MAAM;IAAgB,eAAU,GAAVC,UAAU;IAAsB,yBAAoB,GAApBC,oBAAoB;IAZpI,YAAO,GAAG,mCAAmC;IAC7C,oBAAe,GAAG,oBAAoB;IACtC,SAAI,GAAG,EAAE;IACT,aAAQ,GAAG,EAAE;IACb,UAAK,GAAG,EAAE;IACV,aAAQ,GAAG,IAAI;IACf,WAAM,GAAC,KAAK;IACZ,sBAAiB,GAAC,KAAK;IACvB,mCAA8B,GAAG,KAAK;IACtC,gBAAW,GAAG,EAAE;IAChB,iBAAY,GAAG,EAAE;EAGjB;EAEAC,QAAQ;IACJ,IAAI,IAAI,CAACH,MAAM,CAACI,GAAG,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;MACnC,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACC,MAAM,GAAG,IAAI;;IAGtB,IAAI,CAACR,cAAc,CAACS,WAAW,CAC5BC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW;MACrC,IAAI,CAACC,YAAY,GAAGF,MAAM,CAACE,YAAY;IACzC,CAAC,CACF;EACL;EAEAC,YAAY;IACR,IAAI,CAACC,aAAa,EAAE;IACpB,IAAG,CAACnB,oEAAoB,EAAE;MACtB,IAAI,CAACM,UAAU,CAACe,gBAAgB,CAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,QAAQ,CAAE,CAACC,IAAI,CAAEF,IAAI,IAAI;QACnE,IAAI,CAACf,oBAAoB,CAACkB,UAAU,CAAEH,IAAI,CAAE;QAC5C,IAAI,CAACjB,MAAM,CAACqB,aAAa,CAAC,MAAM,CAAC;MACrC,CAAC;MACD;MACEC,GAAG,IAAK;QACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACV,YAAY,GAAGU,GAAG;QACvB,IAAI,CAACpB,oBAAoB,CAACkB,UAAU,CAAE,OAAO,CAAE;MACnD,CAAC,CACJ;KACJ,MAAM;MACHG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,IAAI,CAACxB,MAAM,CAACqB,aAAa,CAAC,MAAM,CAAC;;EAEzC;EAEAI,mBAAmB;IACf,IAAI,CAACC,iBAAiB,GAAC,CAAC,IAAI,CAACA,iBAAiB;IAC9C,IAAI,CAACZ,aAAa,EAAE;IACpB,OAAO,KAAK;EAChB;EAEAA,aAAa;IACT,IAAI,CAACF,YAAY,GAAG,EAAE;IACtB,IAAI,CAACD,WAAW,GAAG,EAAE;EACzB;EAEAgB,YAAY;IACR,IAAI,CAACb,aAAa,EAAE;IACpB,IAAI,CAACc,iBAAiB,CAAC,IAAI,CAACC,KAAK,CAAC;IAClCN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,KAAK,CAAC;EAC3B;EAEAD,iBAAiB,CAACC,KAAK;IACnB,IAAI,IAAI,CAACC,8BAA8B,EAAE;MACrC;;IAGJ,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;MACnB;;IAGJ,IAAI,CAACD,8BAA8B,GAAG,IAAI;IAE1C,IAAIE,OAAO,GAAGrC,yEAAyB,GAAG,GAAG,GAAGC,iEAAyB;IACzEoC,OAAO,GAAGA,OAAO,CAACG,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IAC5CH,OAAO,IAAI,SAAS,GAAGI,SAAS,CAACP,KAAK,CAAC;IAEvC,IAAIzB,GAAG,GAAG,IAAI,CAACH,UAAU,CAACoC,KAAK,CAACzC,iEAAyB,EAAE,QAAQ,GAAGiC,KAAK,CAAC;IAC5EzB,GAAG,CAACK,SAAS,CAAC6B,IAAI,IAAG;MACjB,IAAI,CAAC3B,WAAW,GAAG,gFAAgF;MACnG,IAAI,CAACmB,8BAA8B,GAAG,KAAK;IAC/C,CAAC,EACDS,KAAK,IAAG;MACJ,IAAI,CAAC3B,YAAY,GAAG2B,KAAK,CAACA,KAAK;MAC/B,IAAI,CAACT,8BAA8B,GAAG,KAAK;IAC/C,CAAC,CAAC;EACN;;AA5FS3C,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3B/C,wDAAAA,kGAG8B;MAE9BA,4DAAAA,aAAqF;MAEjFA,wDAAAA,kDAAiE;MACjEA,wDAAAA,kDAAkE;MAClEA,wDAAAA,mDA2CM;MACNA,wDAAAA,mDAiCM;MACVA,0DAAAA,EAAM;;;MAvFwBA,wDAAAA,qCAAuB;MAKhDA,uDAAAA,GAA+E;MAA/EA,wDAAAA,YAAAA,6DAAAA,oDAA+E;MAC/EA,uDAAAA,GAA4C;MAA5CA,wDAAAA,YAAAA,6DAAAA,uCAA4C;MACvCA,uDAAAA,GAAiB;MAAjBA,wDAAAA,yBAAiB;MACjBA,uDAAAA,GAAkB;MAAlBA,wDAAAA,0BAAkB;MAClBA,uDAAAA,GAAwB;MAAxBA,wDAAAA,gCAAwB;MA4CxBA,uDAAAA,GAAuB;MAAvBA,wDAAAA,+BAAuB;;;;;;;;;;;;;;;;;;;;;;;;ACpDc;AACI;AACS;AACM;;AAW5D,MAAOmD,WAAW;AAAXA,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;QAAXA;AAAW;AAAXA,WAAW;YAPlBH,yDAAY,EACZC,uDAAW,EACXC,+DAAmB,EACnBxD,qEAAkB;AAAA;;sHAIXyD,WAAW;IAAAC,eATL9D,4DAAc;IAAAM,UAE3BoD,yDAAY,EACZC,uDAAW,EACXC,+DAAmB,EACnBxD,qEAAkB;IAAAG,UAEVP,4DAAc;EAAA;AAAA","sources":["./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login-routing.module.ts","./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login.component.ts","./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login.component.html","./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../../../../common/services/api.service';\nimport { StatusDisplayService } from '../../../../../status-display/status-display.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Properties} from \"../../../../../../../assets/properties\";\nimport { Consts } from '../../../../../../constants';\n\n@Component( {\n    selector: 'canano-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n} )\nexport class LoginComponent implements OnInit{\n\n    helpUrl = 'https://wiki.nci.nih.gov/x/BoIyHg'\n    toolHeadingName = 'Log into caNanoLab'\n    user = '';\n    password = '';\n    email = '';\n    homePage = true;\n    loaded=false;\n    showResetPassword=false;\n    currentlyResettingUserPassword = false;\n    infoMessage = \"\";\n    errorMessage = \"\";\n\n    constructor(private activatedRoute:ActivatedRoute,private router:Router,private apiService: ApiService, private statusDisplayService: StatusDisplayService ){\n    }\n\n    ngOnInit(): void {\n        if (this.router.url.includes('login')) {\n            this.homePage = false;\n            this.loaded = true;\n        }\n\n        this.activatedRoute.queryParams\n          .subscribe(params => {\n            this.infoMessage = params.infoMessage;\n            this.errorMessage = params.errorMessage;\n          }\n        );\n    }\n\n    onLoginClick(){\n        this.clearMessages();\n        if(!Properties.LOGGED_IN) {\n            this.apiService.authenticateUser( this.user, this.password ).then((user) => {\n                    this.statusDisplayService.updateUser( user );\n                    this.router.navigateByUrl('home');\n                },\n                // ERROR\n                ( err ) => {\n                    console.log(err);\n                    this.errorMessage = err;\n                    this.statusDisplayService.updateUser( \"guest\" );\n                }\n            );\n        } else {\n            console.log(\"User is already logged in!\");\n            this.router.navigateByUrl('home');\n        }\n    }\n\n    toggleResetPassword() {\n        this.showResetPassword=!this.showResetPassword;\n        this.clearMessages();\n        return false;\n    }\n\n    clearMessages() {\n        this.errorMessage = \"\";\n        this.infoMessage = \"\";\n    }\n\n    onResetClick() {\n        this.clearMessages();\n        this.resetUserPassword(this.email);\n        console.log(this.email);\n    }\n\n    resetUserPassword(email) {\n        if (this.currentlyResettingUserPassword) {\n            return;\n        }\n\n        if (email.length == 0) {\n            return;\n        }\n        \n        this.currentlyResettingUserPassword = true;\n\n        let get_url = Properties.API_SERVER_URL + '/' + Consts.RESET_PASSWORD_URL;\n        get_url = get_url.replace(/(?<!:)\\/+/g, \"/\");\n        get_url += '?email=' + encodeURI(email);\n\n        var url = this.apiService.doGet(Consts.RESET_PASSWORD_URL, 'email=' + email);\n        url.subscribe(data => {\n            this.infoMessage = \"An email has been sent. Please follow the instructions to reset your password.\";\n            this.currentlyResettingUserPassword = false;\n        },\n        error => {\n            this.errorMessage = error.error;\n            this.currentlyResettingUserPassword = false;\n        })\n    }\n}\n","<canano-main-display-heading *ngIf=\"loaded&&!homePage\"\n  [helpUrl]=\"helpUrl\"\n  [toolHeadingName]=\"toolHeadingName\">\n</canano-main-display-heading>\n\n<div [ngClass]=\"{'mainSection':loaded&&!homePage,'right-side-bar-content':homePage}\">\n<div [ngClass]=\"{'mainBorder':loaded&&!homePage}\">\n    <div *ngIf=\"infoMessage\" style=\"color:blue\">{{infoMessage}}</div>\n    <div *ngIf=\"errorMessage\" style=\"color:red\">{{errorMessage}}</div>\n    <div *ngIf=\"!showResetPassword\">\n        <table class=\"login\">\n            <tr>\n                <td colspan=\"2\">\n                    <P><B>No account is required to browse publicly available data.</B></P>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"loginId\">\n                        LOGIN ID\n                    </label>\n                </td>\n                <td>\n                    <input type=\"text\" name=\"loginId\" id=\"loginId\" [(ngModel)]=\"user\">\n                </td>\n            </tr>\n\n            <tr>\n                <td>\n                    <label for=\"password\">\n                        PASSWORD\n                    </label>\n                </td>\n                <td>\n                    <input type=\"password\" name=\"password\" id=\"password\" [(ngModel)]=\"password\">\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <button class=\"btn btn-primary btn-sm\" (click)=\"onLoginClick()\">\n                        Login\n                    </button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <a href=\"\" (click)=\"toggleResetPassword()\">Forgot Password?</a>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div *ngIf=\"showResetPassword\">\n        <table class=\"resetpwd\">\n             <tr>\n                <td colspan=\"2\">\n                    <P><B>Enter your email to receive a password reset link.</B></P>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"email\">\n                        EMAIL\n                    </label>\n                </td>\n                <td>\n                    <input type=\"text\" name=\"email\" id=\"email\" [(ngModel)]=\"email\">\n                </td>\n            </tr>\n\n            <tr>\n                <td></td>\n                <td>\n                    <button class=\"btn btn-primary btn-sm\" (click)=\"onResetClick()\">\n                        Reset Password\n                    </button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                  <a href=\"\" (click)=\"toggleResetPassword()\">Back to Login</a>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      LoginRoutingModule\n    ],\n    exports: [LoginComponent]\n  })\nexport class LoginModule { }\n\n"],"names":["RouterModule","LoginComponent","routes","path","component","LoginRoutingModule","forChild","imports","exports","Properties","Consts","i0","constructor","activatedRoute","router","apiService","statusDisplayService","ngOnInit","url","includes","homePage","loaded","queryParams","subscribe","params","infoMessage","errorMessage","onLoginClick","clearMessages","LOGGED_IN","authenticateUser","user","password","then","updateUser","navigateByUrl","err","console","log","toggleResetPassword","showResetPassword","onResetClick","resetUserPassword","email","currentlyResettingUserPassword","length","get_url","API_SERVER_URL","RESET_PASSWORD_URL","replace","encodeURI","doGet","data","error","selectors","decls","vars","consts","template","CommonModule","FormsModule","ReactiveFormsModule","LoginModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}