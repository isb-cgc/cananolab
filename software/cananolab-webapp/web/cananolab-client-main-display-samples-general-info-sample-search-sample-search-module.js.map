{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-search-sample-search-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Consts } from '../../../../../constants';\r\nimport { ApiService } from '../../../../common/services/api.service';\r\nimport { UtilService } from '../../../../common/services/util.service';\r\nimport { Router } from '@angular/router';\r\nimport { SampleSearchResultsService } from './sample-search-results/sample-search-results.service';\r\nimport { Properties } from 'src/assets/properties';\r\n@Component({\r\n  selector: 'canano-sample-search',\r\n  templateUrl: './sample-search.component.html',\r\n  styleUrls: ['./sample-search.component.scss']\r\n})\r\nexport class SampleSearchComponent implements OnInit {\r\n    @ViewChild( 'f', { static: false } ) sampleSearchForm: NgForm;\r\n    helpUrl = Consts.HELP_URL_SAMPLE_SEARCH;\r\n    toolHeadingNameSearchSample = 'Sample Search';\r\n    keywords;\r\n    data;\r\n    dataTrailer;\r\n    errors;\r\n    sampleSetupData={};\r\n    loading;\r\n    loadingMessage=Consts.searchingMessage;\r\n    pocOperand = 'contains';\r\n    nameOperand = 'contains';\r\n    sampleName;\r\n    samplePointOfContact;\r\n    characterizationType; // Note - not plural (no s)\r\n    nanomaterialEntityTypes = [];\r\n    functionTypes = [];\r\n    functionalizingEntityTypes = [];\r\n    characterizationsList = [];\r\n    characterizations = [];\r\n    searchResults;\r\n\r\n// QUERY_SAMPLE_SETUP\r\n\r\n    constructor( private apiService: ApiService, private utilService: UtilService,\r\n                 private router: Router, private sampleSearchResultsService: SampleSearchResultsService){\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        setTimeout(()=> {\r\n            Properties.SAMPLE_TOOLS = false;\r\n        })\r\n        this.errors={};\r\n        this.data={\r\n            \"text\":\"\",\r\n            \"sampleName\":\"\",\r\n            \"samplePointOfContact\":\"\",\r\n            \"pocOperand\":\"contains\",\r\n            \"nameOperand\":\"contains\",\r\n            \"nanomaterialEntityTypes\":[],\r\n            \"functionalizingEntityTypes\":[],\r\n            \"functionTypes\":[],\r\n            \"characterizationType\":\"\",\r\n            \"characterizations\":[]\r\n        };\r\n        this.dataTrailer=JSON.parse(JSON.stringify(this.data));\r\n        this.init();\r\n    }\r\n\r\n    init(){\r\n        this.loading=true;\r\n        this.loadingMessage=Consts.loadingMessage;\r\n        this.apiService.doGet( Consts.QUERY_SAMPLE_SETUP, '' ).subscribe(\r\n            data => {\r\n                this.loading=null;\r\n                this.sampleSetupData = data;\r\n            },\r\n            error=> {\r\n                this.loading=null;\r\n            } );\r\n    }\r\n\r\n    onCharacterizationType(charType){\r\n        this.characterizationType = charType;\r\n        // QUERY_GET_CHARACTERIZATION_BY_TYPE\r\n        this.apiService.doGet( Consts.QUERY_GET_CHARACTERIZATION_BY_TYPE, 'type=' + charType ).subscribe(\r\n            data => {\r\n                this.characterizationsList = <any>data;\r\n            } );\r\n\r\n    }\r\n\r\n    onSubmit(){\r\n        this.loading=true;\r\n        this.loadingMessage=Consts.searchingMessage;\r\n        // QUERY_SEARCH_SAMPLE\r\n        this.apiService.doPost( Consts.QUERY_SEARCH_SAMPLE, this.data ).subscribe(\r\n            data => {\r\n                this.searchResults = <any>data;\r\n                this.loading=null;\r\n                // send search results to samplesSearchResults\r\n                this.sampleSearchResultsService.setSearchResults( this.searchResults );\r\n                this.router.navigate(['home/samples/sample-search-results']); // @FIXME TESTING  Don't hard code this!!!\r\n            },\r\n            error=> {\r\n                this.loading=null;\r\n                this.errors=error;\r\n            } );\r\n    }\r\n\r\n    reset() {\r\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\r\n    }\r\n\r\n}\r\n","<canano-main-display-heading\r\n    [helpUrl]=\"helpUrl\"\r\n    [toolHeadingName]=\"toolHeadingNameSearchSample\" [otherUrl]=\"{title:'Advanced Search',link:'home/samples/sample-advanced-search'}\"\r\n>\r\n</canano-main-display-heading>\r\n<div class=\"mainSection\">\r\n    <div class=\"error\" *ngIf=\"errors['error']\">\r\n        {{errors['error']}}\r\n    </div>\r\n    <canano-loader [loading]=\"loading\" [message]=\"loadingMessage\"></canano-loader>\r\n    <form name=\"sampleSearchForm\">\r\n        <div class=\"mainBorder\">\r\n            <table class=\"searchForm\">\r\n                <tr>\r\n                    <td class=\"label\">\r\n                        <label for=\"keywords\">\r\n                            Keywords\r\n                        </label>\r\n                    </td>\r\n                    <td colspan=\"5\">\r\n                        <textarea name=\"keywords\" id=\"keywords\" [(ngModel)]=\"data.text\" rows=\"3\" cols=\"60\">\r\n\r\n                        </textarea><br />\r\n                        <i>\r\n                            searching characterization keywords, publication keywords and text in characterization descriptions enter one keyword per line\r\n                        </i>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"label\">\r\n                        <label for=\"sampleName\">\r\n                            Sample Name\r\n                        </label>\r\n                    </td>\r\n                    <td colspan=\"5\">\r\n                        <label for=\"nameOperand\">\r\n                            <select name=\"nameOperand\" [(ngModel)]=\"data.nameOperand\">\r\n                                <option [selected]=\"true\">contains</option>\r\n                                <option>equals</option>\r\n                            </select>\r\n                        </label>\r\n                        <input type=\"text\" id=\"sampleName\" name=\"data.sampleName\" [(ngModel)]=\"data.sampleName\" size=\"60\">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"label\">\r\n                        <label for=\"samplePointOfContact\">\r\n                            Sample Point of Contact\r\n                        </label>\r\n                    </td>\r\n                    <td colspan=\"5\">\r\n                        <label for=\"pocOperand\">\r\n                            <select name=\"pocOperand\" [(ngModel)]=\"data.pocOperand\">\r\n                                <option [selected]=\"true\">contains</option>\r\n                                <option>equals</option>\r\n                            </select>\r\n                        </label>\r\n                        <input type=\"text\" name=\"data.samplePointOfContact\" id=\"samplePointOfContact\" [(ngModel)]=\"data.samplePointOfContact\" size=\"60\">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"label\">\r\n                        <label for=\"nanomaterialEntityTypes\">\r\n                            Nanomaterial Entity\r\n                        </label>\r\n                    </td>\r\n                    <td>\r\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.nanomaterialEntityTypes\" id=\"nanomaterialEntityTypes\" [(ngModel)]=\"data.nanomaterialEntityTypes\">\r\n                            <option *ngFor=\"let samp of sampleSetupData['nanomaterialEntityTypes']\">\r\n                                {{samp}}\r\n                            </option>\r\n                        </select>\r\n                    </td>\r\n                    <td class=\"label\">\r\n                        <label for=\"functionalizingEntityTypes\">\r\n                            Functionalizing Entity Types\r\n                        </label>\r\n                    </td>\r\n                    <td>\r\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.functionalizingEntityTypes\" id=\"functionalizingEntityTypes\" [(ngModel)]=\"data.functionalizingEntityTypes\">\r\n                            <option *ngFor=\"let samp of sampleSetupData['functionalizingEntityTypes']\">\r\n                                {{samp}}\r\n                            </option>\r\n                        </select>\r\n                    </td>\r\n                    <td class=\"label\">\r\n                        <label for=\"functionTypes\">\r\n                            Function Types\r\n                        </label>\r\n                    </td>\r\n                    <td>\r\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.functionTypes\" id=\"functionTypes\" [(ngModel)]=\"data.functionTypes\">\r\n                            <option *ngFor=\"let samp of sampleSetupData['functionTypes']\">\r\n                                {{samp}}\r\n                            </option>\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"label\">\r\n                        <label for=\"characterizationType\">\r\n                            Characterization Type\r\n                        </label>\r\n                    </td>\r\n                    <td>\r\n                        <select (ngModelChange)=\"onCharacterizationType($event)\" name=\"characterizationType\" [(ngModel)]=\"data.characterizationType\" id=\"characterizationType\">\r\n                            <option [selected]=\"true\" [ngValue]=\"''\">--Select--</option>\r\n                            <option *ngFor=\"let charType of sampleSetupData['characterizationTypes']\">\r\n                                {{charType}}\r\n                            </option>\r\n                        </select>\r\n                    </td>\r\n                    <td class=\"label\">\r\n                        <ng-container *ngIf=\"data.characterizationType!=''\">\r\n                            <label for=\"characterizations\">\r\n                                Characterization\r\n                            </label>\r\n                        </ng-container>\r\n                    </td>\r\n                    <td colspan=\"3\">\r\n                        <ng-container *ngIf=\"data.characterizationType!=''\">\r\n                            <select [size]=\"7\" class=\"multiple\" multiple name=\"data.characterizations\" id=\"characterizations\" [(ngModel)]=\"data.characterizations\">\r\n                                <option *ngFor=\"let samp of characterizationsList\">\r\n                                    {{samp}}\r\n                                </option>\r\n                            </select>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"buttons\">\r\n            <div>\r\n                Searching without any parameters returns all samples.\r\n            </div>\r\n            <button [disabled]=\"loading\" (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\r\n            <button [disabled]=\"loading\" (click)=\"onSubmit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Search</button>\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SampleSearchComponent } from './sample-search.component';\r\n\r\nconst routes: Routes = [{ path: '', component: SampleSearchComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SampleSearchRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SampleSearchComponent } from './sample-search.component';\r\nimport { SampleSearchRoutingModule } from './sample-search-routing.module';\r\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    declarations: [SampleSearchComponent],\r\n    imports: [\r\n      CommonModule,\r\n      SampleSearchRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule\r\n    ]\r\n  })\r\n  export class SampleSearchModule { }\r\n\r\n"],"sourceRoot":"webpack:///"}