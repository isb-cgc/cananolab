{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-search-sample-search-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Consts } from '../../../../../constants';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { UtilService } from '../../../../common/services/util.service';\nimport { Router } from '@angular/router';\nimport { SampleSearchResultsService } from './sample-search-results/sample-search-results.service';\nimport { Properties } from 'src/assets/properties';\n@Component({\n  selector: 'canano-sample-search',\n  templateUrl: './sample-search.component.html',\n  styleUrls: ['./sample-search.component.scss']\n})\nexport class SampleSearchComponent implements OnInit {\n    @ViewChild( 'f', { static: false } ) sampleSearchForm: NgForm;\n    helpUrl = Consts.HELP_URL_SAMPLE_SEARCH;\n    toolHeadingNameSearchSample = 'Sample Search';\n    keywords;\n    data;\n    dataTrailer;\n    errors;\n    sampleSetupData={};\n    loading;\n    loadingMessage=Consts.searchingMessage;\n    pocOperand = 'contains';\n    nameOperand = 'contains';\n    sampleName;\n    samplePointOfContact;\n    characterizationType; // Note - not plural (no s)\n    nanomaterialEntityTypes = [];\n    functionTypes = [];\n    functionalizingEntityTypes = [];\n    characterizationsList = [];\n    characterizations = [];\n    searchResults;\n\n// QUERY_SAMPLE_SETUP\n\n    constructor( private apiService: ApiService, private utilService: UtilService,\n                 private router: Router, private sampleSearchResultsService: SampleSearchResultsService){\n    }\n\n    ngOnInit(): void{\n        setTimeout(()=> {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.errors={};\n        this.data={\n            \"text\":\"\",\n            \"sampleName\":\"\",\n            \"samplePointOfContact\":\"\",\n            \"pocOperand\":\"contains\",\n            \"nameOperand\":\"contains\",\n            \"nanomaterialEntityTypes\":[],\n            \"functionalizingEntityTypes\":[],\n            \"functionTypes\":[],\n            \"characterizationType\":\"\",\n            \"characterizations\":[]\n        };\n        this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n        this.init();\n    }\n\n    init(){\n        this.loading=true;\n        this.loadingMessage=Consts.loadingMessage;\n        this.apiService.doGet( Consts.QUERY_SAMPLE_SETUP, '' ).subscribe(\n            data => {\n                this.loading=null;\n                this.sampleSetupData = data;\n            },\n            error=> {\n                this.loading=null;\n            } );\n    }\n\n    onCharacterizationType(charType){\n        this.characterizationType = charType;\n        // QUERY_GET_CHARACTERIZATION_BY_TYPE\n        this.apiService.doGet( Consts.QUERY_GET_CHARACTERIZATION_BY_TYPE, 'type=' + charType ).subscribe(\n            data => {\n                this.characterizationsList = <any>data;\n            } );\n\n    }\n\n    onSubmit(){\n        this.loading=true;\n        this.loadingMessage=Consts.searchingMessage;\n        // QUERY_SEARCH_SAMPLE\n        this.apiService.doPost( Consts.QUERY_SEARCH_SAMPLE, this.data ).subscribe(\n            data => {\n                this.searchResults = <any>data;\n                this.loading=null;\n                // send search results to samplesSearchResults\n                this.sampleSearchResultsService.setSearchResults( this.searchResults );\n                this.router.navigate(['home/samples/sample-search-results']); // @FIXME TESTING  Don't hard code this!!!\n            },\n            error=> {\n                this.loading=null;\n                this.errors=error;\n            } );\n    }\n\n    reset() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n    }\n\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameSearchSample\" [otherUrl]=\"{title:'Advanced Search',link:'home/samples/sample-advanced-search'}\"\n>\n</canano-main-display-heading>\n<div class=\"mainSection\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <canano-loader [loading]=\"loading\" [message]=\"loadingMessage\"></canano-loader>\n    <form name=\"sampleSearchForm\">\n        <div class=\"mainBorder\">\n            <table class=\"searchForm\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"keywords\">\n                            Keywords\n                        </label>\n                    </td>\n                    <td colspan=\"5\">\n                        <textarea name=\"keywords\" id=\"keywords\" [(ngModel)]=\"data.text\" rows=\"3\" cols=\"60\">\n\n                        </textarea><br />\n                        <i>\n                            searching characterization keywords, publication keywords and text in characterization descriptions enter one keyword per line\n                        </i>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"sampleName\">\n                            Sample Name\n                        </label>\n                    </td>\n                    <td colspan=\"5\">\n                        <label for=\"nameOperand\">\n                            <select name=\"nameOperand\" [(ngModel)]=\"data.nameOperand\">\n                                <option [selected]=\"true\">contains</option>\n                                <option>equals</option>\n                            </select>\n                        </label>\n                        <input type=\"text\" id=\"sampleName\" name=\"data.sampleName\" [(ngModel)]=\"data.sampleName\" size=\"60\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"samplePointOfContact\">\n                            Sample Point of Contact\n                        </label>\n                    </td>\n                    <td colspan=\"5\">\n                        <label for=\"pocOperand\">\n                            <select name=\"pocOperand\" [(ngModel)]=\"data.pocOperand\">\n                                <option [selected]=\"true\">contains</option>\n                                <option>equals</option>\n                            </select>\n                        </label>\n                        <input type=\"text\" name=\"data.samplePointOfContact\" id=\"samplePointOfContact\" [(ngModel)]=\"data.samplePointOfContact\" size=\"60\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"nanomaterialEntityTypes\">\n                            Nanomaterial Entity\n                        </label>\n                    </td>\n                    <td>\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.nanomaterialEntityTypes\" id=\"nanomaterialEntityTypes\" [(ngModel)]=\"data.nanomaterialEntityTypes\">\n                            <option *ngFor=\"let samp of sampleSetupData['nanomaterialEntityTypes']\">\n                                {{samp}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"functionalizingEntityTypes\">\n                            Functionalizing Entity Types\n                        </label>\n                    </td>\n                    <td>\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.functionalizingEntityTypes\" id=\"functionalizingEntityTypes\" [(ngModel)]=\"data.functionalizingEntityTypes\">\n                            <option *ngFor=\"let samp of sampleSetupData['functionalizingEntityTypes']\">\n                                {{samp}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"functionTypes\">\n                            Function Types\n                        </label>\n                    </td>\n                    <td>\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.functionTypes\" id=\"functionTypes\" [(ngModel)]=\"data.functionTypes\">\n                            <option *ngFor=\"let samp of sampleSetupData['functionTypes']\">\n                                {{samp}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"characterizationType\">\n                            Characterization Type\n                        </label>\n                    </td>\n                    <td>\n                        <select (ngModelChange)=\"onCharacterizationType($event)\" name=\"characterizationType\" [(ngModel)]=\"data.characterizationType\" id=\"characterizationType\">\n                            <option [selected]=\"true\" [ngValue]=\"''\">--Select--</option>\n                            <option *ngFor=\"let charType of sampleSetupData['characterizationTypes']\">\n                                {{charType}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <ng-container *ngIf=\"data.characterizationType!=''\">\n                            <label for=\"characterizations\">\n                                Characterization\n                            </label>\n                        </ng-container>\n                    </td>\n                    <td colspan=\"3\">\n                        <ng-container *ngIf=\"data.characterizationType!=''\">\n                            <select [size]=\"7\" class=\"multiple\" multiple name=\"data.characterizations\" id=\"characterizations\" [(ngModel)]=\"data.characterizations\">\n                                <option *ngFor=\"let samp of characterizationsList\">\n                                    {{samp}}\n                                </option>\n                            </select>\n                        </ng-container>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"buttons\">\n            <div>\n                Searching without any parameters returns all samples.\n            </div>\n            <button [disabled]=\"loading\" (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n            <button [disabled]=\"loading\" (click)=\"onSubmit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Search</button>\n\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleSearchComponent } from './sample-search.component';\n\nconst routes: Routes = [{ path: '', component: SampleSearchComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleSearchRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleSearchComponent } from './sample-search.component';\nimport { SampleSearchRoutingModule } from './sample-search-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [SampleSearchComponent],\n    imports: [\n      CommonModule,\n      SampleSearchRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class SampleSearchModule { }\n\n"],"sourceRoot":"webpack:///"}