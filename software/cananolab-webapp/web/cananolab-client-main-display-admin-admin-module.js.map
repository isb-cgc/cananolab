{"version":3,"sources":["./src/app/cananolab-client/main-display/admin/admin-routing.module.ts","./src/app/cananolab-client/main-display/admin/admin.module.ts","./src/app/cananolab-client/main-display/admin/user-results/user-results.component.ts","./src/app/cananolab-client/main-display/admin/user-results/user-results.component.html","./src/app/cananolab-client/main-display/admin/admin.component.ts","./src/app/cananolab-client/main-display/admin/admin.component.html","./src/app/cananolab-client/main-display/admin/user-results/user-results.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nconst routes: Routes = [{ path: '', component: AdminComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserResultsModule } from './user-results/user-results.module';\n\n@NgModule({\n    declarations: [AdminComponent],\n    imports: [\n      CommonModule,\n      AdminRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      UserResultsModule\n    ]\n  })\n  export class AdminModule { }\n","import { Component, Input, OnInit,OnChanges } from '@angular/core';\nimport { Properties } from 'src/assets/properties';\nimport { Consts } from 'src/app/constants';\nimport { SortState } from 'src/app/constants';\nimport { Router } from '@angular/router';\nimport { SearchResultsPagerService } from 'src/app/cananolab-client/common/components/search-results-pager/search-results-pager.service';\nimport { UtilService } from 'src/app/cananolab-client/common/services/util.service';\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\nimport { takeUntil,timeout } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { timeoutWith } from 'rxjs/operators'\nimport { throwError } from 'rxjs'\n\n@Component({\n  selector: 'canano-user-results',\n  templateUrl: './user-results.component.html',\n  styleUrls: ['./user-results.component.scss']\n})\nexport class UserResultsComponent implements OnInit {\n    @Input() searchResults;\n    columnHeadings = [\n        {Actions:'Actions'},\n        {username:'Username'},\n        {firstName:'First Name'},\n        {lastName:'Last Name'},\n        {organization:'Organization'},\n        {department:'Department'},\n        {title:'Title'},\n        {phoneNumber:\"Phone\"},\n        {emailId:\"Email\"}\n    ];\n\n    maxPageLength = Properties.MAX_PAGE_LENGTH;\n    pageLength = Properties.DEFAULT_PAGE_LENGTH;\n    pageCount = 10;\n    searchResultsCount = -1;\n    currentPage = 0;\n    searchResultsPageToDisplay;\n    userName;\n\n    sortingStates = [\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n    ];\n\n    sortState = SortState;\n    properties = Properties;\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private router: Router,\n        private searchResultsPagerService: SearchResultsPagerService,\n        private utilService: UtilService,\n        private statusDisplayService: StatusDisplayService\n    ) { }\n\n    ngOnInit(): void {\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n\n        this.statusDisplayService.updateUserEmitter\n            .pipe(timeoutWith(Properties.HTTP_TIMEOUT, throwError(new Error(\"Didn't see user update!\"))))\n            .subscribe((data) => {\n                this.userName = Properties.current_user;\n            });\n            this.searchResultsCount = this.searchResults.length;\n            this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n            this.onPageLengthChange();\n    }\n\n    ngOnChanges(): void {\n\n        this.maxPageLength = Properties.MAX_PAGE_LENGTH;\n        this.pageLength = Properties.DEFAULT_PAGE_LENGTH;\n        this.pageCount = 10;\n        this.searchResultsCount = -1;\n        this.currentPage = 0;\n        this.searchResultsPageToDisplay;\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n            this.searchResultsCount = this.searchResults.length;\n            this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n            this.onPageLengthChange();\n\n    console.log(this.currentPage)\n    }\n\n    setupPage() {\n        this.searchResultsPageToDisplay = this.searchResults.slice(\n            this.pageLength * this.currentPage,\n            this.pageLength * (this.currentPage + 1)\n        );\n    }\n\n    onSortClick(i, key) {\n        if (i) {\n            if (this.sortingStates[i]) {\n                // clicking on column that already is sorted on //\n                this.sortingStates[i] = this.sortingStates[i] == 1 ? 2 : 1;\n            } else {\n                // reset sorting states //\n                this.sortingStates.forEach((item, index) => {\n                    this.sortingStates[index] = 0;\n                });\n                this.sortingStates[i] = 1;\n            }\n            console.log(this.sortingStates)\n            if (this.sortingStates[i] == 1) {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) > this.getStringValue(b[key]) ? 1 : -1));\n            } else {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) < this.getStringValue(b[key]) ? 1 : -1));\n            }\n            this.setupPage();\n        }\n    }\n\n    navigateToEditUser(user) {\n        this.router.navigate(['/home/admin/update-user',user])\n    }\n\n    navigateToResetPassword(user) {\n        this.router.navigate(['/home/admin/reset-password',user])\n    }\n\n    getStringValue(val) {\n        if (val) {\n            return val.toString().toUpperCase()\n        }\n        return ''\n    }\n\n\n    onPageLengthChange() {\n        if (this.pageLength < 1) {\n            this.pageLength = 1;\n        }\n        if (this.pageLength > this.maxPageLength) {\n            this.pageLength = this.maxPageLength;\n        }\n\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.searchResultsPagerService.setPageCount(this.pageCount);\n        this.setupPage(); // Sets this page as the currently viewed search results.\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n\n}\n","<div>\n<div *ngIf=\"!searchResults.length\" class=\"mainBorder\"> No search results found. </div>\n<div *ngIf=\"searchResults.length\">\n    <span class=\"ml-2\">\n        {{searchResults.length}} Item{{(searchResults.length > 1 ? 's' : '')}} found, displaying\n        {{(currentPage * pageLength) + 1}}\n        -{{ (((currentPage * pageLength) + pageLength) > searchResults.length) ? searchResults.length : (currentPage *\n        pageLength) + pageLength }}\n    </span>\n<span class=\"search-results-pager\">\n    <!-- Page length number setting  -->\n    <span class=\"ml-5\">\n        Show\n        <input class=\"number-spinner rows-per-page-spinner\" min=\"1\" max=\"{{maxPageLength}}\" type=\"number\"\n            [(ngModel)]=\"pageLength\" (change)=\"onPageLengthChange()\">\n        entries\n    </span>\n    <!-- Pager buttons -->\n    <canano-search-results-pager style=\"float: right;\" [totalCount]=\"searchResultsCount\" [startingPageLength]=\"pageLength\"></canano-search-results-pager>\n    </span><br /><br />\n    <table class=\"dataTable\">\n        <tr>\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <th *ngFor=\"let colKeyValue of col | keyvalue\" class=\"unselectable hand\" (click)=\"onSortClick(i,colKeyValue.key)\">\n                    <label for=\"sortClick\" class=\"hand\">\n                        {{ colKeyValue.value }}\n                        <span *ngIf=\"i > 0\" id=\"sortClick\" class=\"inline\">\n                            <span *ngIf=\"i > 0\" class=\"sortImages\" >\n                                <span *ngIf=\"sortingStates[i] === sortState.NO_SORT\">\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                    </svg>\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                    </svg>\n                                </span>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_UP\" width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                </svg>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_DOWN\"  width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                </svg>\n                            </span>\n                        </span>\n                    </label>\n                    <!-- No sorting for \"Actions\" column -->\n\n                    <!-- END Add sorting icons -->\n                </th>\n            </ng-container>\n        </tr>\n        <tr *ngFor=\"let res of searchResultsPageToDisplay; let even=even; let odd=odd; let i=index\" class=\"search-results-tr\" [ngClass]=\"{\n            '': even,\n            'rowOdd': odd\n        }\">\n            <td class=\"search-results-td\">\n                <a (click)=\"navigateToEditUser(res['username'])\">Edit</a><br />\n                <a (click)=\"navigateToResetPassword(res['username'])\">Reset Password</a>\n            </td>\n            <td class=\"search-results-td\"> {{res['username']}} </td>\n            <td class=\"search-results-td\"> {{res['firstName']}} </td>\n            <td class=\"search-results-td\"> {{res['lastName']}} </td>\n            <td class=\"search-results-td\"> {{res['organization']}} </td>\n            <td class=\"search-results-td\"> {{res['department']}} </td>\n            <td class=\"search-results-td\"> {{res['title']}} </td>\n            <td class=\"search-results-td\"> {{res['phoneNumber']}} </td>\n            <td class=\"search-results-td\"> {{res['emailId']}} </td>\n        </tr>\n</table>\n<!-- Pager buttons -->\n<br />\n<canano-search-results-pager style=\"float: right; \" [totalCount]=searchResultsCount [startingPageLength]=pageLength> </canano-search-results-pager>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Consts } from '../../../constants';\nimport { ApiService } from '../../common/services/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'canano-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n    currentUrl='admin';\n    message='';\n    errors={};\n    resetData={oldpassword:\"\",newpassword:\"\"};\n    toolHeadingName='Manage Users';\n    userData={};\n    username='';\n    userSearchResults;\n    searchUserName='';\n    searchAll;\n    piiConfirmed=false;\n    constructor(private activatedRoute:ActivatedRoute,private router:Router,private apiService:ApiService,private httpClient:HttpClient) { }\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe(data=> {\n            this.username=data['username'];\n            this.searchAll=data['all'];\n            if (this.username) {\n                this.resetData['username']=this.username;\n                this.apiService.doGet(Consts.QUERY_ADMIN_USER_READ,'username='+this.username).subscribe(data=> {\n                    let userData=this.setupUserData();\n                    Object.keys(userData).forEach(element=> { // we dont want credentials so create new object first then get keys //\n                        if (element=='roles') {\n                            data[element].splice(data[element].indexOf('ROLE_ANONYMOUS'),1)\n                        }\n                        this.userData[element]=data[element];\n                    })\n\n                })\n            }\n        })\n        if (this.router.url.includes('update-user')) {\n            this.currentUrl='update-user';\n            this.toolHeadingName='Update User';\n        }\n        if (this.router.url.includes('create-user')) {\n            this.currentUrl='create-user';\n            this.toolHeadingName='Create User';\n            this.userData=this.setupUserData();\n            this.userData['username']='';\n        }\n        if (this.router.url.includes('search-user')) {\n            this.currentUrl='search-user';\n            this.toolHeadingName='Search Users';\n            if (this.searchAll) {\n                this.searchForUsers();\n            }\n        }\n        if (this.router.url.includes('reset-password')) {\n            this.currentUrl='reset-password';\n            this.toolHeadingName='Reset Password';\n        }\n\n\n    }\n\n    cancelResetPassword() {\n        this.router.navigate(['home/admin/search-user/all'])\n    }\n\n    reset() {\n        this.userData=this.setupUserData();\n        if (this.currentUrl=='create-user') {\n            this.userData['username']=='';\n        };\n        if (this.currentUrl=='update-user') {\n            this.userData['username']=this.username;\n        }\n        this.piiConfirmed=false;\n    }\n\n    resetSearch() {\n        this.searchUserName='';\n    }\n    resetPassword() {\n        let params =[];\n        Object.keys(this.resetData).forEach(key=> {\n           params.push(key+'='+this.resetData[key])\n        })\n        // let resetData='oldpassword=asad&newpassword=sadasds&username=abcdefu'\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            } );\n        let options={\n            headers:headers,\n            method:'post',\n        }\n        this.httpClient.post( Consts.QUERY_ADMIN_RESET_PASSWORD,params.join('&'),options).subscribe(data=> {\n            this.message='Password Reset Successfully';\n        },\n        errors=> {\n            if (errors.error.text=='success') {\n                this.errors={};\n                this.message='Password Reset Successfully'\n            }\n            else {\n                console.log('a')\n                this.message='';\n                this.errors=errors;\n            }\n        })\n\n    }\n\n    setupUserData() {\n        let userData={\n            username:\"\",\n            department: \"\",\n            emailId: \"\",\n            enabled: true,\n            firstName: \"\",\n            lastName: \"\",\n            organization: \"\",\n            phoneNumber: \"\",\n            roles: [],\n            title: \"\"\n        }\n        return userData;\n    }\n\n\n\n    searchForUsers() {\n        this.apiService.doGet(Consts.QUERY_ADMIN_SEARCH_USERS,'username='+this.searchUserName).subscribe(data=>{\n            this.userSearchResults=data;\n        })\n    }\n\n\n    submit() {\n        let url;\n        if (this.currentUrl=='create-user') {\n            this.apiService.doPost(Consts.QUERY_ADMIN_USER_CREATE,this.userData).subscribe(data=> {\n                this.router.navigate(['/home/admin/update-user',data.username])\n            })\n        } url = Consts.QUERY_ADMIN_USER_CREATE;\n        if (this.currentUrl=='update-user') {\n            this.apiService.doPost(Consts.QUERY_ADMIN_USER_UPDATE,this.userData).subscribe(data=> {\n                this.message='User Successfully Updated'\n            })\n        }\n\n\n    }\n\n}\n","\n<canano-main-display-heading [helpUrl]=\"''\"\n[toolHeadingName]=\"toolHeadingName\">\n\n</canano-main-display-heading>\n\n\n<div class=\"mainSection\">\n    <div class=\"mainBorder\" *ngIf=\"currentUrl=='admin'\">\n        <div class=\"links-panel card ml-1 mt-2\">\n            <div  class=\"card-header mb-0 pb-0\">\n                <span class=\"card-title unselectable m-0 p-0\">\n                    <h5>USER LINKS</h5>\n                </span>\n\n            </div>\n            <div class=\"card-body\">\n                <a class=\"link-clicker\" routerLink=\"/home/admin/create-user\">Create a New User</a><br>\n                Select to create a new user.<br><br>\n\n                <a  class=\"link-clicker\" routerLink=\"/home/admin/search-user\">Search Existing Users</a><br>\n                Enter search criteria to obtain information on users of interest.\n\n\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"currentUrl=='reset-password'\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr *ngIf=\"errors['error']\">\n                    <td colspan=\"2\" class=\"message\">\n                        {{errors['error']}}\n                    </td>\n                </tr>\n                <tr *ngIf=\"message!=''\">\n                    <td colspan=\"2\" class=\"message\">\n                        {{message}}\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        Username\n                    </td>\n                    <td>\n                        <B>{{username}}</B>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"resetData.oldpassword\">\n                            Old Password\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"resetData.oldpassword\" id=\"resetData.oldpassword\" [(ngModel)]=\"resetData.oldpassword\" size=\"50\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"newpassword\">\n                            New Password\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"resetData.newpassword\" id=\"resetData.newpassword\" [(ngModel)]=\"resetData.newpassword\" size=\"50\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"cancelResetPassword()\" class=\"btn-canano btn-canano-default btn-canano-lg mr-1\">Cancel</button>\n                        <button [disabled]=\"resetData.oldpassword==''||resetData.newpassword==''\" (click)=\"resetPassword()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset Password</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"currentUrl=='search-user'\">\n        <div  class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"username\">\n                            Search Name\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"username\" id=\"username\" [(ngModel)]=\"searchUserName\" size=\"50\">\n                    </td>\n                </tr>\n                <tr>\n                    <td colspan=\"2\">\n                        <i>Note: You can search using Username, First Name or Last Name in the above field.\n                            Searching without any parameters returns all users.</i>\n                    </td>\n                </tr>\n                <tr *ngIf=\"userSearchResults\">\n                    <td colspan=\"2\">\n                        <canano-user-results [searchResults]=\"userSearchResults\"></canano-user-results>\n                        <!-- <table class=\"dataTable\">\n                            <tr>\n                                <th>Actions</th>\n                                <th>Username</th>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Organization</th>\n                                <th>Department</th>\n                                <th>Title</th>\n                                <th>Phone</th>\n                                <th>Email</th>\n                            </tr>\n                            <tr *ngFor=\"let user of userSearchResults\">\n                                <td>\n                                    <a (click)=\"navigateToEditUser(user)\">Edit</a><br />\n                                    <a (click)=\"navigateToResetPassword(user)\">Reset Password</a>\n                                </td>\n                                <td>{{user.username}}</td>\n                                <td>{{user.firstName}}</td>\n                                <td>{{user.lastName}}</td>\n                                <td>{{user.organization}}</td>\n                                <td>{{user.department}}</td>\n                                <td>{{user.title}}</td>\n                                <td>{{user.phoneNumber}}</td>\n                                <td>{{user.emailId}}</td>\n                            </tr>\n                        </table> -->\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"resetSearch()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button (click)=\"searchForUsers()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Search</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"currentUrl=='update-user'||currentUrl=='create-user'\">\n        <div class=\"mainBorder\">\n\n            <table class=\"dataMain\">\n                <tr *ngIf=\"message!=''\">\n                    <td colspan=\"2\" class=\"message\">\n                        {{message}}\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.username\">\n                            Username*\n                        </label>\n                    </td>\n                    <td>\n                        <B *ngIf=\"currentUrl=='update-user'\">{{this.userData.username}}</B>\n                        <input *ngIf=\"currentUrl=='create-user'\" type=\"text\" name=\"userData.userName\" id=\"userData.username\" [(ngModel)]=\"userData.username\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.firstName\">\n                            First Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.firstName\" id=\"userData.firstName\" [(ngModel)]=\"userData.firstName\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.lastName\">\n                            Last Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.lastName\" id=\"userData.lastName\" [(ngModel)]=\"userData.lastName\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.organization\">\n                            Organization\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.organization\" id=\"userData.organization\" [(ngModel)]=\"userData.organization\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.department\">\n                            Department\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.department\" id=\"userData.department\" [(ngModel)]=\"userData.department\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.title\">\n                            Title\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.title\" id=\"userData.title\" [(ngModel)]=\"userData.title\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.phoneNumber\">\n                            Phone Number\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.phoneNumber\" id=\"userData.phoneNumber\" [(ngModel)]=\"userData.phoneNumber\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.emailId\">\n                            Email\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.emailId\" id=\"userData.emailId\" [(ngModel)]=\"userData.emailId\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.roles\">\n                            Role\n                        </label>\n                    </td>\n                    <td>\n                        <select class=\"multiple\" name=\"userData.roles\" id=\"userData.roles\" [(ngModel)]=\"userData.roles\" multiple size=\"3\">\n                            <option [ngValue]=\"'ROLE_CURATOR'\">\n                                Curator\n                            </option>\n                            <option [ngValue]=\"'ROLE_RESEARCHER'\">\n                                Researcher\n                            </option>\n                            <option [ngValue]=\"'ROLE_ADMIN'\">\n                                Admin\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table>\n            <br>\n            <div style=\"width:800px\">\n                <div>\n                    Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                    points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                </div>\n                <br>\n                <div>\n                    <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                    <b> * I have read and understood the message above.</b>\n                </div>\n            </div>\n        </div>\n        <div>\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button (click)=\"submit()\" [disabled]=\"userData.username==''||userData.firstName==''||userData.lastName==''||!piiConfirmed\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </ng-container>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserResultsComponent } from './user-results.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/cananolab-client/common/modules/set-object-value/shared.module';\n\n@NgModule({\n  declarations: [UserResultsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  exports: [UserResultsComponent]\n})\nexport class UserResultsModule { }\n"],"sourceRoot":"webpack:///"}