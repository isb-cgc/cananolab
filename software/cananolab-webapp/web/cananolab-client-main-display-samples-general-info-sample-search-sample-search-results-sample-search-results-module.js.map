{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEmB;AACZ;AAChB;AAErB;;;;;;;;;;;;;;;ICI3B,yEACI;IAAA,qFACJ;IAAA,4DAAM;;;IAkCsB,uEACI;IAAA,8DACI;IADJ,0EACI;IAAA,qEACJ;IAAA,4DAAM;IACN,0EACI;IAAA,qEACJ;IAAA,4DAAM;IACV,4DAAO;;;IACP,8DACI;IADJ,0EACI;IAAA,qEACJ;IAAA,4DAAM;;;IACN,8DACI;IADJ,0EACI;IAAA,qEACJ;IAAA,4DAAM;;;IAdV,2EACI;IAAA,yKAOO;IACP,6KAEM;IACN,6KAEM;IACV,4DAAO;;;;IAdI,0DAA4C;IAA5C,2HAA4C;IAQ7C,0DAA4C;IAA5C,2HAA4C;IAG5C,0DAA8C;IAA9C,6HAA8C;;;IAb5D,2EACI;IAAA,mKAeO;IACX,4DAAO;;;IAhBI,0DAAW;IAAX,0EAAW;;;;IAL9B,yEAEI;IADA,6eAAyC;IACzC,4EACI;IAAA,uDACA;IAAA,4JAiBO;IACX,4DAAQ;IAIZ,4DAAK;;;;IAvBG,0DACA;IADA,gGACA;IAAO,0DAAW;IAAX,0EAAW;;;IAL9B,wEACI;IAAA,mJA0BK;;IACT,qEAAe;;;IA3BiB,0DAAiB;IAAjB,4IAAiB;;;;IAyC7C,wEAAiF;IAAjD,wbAAmC,UAAU,MAAG;IAAC,+DAAI;IAAA,4DAAI;;;;IAGzF,wEAAmF;IAAjD,wbAAmC,UAAU,MAAG;IAAC,+DAAI;IAAA,4DAAI;;;IAE3F,sEACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,2GACJ;;;;IACA,wEAA4F;IAAjC,sbAAgC;IAAC,2EAAgB;IAAA,4DAAI;;;IAQhH,uEAIiC;IAAA,uDACjC;IAAA,4DAAO;;;IAD0B,0DACjC;IADiC,qGACjC;;;IAIA,sEACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,oFACJ;;;IAIA,sEACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,oFACJ;;;;;IA1CR,yEAQI;IAAA,yEACI;IAAA,uIAAyF;IAGzF,uIAA2F;IAC3F,gEACA;IAAA,0IAEM;IACN,uIAAgH;IAEpH,4DAAK;IAEL,yEAA8B;IAAA,uDAAsB;IAAA,4DAAK;IAEzD,oEAAmF;IACnF,0EACI;IAAA,8IAKO;IACX,4DAAK;IAEL,0EACI;IAAA,6IAEM;IACV,4DAAK;IAEL,0EACI;IAAA,6IAEM;IACV,4DAAK;IAEL,0EACI;IAGA,4EACI;IADuB,6XAAkC,UAAU,MAAG;IACtE,wDACJ;IAAA,4DAAO;IACX,4DAAK;IAEL,0EACI;IAAA,wDACJ;;IAAA,4DAAK;IAET,4DAAK;;;;;;IAzDyB,8JAGxB;IAKM,0DAA0B;IAA1B,6FAA0B;IAG1B,0DAA4B;IAA5B,8FAA4B;IAE1B,0DAA8B;IAA9B,8FAA8B;IAGhC,0DAAqD;IAArD,8HAAqD;IAI/B,0DAAsB;IAAtB,uFAAsB;IAEX,0DAAoC;IAApC,+JAAoC;IAElE,0DAIyC;IAJzC,8NAIyC;IAK1B,0DAAoB;IAApB,0FAAoB;IAMpB,0DAA8B;IAA9B,kGAA8B;IAUhD,0DACJ;IADI,wGACJ;IAIA,0DACJ;IADI,mLACJ;;;;IAlHR,sEACA;IAAA,0EACI;IAAA,uDAIJ;IAAA,4DAAO;IAEP,0EACI;IACA,0EACI;IAAA,iEACA;IAAA,4EAEA;IADI,uWAAwB;IAD5B,4DAEA;IAAA,oEACJ;IAAA,4DAAO;IAGP,6FACkE;IACtE,4DAAO;IAEP,4EACI;IACA,sEACI;IAAA,yJA4Be;IACnB,4DAAK;IAIL,uIA0DK;IAET,4DAAQ;IAAA,iEACR;IACA,8FAC8B;IAClC,4DAAM;;;IAxHE,0DAIJ;IAJI,0ZAIJ;IAMoE,0DAAuB;IAAvB,gGAAuB;IAC/E,sFAAwB;IAKmB,0DAA+B;IAA/B,iGAA+B;IAOhD,0DAAmB;IAAnB,0FAAmB;IAiChC,0DAA+B;IAA/B,sGAA+B;IA8DJ,0DAA+B;IAA/B,iGAA+B;;;IAhIvF,yEACI;IAAA,8EAEgB;IAChB,8HAEM;IAEN,gIA0HE;IACN,4DAAM;;;IAlIa,0DAAmB;IAAnB,mFAAmB;IAG5B,0DAA2B;IAA3B,8FAA2B;IAI3B,0DAA0B;IAA1B,6FAA0B;;ADG7B,MAAM,4BAA4B;IAyCrC,YACY,0BAAsD,EACtD,yBAAoD,EACpD,oBAA0C,EAC1C,UAAsB,EACtB,MAAc,EACd,gCAAkE;QALlE,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,qCAAgC,GAAhC,gCAAgC,CAAkC;QA9C9E,mBAAc,GAAG;YACb,EAAE,OAAO,EAAE,SAAS,EAAE;YACtB,EAAE,UAAU,EAAE,aAAa,EAAE;YAC7B,EAAE,cAAc,EAAE,0BAA0B,EAAE;YAC9C,EAAE,WAAW,EAAE,aAAa,EAAE;YAC9B,EAAE,SAAS,EAAE,WAAW,EAAE;YAC1B,EAAE,iBAAiB,EAAE,mBAAmB,EAAE;YAC1C,EAAE,gBAAgB,EAAE,mBAAmB,EAAE;YACzC,EAAE,WAAW,EAAE,SAAS,EAAE;SAC7B,CAAC;QAEF,kBAAa,GAAG,6DAAU,CAAC,eAAe,CAAC;QAC3C,eAAU,GAAG,6DAAU,CAAC,mBAAmB,CAAC;QAG5C,cAAS,GAAC,EAAE,CAAC;QACb,YAAO,GAAG,iDAAM,CAAC,sBAAsB,CAAC;QACxC,gCAA2B,GAAG,uBAAuB,CAAC;QACtD,cAAS,GAAG,EAAE,CAAC;QACf,uBAAkB,GAAG,CAAC,CAAC,CAAC;QACxB,gBAAW,GAAG,CAAC,CAAC;QAGhB,kBAAa,GAAG;YACZ,oDAAS,CAAC,OAAO;YACjB,oDAAS,CAAC,OAAO;YACjB,oDAAS,CAAC,OAAO;YACjB,oDAAS,CAAC,OAAO;YACjB,oDAAS,CAAC,OAAO;YACjB,oDAAS,CAAC,OAAO;YACjB,oDAAS,CAAC,OAAO;YACjB,oDAAS,CAAC,OAAO;SACpB,CAAC;QAEF,cAAS,GAAG,oDAAS,CAAC;QACtB,eAAU,GAAG,6DAAU,CAAC;QAGhB,kBAAa,GAAqB,IAAI,4CAAO,EAAW,CAAC;IAS9D,CAAC;IAEJ,QAAQ;QACJ,UAAU,CAAC,GAAE,EAAE;YACX,6DAAU,CAAC,YAAY,GAAG,KAAK,CAAC;QACpC,CAAC,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,CAAC;QACxE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACpD,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,0BAA0B,CAAC,YAAY,EAAE,CAAC;QAC9D,IAAI,CAAC,yBAAyB,CAAC,wBAAwB;aAClD,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACnC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,oBAAoB,CAAC,iBAAiB;aACtC,IAAI,CAAC,8DAAO,CAAC,6DAAU,CAAC,YAAY,CAAC,CAAC;aACtC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACtE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,oBAAoB,CAAC,QAAQ;QACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,gCAAgC;IAC7F,CAAC;IAED,oBAAoB,CAAC,QAAQ,EAAE,UAAU;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,gCAAgC;IAClG,CAAC;IAED,cAAc,CAAC,IAAI;QACf,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,MAAM,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,6BAA6B;QAC3F,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACxC,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/C,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,MAAM,CAAC,WAAW,CAAC,GAAC,6DAAU,CAAC,YAAY,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAE/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iDAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC,SAAS,CAC/D,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,kBAAkB,CAAC,GAAC,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,2CAA2C;QAC/C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;QACnD,CAAC,CACJ,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,EAAE;QAClB,IAAI,CAAC,UAAU;aACV,KAAK,CAAC,iDAAM,CAAC,yBAAyB,EAAE,WAAW,GAAG,EAAE,CAAC;aACzD,SAAS,CACN,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,gCAAgC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,GAAG,CAAC,CAAC;QAC1D,CAAC,CACJ,CAAC;IACV,CAAC;IAGD,aAAa,CAAC,KAAK;QACf,IAAI,KAAK,IAAE,IAAI,EAAE;YACb,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;SACrB;QACD,IAAI,KAAK,IAAE,KAAK,EAAE;YACd,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;SACrB;IACL,CAAC;IAED,SAAS;QACL,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,EAClC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAC3C,CAAC;IACN,CAAC;IAED,kBAAkB;QACd,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;YACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;SACxC;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACtE,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,uDAAuD;IAC7E,CAAC;IAED,WAAW,CAAC,CAAC,EAAE,GAAG;QACd,IAAI,CAAC,EAAE;YACH,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;gBACvB,kDAAkD;gBAClD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9D;iBAAM;gBACH,0BAA0B;gBAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBACvC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC7B;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YAC/B,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3G;iBAAM;gBACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3G;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAED,cAAc,CAAC,GAAG;QACd,IAAI,GAAG,EAAE;YACL,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE;SACtC;QACD,OAAO,EAAE;IACb,CAAC;IAED,WAAW;QACP,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;;wGAtLQ,4BAA4B;4GAA5B,4BAA4B;QCjBzC,iGAEA;QAD+D,+LAAiB,yBAAqB,IAAC;QACtG,4DAA8B;QAE9B,gGAAyE;QAEzE,wHAmIM;;QAzIuB,gFAAmB;QAMtB,0DAAmB;QAAnB,mFAAmB;;6FDWhC,4BAA4B;cALxC,uDAAS;eAAC;gBACP,QAAQ,EAAE,8BAA8B;gBACxC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACxD;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC0B;;;AACjF,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6FAA4B,EAAE,CAAC,CAAC;AAMxE,MAAM,gCAAgC;;+GAAhC,gCAAgC;0LAAhC,gCAAgC,kBAHlC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,gCAAgC,uFAFjC,4DAAY;6FAEX,gCAAgC;cAJ5C,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACkC;AACS;AACE;AAC/C;;AAYpC,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAP3B;YACP,4DAAY;YACZ,sGAAgC;YAChC,2FAAY;YACZ,0DAAW;SACZ;mIAEU,yBAAyB,mBARrB,6FAA4B,aAEzC,4DAAY;QACZ,sGAAgC;QAChC,2FAAY;QACZ,0DAAW;6FAGF,yBAAyB;cATvC,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,6FAA4B,CAAC;gBAC5C,OAAO,EAAE;oBACP,4DAAY;oBACZ,sGAAgC;oBAChC,2FAAY;oBACZ,0DAAW;iBACZ;aACF","file":"cananolab-client-main-display-samples-general-info-sample-search-sample-search-results-sample-search-results-module.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SampleSearchResultsService } from './sample-search-results.service';\nimport { Consts, ProtocolScreen, SortState } from '../../../../../../constants';\nimport { Properties } from '../../../../../../../assets/properties';\nimport { takeUntil, timeout } from 'rxjs/operators';\nimport { SearchResultsPagerService } from '../../../../../common/components/search-results-pager/search-results-pager.service';\nimport { Subject } from 'rxjs';\nimport { StatusDisplayService } from '../../../../../status-display/status-display.service';\nimport { ApiService } from '../../../../../common/services/api.service';\nimport { SampleAvailabilityDisplayService } from './sample-availability-display/sample-availability-display.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'canano-sample-search-results',\n    templateUrl: './sample-search-results.component.html',\n    styleUrls: ['./sample-search-results.component.scss'],\n})\nexport class SampleSearchResultsComponent implements OnInit, OnDestroy {\n    columnHeadings = [\n        { actions: 'Actions' },\n        { sampleName: 'Sample Name' },\n        { pointOfContact: 'Primary Point of Contact' },\n        { composition: 'Composition' },\n        { functions: 'Functions' },\n        { characterizations: 'Characterizations' },\n        { dataAvailability: 'Data Availability' },\n        { createdDate: 'Created' }\n    ];\n\n    maxPageLength = Properties.MAX_PAGE_LENGTH;\n    pageLength = Properties.DEFAULT_PAGE_LENGTH;\n    loading;\n    searchResults;\n    sampleIds=[];\n    helpUrl = Consts.HELP_URL_SAMPLE_SEARCH;\n    toolHeadingNameSearchSample = 'Sample Search Results';\n    pageCount = 10;\n    searchResultsCount = -1;\n    currentPage = 0;\n    searchResultsPageToDisplay;\n\n    sortingStates = [\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT\n    ];\n\n    sortState = SortState;\n    properties = Properties;\n    userName;\n\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private sampleSearchResultsService: SampleSearchResultsService,\n        private searchResultsPagerService: SearchResultsPagerService,\n        private statusDisplayService: StatusDisplayService,\n        private apiService: ApiService,\n        private router: Router,\n        private sampleAvailabilityDisplayService: SampleAvailabilityDisplayService\n    ) {}\n\n    ngOnInit(): void {\n        setTimeout(()=> {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.searchResults = this.sampleSearchResultsService.getSearchResults();\n        this.searchResultsCount = this.searchResults.length;\n        this.sampleIds=this.sampleSearchResultsService.getSampleIds();\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n\n        this.statusDisplayService.updateUserEmitter\n            .pipe(timeout(Properties.HTTP_TIMEOUT))\n            .subscribe((data) => {\n                this.userName = data;\n            });\n\n        this.searchResultsCount = this.searchResults.length;\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.onPageLengthChange();\n    }\n\n    navigateToSampleEdit(sampleId) {\n        console.log('test');\n        this.router.navigate(['home/samples/sample', sampleId]); // @FIXME  Don't hard code these\n    }\n\n    navigateToSampleView(sampleId, sampleName) {\n        this.router.navigate(['home/samples/view-sample', sampleId]); // @FIXME  Don't hard code these\n    }\n\n    addToFavorites(samp) {\n        console.log('addToFavorites samp: ', samp);\n        let favObj = { dataType: 'sample', loginName: this.userName}; // @FIXME User real user name\n        favObj['dataName'] = samp['sampleName'];\n        favObj['dataId'] = samp['sampleId'];\n        favObj['description'] = samp['nanoEntityDesc'];\n        favObj['editable'] = samp['editable'];\n        favObj['loginName']=Properties.current_user;\n\n        console.log('favObj:', favObj);\n\n        this.apiService.doPost(Consts.QUERY_ADD_FAVORITE, favObj).subscribe(\n            (data) => {\n                samp['addedToFavorites']=data;\n                console.log(samp)\n                // console.log('set Fave results: ', data);\n            },\n            (err) => {\n                console.log('ERROR QUERY_ADD_FAVORITE: ', err);\n            }\n        );\n    }\n\n    onAvailabilityClick(id) {\n        this.apiService\n            .doGet(Consts.QUERY_SAMPLE_AVAILABILITY, 'sampleId=' + id)\n            .subscribe(\n                (data) => {\n                    this.sampleAvailabilityDisplayService.displayStuff(data);\n                },\n                (err) => {\n                    console.log('ERROR QUERY_SAMPLE_AVAILABILITY: ', err);\n                }\n            );\n    }\n\n\n    downloadReady(event) {\n        if (event==true) {\n            this.loading=null;\n        }\n        if (event==false) {\n            this.loading=true;\n        }\n    }\n\n    setupPage() {\n        this.searchResultsPageToDisplay = this.searchResults.slice(\n            this.pageLength * this.currentPage,\n            this.pageLength * (this.currentPage + 1)\n        );\n    }\n\n    onPageLengthChange() {\n        if (this.pageLength < 1) {\n            this.pageLength = 1;\n        }\n        if (this.pageLength > this.maxPageLength) {\n            this.pageLength = this.maxPageLength;\n        }\n\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.searchResultsPagerService.setPageCount(this.pageCount);\n        this.setupPage(); // Sets this page as the currently vied search results.\n    }\n\n    onSortClick(i, key) {\n        if (i) {\n            if (this.sortingStates[i]) {\n                // clicking on column that already is sorted on //\n                this.sortingStates[i] = this.sortingStates[i] == 1 ? 2 : 1;\n            } else {\n                // reset sorting states //\n                this.sortingStates.forEach((item, index) => {\n                    this.sortingStates[index] = 0;\n                });\n                this.sortingStates[i] = 1;\n            }\n            console.log(this.sortingStates)\n            if (this.sortingStates[i] == 1) {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) > this.getStringValue(b[key]) ? 1 : -1));\n            } else {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) < this.getStringValue(b[key]) ? 1 : -1));\n            }\n            this.setupPage();\n        }\n    }\n\n    getStringValue(val) {\n        if (val) {\n            return val.toString().toUpperCase()\n        }\n        return ''\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\" [toolHeadingName]=\"toolHeadingNameSearchSample\"\n[exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"sampleIds\" (downloadReady)=\"downloadReady($event)\"  [backUrl]=\"'home/samples/sample-search'\">\n</canano-main-display-heading>\n\n<canano-sample-availability-display></canano-sample-availability-display>\n\n<div class=\"mainSection\" *ngIf=\"searchResults\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n    <div *ngIf=\"!searchResults.length\" class=\"mainBorder\">\n        No search results found.\n    </div>\n\n    <div *ngIf=\"searchResults.length\">\n    <span class=\"ml-2\">\n        {{searchResults.length}} Item{{(searchResults.length > 1 ? 's' : '')}} found, displaying\n        {{(currentPage * pageLength) + 1}}\n        -{{ (((currentPage * pageLength) + pageLength) > searchResults.length) ? searchResults.length : (currentPage *\n        pageLength) + pageLength }}\n    </span>\n\n    <span class=\"search-results-pager\">\n        <!-- Page length number setting  -->\n        <span class=\"ml-5\">\n            Show\n            <input class=\"number-spinner rows-per-page-spinner\" min=\"1\" max=\"{{maxPageLength}}\" type=\"number\"\n                [(ngModel)]=\"pageLength\" (change)=\"onPageLengthChange()\">\n            entries\n        </span>\n\n        <!-- Pager buttons -->\n        <canano-search-results-pager style=\"float: right;\" [totalCount]=searchResultsCount\n            [startingPageLength]=pageLength></canano-search-results-pager>\n    </span>\n\n    <table class=\"dataTable\">\n        <!-- -----  Header row  ----- -->\n        <tr>\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <th *ngFor=\"let colKeyValue of col | keyvalue\" class=\"unselectable hand\"\n                    (click)=\"onSortClick(i, colKeyValue.key)\">\n                    <label for=\"sortClick\" class=\"hand\">\n                        {{ colKeyValue.value }}\n                        <span *ngIf=\"i > 0\" id=\"sortClick\" class=\"inline\">\n                            <span *ngIf=\"i > 0\" class=\"sortImages\" >\n                                <span *ngIf=\"sortingStates[i] === sortState.NO_SORT\">\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                    </svg>\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                    </svg>\n                                </span>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_UP\" width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                </svg>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_DOWN\"  width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                </svg>\n                            </span>\n                        </span>\n                    </label>\n                    <!-- No sorting for \"Actions\" column -->\n\n                    <!-- END Add sorting icons -->\n                </th>\n            </ng-container>\n        </tr>\n        <!-- -----  END Header row  ----- -->\n\n\n        <tr *ngFor=\"let samp of searchResultsPageToDisplay; let even=even; let odd=odd; let i=index\"\n            class=\"search-results-tr\" [ngClass]=\"{\n                '': even,\n                'rowOdd': odd\n            }\">\n\n\n\n            <td class=\"search-results-td\">\n                <a *ngIf=\"properties.LOGGED_IN\" (click)=\"navigateToSampleEdit(samp['sampleId'])\">Edit</a>\n\n\n                <a *ngIf=\"! properties.LOGGED_IN\" (click)=\"navigateToSampleView(samp['sampleId'])\">View</a>\n                <br>\n                <div *ngIf=\"samp['addedToFavorites']\">\n                    {{samp['addedToFavorites'][0]}}\n                </div>\n                <a *ngIf=\"properties.LOGGED_IN&&!samp['addedToFavorites']\" (click)=\"addToFavorites( samp )\">Add to Favorites</a>\n\n            </td>\n\n            <td class=\"search-results-td\">{{samp['sampleName']}}</td>\n\n            <td class=\"sample-search-results-poc-td\" [innerHTML]=\"samp['pointOfContact']\"></td>\n            <td class=\"search-results-td\">\n                <span *ngIf=\"\n                samp['composition'] !== undefined &&\n                samp['composition'] !== null &&\n                samp['composition'][0] !== undefined &&\n                samp['composition'][0] !== null\">{{samp['composition'][0]}}\n                </span>\n            </td>\n\n            <td class=\"search-results-td\">\n                <div *ngFor=\"let func of samp['functions'] \">\n                    {{func}}\n                </div>\n            </td>\n\n            <td class=\"search-results-td\">\n                <div *ngFor=\"let char of samp['characterizations']; let i0 = index \">\n                    {{char}}\n                </div>\n            </td>\n\n            <td class=\"search-results-td\">\n                <!--\n            <a href=\"http://cent16:8090/rest/sample/viewDataAvailability?sampleId=25799936\"></a>\n-->\n                <span class=\"link-clicker\" (click)=\"onAvailabilityClick(samp['sampleId'])\">\n                    {{samp['dataAvailability']}}\n                </span>\n            </td>\n\n            <td class=\"search-results-td\">\n                {{samp['createdDate'] | date : \"shortDate\"}}\n            </td>\n\n        </tr>\n\n    </table><br />\n    <!-- Pager buttons -->\n    <canano-search-results-pager style=\"float: right; \" [totalCount]=searchResultsCount [startingPageLength]=pageLength>\n    </canano-search-results-pager>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleSearchResultsComponent } from './sample-search-results.component';\nconst routes: Routes = [{ path: '', component: SampleSearchResultsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleSearchResultsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleSearchResultsComponent } from './sample-search-results.component';\nimport { SampleSearchResultsRoutingModule } from './sample-search-results-routing.module';\nimport { SharedModule } from '../../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [SampleSearchResultsComponent],\n    imports: [\n      CommonModule,\n      SampleSearchResultsRoutingModule,\n      SharedModule,\n      FormsModule\n    ]\n  })\n  export class SampleSearchResultsModule { }\n"],"sourceRoot":"webpack:///"}