{"version":3,"file":"src_app_cananolab-client_main-display_samples_publications_editpublication_editpublication_mo-e6bb35.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication-routing.module.ts","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.component.ts","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.component.html","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.module.ts","./src/app/cananolab-client/main-display/samples/publications/editpublication/editpublication.pipe.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditpublicationComponent } from './editpublication.component';\n\nconst routes: Routes = [{ path: '', component: EditpublicationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EditpublicationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router,ActivatedRoute, PRIMARY_OUTLET } from '@angular/router';\nimport { Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { EditpublicationPipe } from './editpublication.pipe';\n\n@Component({\n  selector: 'canano-editpublication',\n  templateUrl: './editpublication.component.html',\n  styleUrls: ['../../../../../btn-bravo-canano.scss','./editpublication.component.scss']\n})\nexport class EditpublicationComponent implements OnInit {\n    accessIndex;\n    authorIndex;\n    currentAuthor;\n    currentDropdownValues;\n    currentFile;\n    data;\n    dataTrailer;\n    errors;\n    fileName;\n    helpUrl = Consts.HELP_URL_CREATE_PUBLICATIONS;\n    message;\n    publicationId;\n    recipientList;\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleList;\n    samples;\n    setupData;\n    toolHeadingNameManage;\n    theAccess;\n    theFile;\n    type;\n    downloadUrl=Consts.QUERY_PUBLICATION_DOWNLOAD;\n    submitReviewButton=true;\n    editingAccessRow = false;\n\n  constructor(private apiService:ApiService,private navigationService:NavigationService,private httpClient:HttpClient,private route:ActivatedRoute,private router:Router) { }\n\n  ngOnInit(): void {\n      console.log(Consts)\n    this.navigationService.setCurrentSelectedItem(3);\n    this.currentDropdownValues={};\n    this.recipientList;\n    this.errors={};\n    this.sampleList=[];\n    this.currentFile={\n        \"uriExternal\":false,\n\n\n    }\n    this.route.params.subscribe(\n        ( params: Params ) => {\n            this.sampleId=params['sampleId'];\n            this.type=params['type'];\n            this.publicationId=params['publicationId'];\n            if (this.sampleId) {\n                this.apiService.getSampleName(this.sampleId).subscribe(data=>this.toolHeadingNameManage='Edit '+data['sampleName']+' Publication')\n            }\n\n            if (this.publicationId && this.publicationId != -1) {\n                this.helpUrl = Consts.HELP_URL_EDIT_PUBLICATIONS;\n            } else {\n                this.helpUrl = Consts.HELP_URL_CREATE_PUBLICATIONS;\n            }\n\n            if(\n                this.sampleId <= 0 ){\n                this.sampleId = Properties.CURRENT_SAMPLE_ID;\n            }else{\n                Properties.CURRENT_SAMPLE_ID = this.sampleId;\n            };\n\n            this.type=params['type'];\n            let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_SETUP,'');\n            url.subscribe(data=> {\n                if (this.sampleId) { Properties.SAMPLE_TOOLS = true; }\n                this.setupData=data;\n                this.setupData['otherSampleNames']=[];\n                if (!this.publicationId || this.publicationId == -1) {\n                    this.data[\"isCuratorEditing\"] = this.setupData[\"isCuratorEditing\"];\n                }\n            },\n            error=> {\n                this.errors=error;\n            })\n\n            if (this.publicationId) {\n                if (this.publicationId!=-1) {\n                    this.toolHeadingNameManage='Edit Publication';\n\n                    var editUrl;\n                    if (this.sampleId) {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+this.publicationId+'&sampleId='+this.sampleId);\n                    }\n                    else {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+this.publicationId+'&sampleId=');\n                    }\n                    editUrl.subscribe(data=> {\n                        this.data=data;\n                        this.currentFile['uriExternal']=data['uriExternal'];\n                        this.currentFile['externalUrl']=data['uri'];\n                        this.errors={};\n                    },\n                    error=>{\n                        this.errors=error;\n                    })\n                }\n                else {\n                    this.toolHeadingNameManage='Create Publication';\n                    this.setupNewPublication();\n                }\n\n            }\n            else {\n                if (this.sampleId) {\n\n                }\n                else {\n                    console.log('completely new')\n                }\n                this.setupNewPublication();\n            }\n        }\n    );\n  }\n\n    addAccess() {\n        this.accessIndex=-1;\n        this.recipientList=null;\n        this.theAccess={\n                \"accessType\":\"\",\n                \"recipient\":\"\",\n                \"roleName\":\"\",\n                \"recipientDisplayName\":\"\"\n            }\n\n        this.editingAccessRow = false;\n    }\n\n    addAuthor() {\n        this.authorIndex=-1;\n        this.currentAuthor={\n            \"firstName\":\"\",\n            \"lastName\":\"\",\n            \"initial\":\"\"\n        }\n    }\n\n    delete() {\n        if (confirm(\"Are you sure you wish to delete this publication?\")) {\n            let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_DELETE,this.data);\n            url.subscribe(data=> {\n                if (this.sampleId) {\n                    this.router.navigate( ['home/samples/publications', this.sampleId] );  // @FIXME  Don't hard code these\n                }\n                else {\n                    this.router.navigate( ['/home/publications'] );  // @FIXME  Don't hard code these\n                }\n            },\n            errors=> {\n                this.errors=errors;\n            })\n        };\n    };\n\n    editAccess(index,access) {\n        console.log(index,access)\n        this.accessIndex=index;\n        this.recipientList=null;\n        this.theAccess=JSON.parse(JSON.stringify(access));\n        this.editingAccessRow = true;\n    }\n\n    editAuthor(index,author) {\n        this.authorIndex=index;\n        this.currentAuthor=JSON.parse(JSON.stringify(author));\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field,currentValue) {\n        this.currentDropdownValues[field]=currentValue;\n    };\n\n    cancelAuthor() {\n        this.authorIndex=null;\n    }\n\n    cancelAccess() {\n        this.accessIndex=null;\n    }\n\n    changeAccessType(event) {\n        this.recipientList=null;\n        this.theAccess.recipient='';\n        this.theAccess.roleName='';\n\n        if (event=='role') {\n            this.theAccess.recipient='ROLE_ANONYMOUS';\n            this.theAccess['recipientDisplayName']='public';\n            this.theAccess.roleName=\"R\";\n        }\n    }\n\n    deleteAuthor(index) {\n        if (confirm(\"Are you sure you wish to delete this author?\")) {\n            this.data['authors'].splice(index,1);\n            this.authorIndex=null;\n        }\n    }\n\n    deleteAccess() {\n        if (confirm(\"Are you sure you wish to delete this \" + this.theAccess.accessType + \"?\")) {\n            this.data['theAccess']=this.theAccess;\n            let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_DELETE_ACCESS,this.data);\n            url.subscribe(data=>{\n                this.data=data;\n                this.accessIndex=null;\n                this.errors={};\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n\n    }\n\n    getRecipientList() {\n        var url;\n        if (this.theAccess.accessType=='group') {\n            url = this.apiService.doGet(Consts.QUERY_GET_COLLABORATION_GROUPS,'searchStr=');\n        }\n        if (this.theAccess.accessType=='user') {\n            url = this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr=');\n        }\n        url.subscribe(data=> {\n            this.recipientList=data;\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n\n        })\n    }\n\n    getSampleList() {\n        let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_GET_SAMPLES,'searchStr=');\n        url.subscribe(data=> {\n            this.sampleList=data;\n        },\n        error=> {\n            this.errors=error;\n        })\n    }\n\n\n    lookupPubMedId(event) {\n        if (event.target.value!='') {\n            let category=JSON.parse(JSON.stringify(this.data.category));\n            let status=JSON.parse(JSON.stringify(this.data.status));\n            let getPubmedUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_GET_PUBMED_PUBLICATION,'pubmedId='+event.target.value);\n            getPubmedUrl.subscribe(data=> {\n                if (confirm(\"A database record with the same PubMed ID already exists.  Load saved information?\")) {\n                    var editUrl;\n                    if (this.sampleId) {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+data+'&sampleId='+this.sampleId);\n                    }\n                    else {\n                        editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+data+'&sampleId=');\n                    }\n                    editUrl.subscribe(data=> {\n                        this.data=data;\n                        this.setupData['otherSampleNames']=this.data['otherSampleNames'];\n                        this.data['otherSampleNames']=[];\n                        this.authorIndex=null;\n                        this.accessIndex=null;\n                        this.errors={};\n                    },\n                    error=> {\n                        this.errors=error;\n\n                    })\n                }\n                else {\n                    this.retrieveRecordByPubmedId(event.target.value,category,status);\n                }\n            },\n            error=> {\n                this.retrieveRecordByPubmedId(event.target.value,category,status);\n            })\n        }\n\n    }\n\n    retrieveRecordByPubmedId(pubMedId,category,status) {\n        let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_GET_PUBMED_INFO,'pubmedId='+pubMedId);\n        url.subscribe(data=> {\n            this.authorIndex=null;\n            this.accessIndex=null;\n            this.data={\n                \"authors\":data['authors'],\n                \"otherSampleNames\":[],\n                \"pubMedId\":pubMedId,\n                \"category\":category,\n                \"status\":status,\n                \"description\":data['description'],\n                \"digitalObjectId\":data['domainFile']['digitalObjectId'],\n                \"endPage\":data['domainFile']['endPage'],\n                \"isPublic\":false,\n                \"journalName\":data['domainFile']['journalName'],\n                \"keywordsStr\":data['keywordsStr'],\n                \"startPage\":data['domainFile']['startPage'],\n                \"theAccess\":data['theAccess'],\n                \"title\":data['domainFile']['title'],\n                \"uriExternal\":data['domainFile']['uriExternal'],\n                \"volume\":data['domainFile']['volume'],\n                \"year\":data['domainFile']['year'],\n                \"groupAccesses\":[],\n                \"userAccesses\":[]\n            };\n\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n        })\n    }\n\n    resetPublication() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n    }\n\n    saveAuthor() {\n        if (this.authorIndex==-1) {\n            this.data.authors.push(this.currentAuthor);\n        }\n        else {\n            this.data['authors'][this.authorIndex]=this.currentAuthor;\n        }\n        this.authorIndex=null;\n    }\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'],newItem['value'])\n            this.setValue(newItem['field'],newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'],newItem['value']);\n        }\n    };\n\n    savePublication() {\n        console.log('upload file fifrst')\n    };\n\n    saveAccess() {\n        this.data['theAccess']=this.theAccess;\n        let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_SAVE_ACCESS,this.data);\n        url.subscribe(data=> {\n            this.data=data;\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n        });\n        this.accessIndex=null;\n    }\n\n    selectSamples() {\n        this.data.sampleNamesStr=this.samples.join('\\r');\n    }\n\n  setupNewPublication() {\n      this.data={\n          \"authors\":[],\n          \"theAccess\":{},\n          \"isPublic\":false,\n          \"otherSampleNames\":[],\n          \"status\":\"\",\n          \"title\":\"\",\n          \"uriExternal\":false,\n          \"year\":\"\",\n          \"category\":this.type,\n          \"sampleId\":this.sampleId,\n          \"researchAreas\":[],\n          \"userAccesses\":[],\n         \"groupAccesses\":[]\n      }\n      if (this.publicationId==-1) {\n        this.data['category']='';\n        this.data['sampleId']='';\n    }\n    console.log()\n      this.data['theAccess']={};\n      this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n  };\n\n  submit() {\n      if (this.theFile) {\n        this.theFile.append('uriExternal',this.currentFile['uriExternal']);\n        this.theFile.append('externalUrl',this.currentFile['externalUrl']);\n        let uploadFileUrl = this.httpClient.post(Consts.QUERY_UPLOAD_FILE,this.theFile);\n            uploadFileUrl.subscribe(data=> {\n            this.data['uri']=data['fileName'];\n            this.submitPublication();\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n        })\n      }\n      else {\n          if (this.currentFile['uriExternal']) {\n              if (this.currentFile['externalUrl']&& this.currentFile['externalUrl']!='') {\n                this.data['uriExternal']=true;\n                this.data['externalUrl']=this.currentFile['externalUrl'];\n              }\n          }\n          this.submitPublication();\n      }\n\n  }\n\n  submitPublication() {\n    this.data['sampleId']=this.sampleId;\n    let submitUrl = this.apiService.doPost(Consts.QUERY_PUBLICATION_SAVE,this.data);\n    submitUrl.subscribe(data=> {\n        if (this.sampleId) {\n            this.router.navigate( ['home/samples/publications', this.sampleId] );  // @FIXME  Don't hard code these\n        }\n        else {\n            if (this.publicationId==-1) {\n                this.router.navigate( ['home/samples/publications/publication', data[1]] );  // @FIXME  Don't hard code these\n                this.message='Publication successfully updated with the title '+this.data['title'];\n            }\n            else {\n                let editUrl = this.apiService.doGet(Consts.QUERY_PUBLICATION_EDIT,'publicationId='+this.publicationId+'&sampleId=');\n                editUrl.subscribe(data=> {\n                    this.data=data;\n                    this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n\n                },\n                errors=> {\n                    this.errors=errors;\n                })\n                this.message='Publication successfully updated with the title '+this.data['title'];\n\n            }\n\n            setTimeout(function() {\n                document.getElementById('top').scrollIntoView();\n            },100);\n        }\n    },\n    error=> {\n        this.errors=error;\n\n    })\n  }\n\n\n    uploadFile(event) {\n        this.theFile = new FormData();\n        const tFile = event.target.files.item(0);\n        this.theFile.append('myFile', tFile, tFile.name);\n        this.theFile.append( 'uriExternal', 'false' );\n        this.theFile.append('authors',this.data['authors'])\n        this.theFile.append('theAccess',this.theAccess);\n        this.theFile.append('category',this.data['category']);\n        this.theFile.append('status',this.data['status']);\n    }\n\n    shouldShowAccessEditButton(group) {\n        if (group.recipient == 'ROLE_CURATOR') {\n            return false;\n        } else if (group.recipient == 'ROLE_ANONYMOUS') {\n            return this.data != null && this.data['isCuratorEditing'];\n        }\n\n        return true;\n    }\n\n\n    submitForReview() {\n        console.log(this.data)\n        let url = this.apiService.doPost(Consts.QUERY_PUBLICATION_SUBMIT_REVIEW,{dataId: this.data.fileId, dataName: this.data.title, dataType:\"publication\"},'text');\n        url.subscribe(data=> {\n            this.submitReviewButton=false;\n        })\n    }\n\n}\n","    <canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\"\n    id=\"top\"\n>\n</canano-main-display-heading>\n<div *ngIf=\"data&&setupData\">\n    <div class=\"mainSection\">\n        <div class=\"error\" *ngIf=\"errors['error']\">\n            {{errors['error']}}\n        </div>\n        <div class=\"error\" *ngIf=\"message\">\n            {{message}}\n        </div>\n        <form name=\"publicationForm\">\n            <div class=\"mainBorder\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"category\">\n                                Publication Type*\n                            </label>\n                        </td>\n                        <td>\n                            <select (ngModelChange)=\"addOtherValue('category',data.category)\" id=\"category\" name=\"data.category\" [(ngModel)]=\"data.category\">\n                                <option [selected]=\"data.category===''\" [ngValue]=\"''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['publicationCategories']\" [selected]=\"type==data.type\">{{type}}</option>\n                                <option>other</option>\n                            </select>\n                            <div *ngIf=\"data.category ==='other'\">\n                                <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Publication Type'\" [value]=\"currentDropdownValues['category']\" [field]=\"'data.category'\" [array]=\"'setupData.publicationCategories'\">\n\n                                </canano-other-dropdown>\n                            </div>\n                        </td>\n                        <td class=\"label\">\n                            <label for=\"status\">\n                                Publication Status*\n                            </label>\n                        </td>\n                        <td colspan=\"4\">\n                            <select (ngModelChange)=\"addOtherValue('status',data.status)\" id=\"category\" name=\"status\" [(ngModel)]=\"data.status\">\n                                <option [selected]=\"data.status===''\" [ngValue]=\"''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['publicationStatuses']\" [selected]=\"type==data.status\">{{type}}</option>\n                                <option>other</option>\n                            </select>\n                            <div *ngIf=\"data.status ==='other'\">\n                                <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Publication Status'\" [value]=\"currentDropdownValues['status']\" [field]=\"'data.status'\" [array]=\"'setupData.publicationStatuses'\">\n\n                                </canano-other-dropdown>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"pubMedId\">\n                                PubMed ID\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <a href=\"http://www.ncbi.nlm.nih.gov/pubmed/\" target=\"_blank\" rel=\"nofollow noreferrer\">Click to look up PubMed Identifier</a><br />\n                            <input (focusout)=\"lookupPubMedId($event)\" id=\"pubMedId\" type=\"text\" name=\"pubMedId\" size=\"70\" [(ngModel)]=\"data.pubMedId\"><br />\n                            <i>clicking outside of the text field after entering a valid PubMed ID enables auto-population of PubMed related fields</i>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"digitalObjectId\">\n                                Digital Object ID\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"digitalObjectId\" type=\"text\" name=\"digitalObjectId\" size=\"70\" [(ngModel)]=\"data.digitalObjectId\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"title\">\n                                Title*\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"title\" type=\"text\" name=\"title\" size=\"70\" [(ngModel)]=\"data.title\">\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"journal\">\n                                Journal\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"journal\" type=\"text\" name=\"journal\" size=\"70\" [(ngModel)]=\"data.journalName\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"year\">\n                                Year of Publication\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <input id=\"year\" type=\"text\" name=\"year\" size=\"4\" [(ngModel)]=\"data.year\">\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"['book chapter','report'].indexOf(data.category)==-1\">\n                        <td class=\"label\">\n                            <label for=\"volume\">\n                                Volume\n                            </label>\n                        </td>\n                        <td>\n                            <input id=\"volume\" type=\"text\" name=\"volume\" size=\"6\" [(ngModel)]=\"data.volume\">\n                        </td>\n                        <td class=\"label\">\n                            <label for=\"startPage\">\n                                Start Page\n                            </label>\n                        </td>\n                        <td>\n                            <input id=\"startPage\" type=\"text\" name=\"startPage\" size=\"6\" [(ngModel)]=\"data.startPage\">\n                        </td>\n                        <td class=\"label\">\n                            <label for=\"endPage\">\n                                End Page\n                            </label>\n                        </td>\n                        <td>\n                            <input id=\"endPage\" type=\"text\" name=\"endPage\" size=\"6\" [(ngModel)]=\"data.endPage\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            Authors\n                        </td>\n                        <td colspan=\"5\">\n                            <button (click)=\"addAuthor()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"data['authors'].length\">\n                        <td></td>\n                        <td colspan=\"5\">\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Last Name</th>\n                                    <th>First Name</th>\n                                    <th>Initials</th>\n                                    <th></th>\n                                </tr>\n                                <tr *ngFor=\"let author of data['authors'];let authorIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>\n                                        {{author.lastName}}\n                                    </td>\n                                    <td>\n                                        {{author.firstName}}\n                                    </td>\n                                    <td>\n                                        {{author.initial}}\n                                    </td>\n                                    <td>\n                                        <button (click)=\"editAuthor(authorIndex,author)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"authorIndex!=null\">\n                        <td></td>\n                        <td colspan=\"5\">\n                            <div class=\"mainBorder\">\n                            <table>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"lastName\">\n                                            Last Name\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <input type=\"text\" name=\"lastName\" [(ngModel)]=\"currentAuthor.lastName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"firstName\">\n                                            First Name\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <input type=\"text\" name=\"firstName\" [(ngModel)]=\"currentAuthor.firstName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"initial\">\n                                           Initials\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <input type=\"text\" name=\"initial\" [(ngModel)]=\"currentAuthor.initial\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"2\">\n                                        <br>\n                                         <div style=\"width:700px\">\n                                            <div>\n                                                Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                                                points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                                            </div>\n                                            <br>\n                                            <div>\n                                                <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                                                <b> * I have read and understood the message above.</b>\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteAuthor(authorIndex)\" [hidden]=\"authorIndex==-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td class=\"field\">\n                                        <button (click)=\"saveAuthor()\" [disabled]=\"currentAuthor.lastName=='' || currentAuthor.firstName=='' || !piiConfirmed\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelAuthor()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"keywordsStr\">\n                                Keywords<br />\n                                (one keyword per line)\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <textarea id=\"keywordsStr\" name=\"keywordsStr\" rows=\"5\" cols=\"70\" [(ngModel)]=\"data.keywordsStr\">\n                                {{data.keywordsStr}}\n                            </textarea>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"description\">\n                                Description\n                            </label>\n\n                        </td>\n                        <td colspan=\"5\">\n                            <textarea id=\"description\" name=\"description\" rows=\"5\" cols=\"70\" [(ngModel)]=\"data.description\">\n\n                            </textarea>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            <label for=\"researchAreas\">\n                                Research Category\n                            </label>\n                        </td>\n                        <td colspan=\"5\">\n                            <select size=\"7\" id=\"researchAreas\" name=\"researchAreas\" multiple=\"multiple\" [(ngModel)]=\"data.researchAreas\">\n                                <option *ngFor=\"let area of setupData['publicationResearchAreas']\" [ngValue]=\"area\">{{area}}</option>\n                            </select>\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n            <div class=\"mainBorder\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">File</td>\n                        <td class=\"files\">\n                            <label for=\"fileUpload\">\n                                Upload\n                            </label>\n                            <input type=\"radio\" name=\"curentFile.uriExternal\" id=\"fileUpload\" [value]=\"false\" [(ngModel)]=\"currentFile.uriExternal\">\n                            &nbsp;\n                            &nbsp;\n                            <label for=\"fileURL\">\n                                Enter File URL\n                            </label>\n                            <input type=\"radio\" name=\"curentFile.uriExternal\" id=\"fileURL\" [value]=\"true\" [(ngModel)]=\"currentFile.uriExternal\">\n                            <br />\n                            <ng-container *ngIf=\"currentFile.uriExternal==1\">\n                                <input id=\"uriExternal\" *ngIf=\"currentFile.uriExternal==1\" type=\"text\" name=\"currentFile.externalUrl\" [(ngModel)]=\"currentFile.externalUrl\" size=\"60\">\n                                [<canano-disclaimer></canano-disclaimer>]\n                            </ng-container>\n                            <ng-container *ngIf=\"currentFile.uriExternal==0\">\n                                <input id=\"file\" (change)=\"uploadFile($event)\" type=\"file\" name=\"currentFile.uploadFile\" [(ngModel)]=\"currentFile.file\">\n                                <ng-container *ngIf=\"data['uri']\">\n                                    <br />\n                                    <a [href]=\"downloadUrl+'?publicationId='+publicationId+'&fileId='+data.fileId\">{{data.uri}}</a>\n                                </ng-container>\n                            </ng-container>\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n\n            <div class=\"mainBorder\" *ngIf=\"sampleId\">\n                <table [ngClass]=\"{'otherSampleNames':!setupData['otherSampleNames'].length,'dataMain':setupData['otherSampleNames'].length}\">\n                    <tr *ngIf=\"!setupData['otherSampleNames'].length\">\n                        <td class=\"label\">\n                            There are no other samples to copy annotation to.\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"setupData['otherSampleNames'].length\">\n                        <td class=\"label\">\n                            <label for=\"otherSampleNames\">\n                                Copy to other samples with the same primary organization?\n                            </label>\n                        </td>\n                        <td>\n                            <select size=\"7\" id=\"otherSampleNames\" name=\"otherSampleNames\" multiple=\"multiple\" [(ngModel)]=\"data.otherSampleNames\">\n                                <option *ngFor=\"let s of setupData['otherSampleNames']\" [ngValue]=\"s\">{{s}}</option>\n                            </select>\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n\n            <div class=\"mainBorder\" *ngIf=\"!sampleId\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">\n                            Sample Name\n                        </td>\n                        <td>\n                            <textarea name=\"sampleName\" [(ngModel)]=\"data.sampleNamesStr\" rows=\"5\" cols=\"60\">\n\n                            </textarea><i>one name per line</i>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <button (click)=\"getSampleList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search for Samples</button>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"sampleList.length\">\n                        <td></td>\n                        <td>\n                            <table class=\"noSpacing\">\n                                <tr>\n                                    <td colspan=\"2\">\n                                        <label for=\"sampleFilter\">\n                                            Filter Samples\n                                        </label>\n                                        <input type=\"text\" name=\"sampleFilter\" id=\"sampleFilter\" [(ngModel)]=\"sampleFilter\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <select class=\"multiple\" name=\"samples\" [(ngModel)]=\"samples\" multiple=\"multiple\" size=\"10\">\n                                            <option *ngFor=\"let option of sampleList|filtersamples:sampleFilter\">\n                                                {{option}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"button\">\n                                        <button (click)=\"selectSamples()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Select</button>\n                                    </td>\n                                </tr>\n                            </table>\n\n                        </td>\n                    </tr>\n                </table>\n            </div><br />\n\n            <div class=\"mainBorder\">\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">\n                            Access to the Publication\n                        </td>\n                        <td>\n                            <button (click)=\"addAccess()\" [disabled]=\"data['title']=='' || data['status']==''||data['category']==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"data.groupAccesses.length\">\n                        <td></td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Group Name</th>\n                                    <th>Access</th>\n                                    <th></th>\n                                </tr>\n                                <tr *ngFor=\"let group of data.groupAccesses; let groupIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>{{group.recipientDisplayName}}</td>\n                                    <td>{{group.roleDisplayName}}</td>\n                                    <td>\n                                        <button *ngIf=\"shouldShowAccessEditButton(group)\" (click)=\"editAccess(groupIndex,group)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"data.userAccesses.length\">\n                        <td></td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>User Login Name\t</th>\n                                    <th>Access</th>\n                                    <th></th>\n                                </tr>\n                                <tr *ngFor=\"let user of data.userAccesses; let userIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>{{user.recipientDisplayName}}</td>\n                                    <td>{{user.roleDisplayName}}</td>\n                                    <td>\n                                        <button (click)=\"editAccess(userIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"accessIndex!=null\">\n                        <td></td>\n                        <td>\n                            <table class=\"authorForm\">\n                                <tr *ngIf=\"!editingAccessRow\">\n                                    <td class=\"label\">\n                                        <label for=\"accessType\">\n                                            Access By*\n                                        </label>\n                                    </td>\n                                    <td class=\"field\" colspan=\"2\">\n                                        <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.group\" id=\"accessType.group\" [value]=\"'group'\" [(ngModel)]=\"theAccess['accessType']\">\n                                        <label for=\"accessType.group\" class=\"right\">\n                                            Collaboration Group\n                                        </label>\n                                        &nbsp;\n                                        <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.user\" id=\"accessType.user\" [value]=\"'user'\" [(ngModel)]=\"theAccess['accessType']\">\n                                        <label for=\"accessType.user\" class=\"right\">\n                                            User\n                                        </label>\n                                        &nbsp;\n                                        <input *ngIf=\"data.isCuratorEditing\" (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.role\" id=\"accessType.role\" [value]=\"'role'\" [(ngModel)]=\"theAccess['accessType']\">\n                                        <label *ngIf=\"data.isCuratorEditing\" for=\"accessType.role\" class=\"right\">\n                                            Public\n                                        </label>\n                                    </td>\n                                </tr>\n                                <tr *ngIf=\"theAccess.accessType&&theAccess.accessType!='role'&&!editingAccessRow\">\n                                    <td class=\"label\">\n                                        <label for=\"access.recipient\">\n                                            <span *ngIf=\"theAccess.accessType=='group'\">\n                                                Collaboration Group*\n                                            </span>\n                                            <span *ngIf=\"theAccess.accessType=='user'\">\n                                                User*\n                                            </span>\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <button (click)=\"getRecipientList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search</button>\n                                        <ng-container *ngIf=\"recipientList\">\n                                            &nbsp;&nbsp;\n                                            <select name=\"access.recipient\" [(ngModel)]=\"theAccess.recipient\">\n                                                <option [selected]=\"theAccess.recipient===''\" [ngValue]=\"''\">--select</option>\n                                                <ng-container *ngIf=\"theAccess.accessType=='group'\">\n                                                    <option *ngFor=\"let group of recipientList\">\n                                                        {{group}}\n                                                    </option>\n                                                </ng-container>\n                                                <ng-container *ngIf=\"theAccess.accessType=='user'\">\n                                                    <option *ngFor=\"let user of recipientList|keyvalue\" [ngValue]=\"user.key\">\n                                                        {{user.value}}\n                                                    </option>\n                                                </ng-container>\n\n                                            </select>\n                                        </ng-container>\n\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"access.roleName\">\n                                            Access to the Publication*\n                                        </label>\n                                    </td>\n                                    <td class=\"field\">\n                                        <select [disabled]=\"theAccess.accessType=='role'\" name=\"access.roleName\" [(ngModel)]=\"theAccess.roleName\">\n                                            <option [selected]=\"theAccess.roleName===''\" [ngValue]=\"''\">--Select--</option>\n                                            <option *ngFor=\"let role of setupData.csmRoleNames | keyvalue\" [ngValue]=\"role.key\" [selected]=\"role.key==theAccess.roleName\">\n                                                {{role.value}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteAccess()\" *ngIf=\"accessIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td>\n                                        <button (click)=\"saveAccess()\" [disabled]=\"theAccess.accessType==''||theAccess.roleName==''||theAccess.recipient==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n            <br />\n            <div>\n                <table class=\"dataMain submit\">\n                    <tr>\n                        <td>\n                            <button class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\"\n                                    (click)=\"delete()\" >\n                                Delete</button>\n                        </td>\n                        <td>\n                            <button (click)=\"resetPublication()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                            <button [disabled]=\"data.category==''||data.status==''||data.title==''\" (click)=\"submit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                            <button class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\"\n                    (click)=\"submitForReview()\" *ngIf=\"data.review&&submitReviewButton\">\n                        Submit For Review\n                            </button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditpublicationComponent } from './editpublication.component';\nimport { EditpublicationRoutingModule } from './editpublication-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\nimport { EditpublicationPipe } from './editpublication.pipe';\nimport { DisclaimerModule } from 'src/app/cananolab-client/common/components/disclaimer/disclaimer.module';\n\n@NgModule({\n    declarations: [EditpublicationComponent,EditpublicationPipe],\n    imports: [\n      CommonModule,\n      EditpublicationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule,\n      DisclaimerModule\n    ]\n  })\n  export class EditpublicationModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filtersamples'\n})\nexport class EditpublicationPipe implements PipeTransform {\n\n  transform(value, filterValue): unknown {\n      let array=[];\n      if (filterValue) {\n          value.forEach(item=> {\n              if (item.toLowerCase().indexOf(filterValue.toLowerCase())>-1) {\n                array.push(item)\n              }\n          })\n          return array\n      }\n      else {\n          return value\n      }\n  }\n\n}\n"],"names":["RouterModule","EditpublicationComponent","routes","path","component","EditpublicationRoutingModule","forChild","imports","exports","Properties","Consts","i0","constructor","apiService","navigationService","httpClient","route","router","HELP_URL_CREATE_PUBLICATIONS","CURRENT_SAMPLE_ID","QUERY_PUBLICATION_DOWNLOAD","ngOnInit","console","log","setCurrentSelectedItem","currentDropdownValues","recipientList","errors","sampleList","currentFile","params","subscribe","sampleId","type","publicationId","getSampleName","data","toolHeadingNameManage","helpUrl","HELP_URL_EDIT_PUBLICATIONS","url","doGet","QUERY_PUBLICATION_SETUP","SAMPLE_TOOLS","setupData","error","editUrl","QUERY_PUBLICATION_EDIT","setupNewPublication","addAccess","accessIndex","theAccess","editingAccessRow","addAuthor","authorIndex","currentAuthor","delete","confirm","doPost","QUERY_PUBLICATION_DELETE","navigate","editAccess","index","access","JSON","parse","stringify","editAuthor","author","addOtherValue","field","currentValue","cancelAuthor","cancelAccess","changeAccessType","event","recipient","roleName","deleteAuthor","splice","deleteAccess","accessType","QUERY_PUBLICATION_DELETE_ACCESS","getRecipientList","QUERY_GET_COLLABORATION_GROUPS","QUERY_GET_USERS","getSampleList","QUERY_PUBLICATION_GET_SAMPLES","lookupPubMedId","target","value","category","status","getPubmedUrl","QUERY_PUBLICATION_GET_PUBMED_PUBLICATION","retrieveRecordByPubmedId","pubMedId","QUERY_PUBLICATION_GET_PUBMED_INFO","resetPublication","dataTrailer","saveAuthor","authors","push","saveOther","newItem","addDropdownItem","setValue","savePublication","saveAccess","QUERY_PUBLICATION_SAVE_ACCESS","selectSamples","sampleNamesStr","samples","join","submit","theFile","append","uploadFileUrl","post","QUERY_UPLOAD_FILE","submitPublication","submitUrl","QUERY_PUBLICATION_SAVE","message","setTimeout","document","getElementById","scrollIntoView","uploadFile","FormData","tFile","files","item","name","shouldShowAccessEditButton","group","submitForReview","QUERY_PUBLICATION_SUBMIT_REVIEW","dataId","fileId","dataName","title","dataType","submitReviewButton","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","OtherDropdownModule","EditpublicationPipe","DisclaimerModule","EditpublicationModule","declarations","transform","filterValue","array","forEach","toLowerCase","indexOf","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}