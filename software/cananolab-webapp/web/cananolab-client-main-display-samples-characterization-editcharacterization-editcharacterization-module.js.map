{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/characterization/editcharacterization/editcharacterization-routing.module.ts","./src/app/cananolab-client/main-display/samples/characterization/editcharacterization/editcharacterization.module.ts","./src/app/cananolab-client/main-display/samples/characterization/editcharacterization/editcharacterization.component.ts","./src/app/cananolab-client/main-display/samples/characterization/editcharacterization/editcharacterization.component.html"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-characterization-editcharacterization-editcharacterization-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditcharacterizationComponent } from './editcharacterization.component';\nconst routes: Routes = [{ path: '', component: EditcharacterizationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EditcharacterizationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditcharacterizationRoutingModule } from './editcharacterization-routing.module';\nimport { EditcharacterizationComponent } from './editcharacterization.component';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\nimport { DisclaimerModule } from 'src/app/cananolab-client/common/components/disclaimer/disclaimer.module';\n@NgModule({\n    declarations: [EditcharacterizationComponent],\n    imports: [\n      CommonModule,\n      EditcharacterizationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule,\n      DisclaimerModule\n    ]\n  })\nexport class EditcharacterizationModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'canano-editcharacterization',\n  templateUrl: './editcharacterization.component.html',\n  styleUrls: ['../../../../../btn-bravo-canano.scss','./editcharacterization.component.scss']\n})\nexport class EditcharacterizationComponent implements OnInit {\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    helpUrl = Consts.HELP_URL_SAMPLE_CHARACTERIZATION;\n    toolHeadingNameManage;\n    charClassName;\n    charId;\n    columnHeader;\n    columnHeaderTrailer;\n    columnOrder;\n    columnHeaderIndex;\n    currentDropdownValues;\n    currentFinding;\n    currentFile;\n    data;\n    dataTrailer;\n    errors={};\n    findingIndex;\n    fileIndex;\n    importingCSV=false;\n    instrument;\n    instrumentTrailer;\n    instrumentIndex;\n    message;\n    propertiesLoaded;\n    setupData;\n    techniqueIndex;\n    techniqueInstrument;\n    theFile:FormData=null;\n    fileName;\n    type;\n    rowData;\n\n    csvColumnMaxCount = 25; // Maximum number of columns allowed\n    csvMaxNumberOfLines = 5000; // Maximum number of rows allowed\n    csvMaxLenOfEntry = 200;\n    runaway = 10240; // A counter used to prevent an endless loop if something goes wrong.  @TODO needs a better name\n    csvDataColCount = 0;\n    csvDataObj;\n    csvDataRowCount;\n    csvImportError = '';\n    serverUrl = Properties.API_SERVER_URL;\n\n    constructor( private httpClient:HttpClient,private apiService:ApiService,private navigationService:NavigationService,private router: Router, private route: ActivatedRoute){\n    }\n\n\n  ngOnInit(): void {\n    this.navigationService.setCurrentSelectedItem(2);\n    this.currentDropdownValues = {};\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId = params['sampleId'];\n                this.charId = params['charId'];\n                this.type = params['type'];\n                this.charClassName = params['charClassName'];\n\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                };\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data=>this.toolHeadingNameManage='Edit '+data['sampleName']+ ' Characterization')\n\n\n\n                if (!this.charId) {\n                    let url = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_SETUP_ADD,'sampleId='+this.sampleId+'&charType='+this.type);\n                    url.subscribe(\n                        data=>{\n                            Properties.SAMPLE_TOOLS = true;\n                            this.errors={};\n                            this.data = data;\n                            this.data.name='';\n                            this.data.assayType='';\n                            this.data.characterizationDate=new Date(),\n                            this.setCharacterizationData();\n                            if (this.data.type=='other') {\n                                this.addOtherValue('type',this.data.type)\n                            }\n\n                        },\n                        error=> {\n                            this.errors=error;\n                        }\n                    );\n                }\n                else {\n                    let url = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_SETUP_UPDATE,'sampleId='+this.sampleId+'&charType='+this.type+'&charId='+this.charId+'&charClassName='+this.charClassName);\n                    url.subscribe(\n                        data=>{\n                            Properties.SAMPLE_TOOLS = true;\n                            this.errors={};\n\n                            this.data = data;\n                            this.propertiesLoaded=true;\n                            if (!this.data.characterizationDate) {\n                                this.data.characterizationDate=new Date()\n                            }\n                            this.setCharacterizationData();\n                        },\n                        error=> {\n                            this.errors=error;\n\n                        });\n                }\n\n            }\n        );\n    }\n\n\n    addFileForm() {\n        this.currentFile={\n            \"uriExternal\":false,\n            \"externalUrl\":\"\",\n            \"title\":\"\",\n            \"keywordsStr\":\"\",\n            \"type\":\"\",\n            \"description\":\"\",\n            \"sampleId\":this.sampleId,\n            \"uri\":\"\"\n            }\n        this.fileIndex=-1;\n    };\n\n    addFinding() {\n        this.findingIndex=-1;\n        setTimeout(function() {\n            document.getElementById('findingsEditForm').scrollIntoView();\n        },100);\n\n        this.currentFinding={\n            \"columnHeaders\":[],\n            \"dirty\":1,\n            \"numberOfColumns\":\"\",\n            \"numberOfRows\":\"\",\n            \"files\":[]\n        };\n    };\n\n    addInstrument(index) {\n        this.instrument={\n            \"modelName\":\"\",\n            \"manufacturer\":\"\",\n            \"type\":\"\"\n        }\n        this.instrumentIndex=-1;\n    };\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field,currentValue) {\n        this.currentDropdownValues[field]=currentValue;\n    };\n\n    addTechniqueInstrument() {\n        this.instrumentIndex=null;\n        this.techniqueIndex=-1;\n        this.setupTechniqueInstrument();\n    };\n\n    cancelColumnForm() {\n        this.columnHeaderIndex=null;\n    };\n\n    cancelColumnOrder() {\n        this.columnOrder=null;\n    }\n\n    cancelFile() {\n        this.fileIndex=null;\n    };\n\n    cancelFinding() {\n        this.columnHeaderIndex=null;\n        this.findingIndex=null;\n        this.columnHeaderIndex=null;\n        this.fileIndex=null;\n    };\n\n    cancelInstrument() {\n        if (this.instrumentIndex>-1) {\n            this.techniqueInstrument.instruments[this.instrumentIndex]=JSON.parse(JSON.stringify(this.instrumentTrailer));\n        }\n        this.instrumentIndex=null;\n    };\n\n    cancelTechniqueInstrument() {\n        this.instrumentIndex=null;\n        this.techniqueIndex=null;\n    };\n\n    changeColumnType(value,isDropdown) {\n        let url = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_GET_COLUMN_NAME_OPTIONS_BY_TYPE,'columnType='+value+'&charName='+this.data.name+'&assayType=');\n        url.subscribe(data=> {\n            this.errors={};\n            this.setupData.columnNameOptions=data;\n            if (isDropdown) {\n                this.columnHeader.columnName=null;\n            }\n        },\n        error=> {\n            this.errors=error;\n\n        })\n    };\n\n    changeInstrumentType(value) {\n        this.getInstrumentTypes(value);\n    };\n\n    changeColumnName(value, isDropdown) {\n        let url = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_GET_COLUMN_VALUE_UNIT_OPTIONS,'columnName='+value+'&conditionProperty=null');\n        url.subscribe(data=> {\n            this.errors={};\n            this.setupData.valueUnitOptions=data;\n            if (isDropdown) {\n                this.columnHeader.valueUnit=null;\n            }\n        },\n        error=> {\n            this.errors=error;\n        })\n    };\n\n    changeName(name) {\n        this.data.assayType = '';\n        let assayUrl = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_GET_ASSAY_TYPES_BY_CHAR_NAME,'charName='+name);\n        assayUrl.subscribe(\n            data=> {\n                this.errors={};\n                this.data['assayTypesByCharNameLookup'] = data;\n            },\n            error=> {\n                this.errors=error;\n            }\n        );\n        let charPropertiesUrl = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_GET_CHAR_PROPERTIES,'charName='+name)\n        this.propertiesLoaded=null;\n        charPropertiesUrl.subscribe(\n            data=> {\n                this.errors={};\n                this.data['property'] = data;\n                this.propertiesLoaded=true;\n            },\n            error=> {\n                this.errors=error;\n            }\n        );\n\n    };\n\n    changeType(type) {\n        this.data.name='';\n        this.data['assayTypesByCharNameLookup'] = [];\n        let url = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_GET_CHAR_NAMES_BY_CHAR_TYPE,'?charType='+type)\n        url.subscribe(\n            data=> {\n                this.data.charNamesForCurrentType = data;\n            },\n            error=> {\n                this.errors=error;\n            }\n        )\n    };\n\n    deleteCharacterization() {\n        if (confirm('Are you sure you wish to delete this characterization')) {\n            let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_REMOVE,this.data);\n            url.subscribe(data=> {\n                this.errors={};\n                this.router.navigate( ['home/samples/characterization', this.sampleId] );\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n    };\n\n    deleteFile(file, fileIndex) {\n        this.currentFinding['theFile']=file;\n        if (confirm('Are you sure you wish to delete this file?')) {\n            this.currentFinding.files.splice(fileIndex,1);\n            this.currentFinding.dirty=1;\n            this.currentFinding['theFileIndex']=fileIndex;\n            let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_REMOVE_FILE,this.currentFinding);\n            url.subscribe(data=> {\n                this.errors={};\n                this.currentFinding=data;\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n\n\n    }\n\n    deleteFinding() {\n        if (confirm('Are you sure you wish to delete this finding?')) {\n            this.columnHeaderIndex=null;\n            this.findingIndex=null;\n            let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_REMOVE_FINDING,this.currentFinding);\n            url.subscribe(data=> {\n                this.errors={};\n                this.data=data;\n                this.setCharacterizationData();\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n    };\n\n    deleteFindingRow(index) {\n        if (confirm('Are you sure you wish to delete this finding row?')) {\n            this.currentFinding.rows.splice([index],1);\n        }\n    };\n\n    deleteInstrument() {\n        if (confirm(\"Are you sure you want to delete this instrument?\")) {\n            this.techniqueInstrument.instruments.splice(this.instrumentIndex,1);\n            this.instrumentIndex=null;\n        }\n    };\n\n    deleteTechniqueInstrument() {\n        if (confirm(\"Are you sure you want to delete this technique and instrument?\")) {\n            let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_REMOVE_EXPERIMENT,this.techniqueInstrument);\n            url.subscribe(data=> {\n                this.data=data;\n                this.errors={};\n                this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n                this.setCharacterizationData();\n            },\n            error=> {\n                this.errors=error;\n\n            });\n            this.techniqueIndex=null;\n            this.instrumentIndex=null;\n        }\n    };\n\n    editColumnForm(column, index) {\n        this.columnHeaderIndex=index;\n        this.columnHeader=column;\n        this.columnHeaderTrailer=JSON.parse(JSON.stringify(this.columnHeader));\n\n        if (column.columnType) {\n            this.changeColumnType(column.columnType,false);\n            this.changeColumnName(column.columnName,false);\n        }\n        else {\n        }\n        this.columnHeader=JSON.parse(JSON.stringify(column));\n    };\n\n    editColumnOrder() {\n        this.columnOrder=JSON.parse(JSON.stringify(this.currentFinding));\n    };\n\n    editFileForm(file,index) {\n        this.currentFile=JSON.parse(JSON.stringify(file));\n        this.fileIndex=index;\n    };\n\n    editFile(file,index) {\n        this.fileIndex=index;\n        this.currentFile=file;\n        this.currentFinding['dirty']=true;\n        this.currentFinding['theFileIndex']=index;\n    }\n\n    editFinding(index,finding) {\n        this.columnOrder=null;\n        this.currentFinding=JSON.parse(JSON.stringify(finding));\n        this.findingIndex=index;\n        setTimeout(function() {\n            document.getElementById('findingsEditForm').scrollIntoView();\n        },100);\n    };\n\n    editInstrument(instrument, index) {\n        this.instrumentIndex=index;\n        this.instrument=instrument;\n        this.instrumentTrailer=JSON.parse(JSON.stringify(this.instrument));\n    };\n\n    editTechniqueInstrument(index, technique) {\n        this.instrumentIndex=null;\n        this.techniqueIndex=index;\n        this.techniqueInstrument = JSON.parse(JSON.stringify(technique));\n        this.techniqueInstrument.dirty=1;\n        this.getInstrumentTypes(this.techniqueInstrument.techniqueType)\n    };\n\n    formatDate(date) {\n        let tempDate = new Date(date);\n        let month = (tempDate.getMonth()+1).toString();\n        if (parseInt(month)<10) {\n            month = '0'+month;\n        }\n        let day = tempDate.getDate().toString();\n        if (parseInt(day)<10) {\n            day = '0'+day;\n        }\n        let newDate = tempDate.getFullYear().toString()+'-'+month+'-'+day\n        return newDate\n    };\n\n    getInstrumentTypes(value) {\n        let url = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_GET_INSTRUMENT_TYPES_BY_TECHNIQUE,'techniqueType='+value);\n        url.subscribe(data=> {\n            this.errors={};\n            this.setupData['instrumentTypeLookup']=data;\n        },\n        error=> {\n            this.errors=error;\n        });\n    };\n\n    importCSV(event) {\n        let csvFile = event.target.files.item(0);\n        let size= csvFile.size;\n        this.dataReaderReadFile(0,size,csvFile);\n\n    }\n\n    dataReaderReadFile = function (opt_startByte, opt_stopByte,csvFile) {\n        let reader = new FileReader();\n        var that=this;\n        reader.onloadend = function (evt) {\n            that.csvDataObj = that.parseCsv(evt.target.result);\n\n            if (that.csvDataObj === null) {\n                alert('CSV import parse error: ' + that.csvImportError);\n                return;\n            }\n\n            that.csvDataColCount = 0;\n            that.csvDataRowCount = that.csvDataObj.length;\n            for (var y = 0; y < that.csvDataRowCount; y++) {\n                if (that.csvDataObj[y].length > that.csvDataColCount) {\n                    that.csvDataColCount = that.csvDataObj[y].length;\n                }\n            }\n            that.currentFinding.numberOfColumns = that.csvDataColCount;\n            that.currentFinding.numberOfRows = that.csvDataRowCount;\n\n            that.updateRowsColsForFinding();\n        };\n\n        reader.readAsBinaryString(csvFile.slice(0, opt_stopByte));\n\n    };\n\n    createArray(len) {\n        let arr = new Array(len || 0),\n            i = len;\n        if (arguments.length > 1) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            while (i--) arr[len - 1 - i] = this.createArray.apply(this, args);\n        }\n        return arr;\n    }\n\n    validateFindingCellInput(colType, cellData) {\n        if ((colType === null) || (colType === undefined)) {\n            return false;\n        }\n        return (\n            (colType === 'datum') &&\n            (cellData !== null) && (isNaN(cellData.replace(/(d|f)$/, '')))\n        );\n    }\n\n    updateRowsColsForFinding = function () {\n        this.badFindingCell = this.createArray(this.csvDataColCount, this.csvDataRowCount);\n        let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZTAION_UPDATE_FINDING,this.currentFinding);\n\n        url.subscribe(data=> {\n                data = data;\n                if (data.rows[this.csvDataRowCount - 1] === undefined) {\n                    this.csvDataRowCount = data.numberOfRows;\n                }\n\n                for (var y = 0; y < this.csvDataRowCount; y++) {\n\n                    for (var x = 0; x < this.csvDataColCount; x++) {\n                        // If the user has reduced the number of columns, make sure we don't try to update columns that no longer exist.\n                        if ((data.rows[y].cells[x] !== null) && (data.rows[y].cells[x] !== undefined)) {\n                            data.rows[y].cells[x].value = Object(this.csvDataObj[y][x]);\n                            if (x < this.currentFinding.length) {\n                                data.rows[y].cells[x].datumOrCondition = this.currentFinding.columnHeaders[x].columnType;\n                            }\n                            // When the column type is set or reset, check all cell contents for valid entries for each column, one row at a time.\n                            if (x < this.currentFinding.columnHeaders.length) {\n                                this.badFindingCell[x][y] = this.validateFindingCellInput(this.currentFinding.columnHeaders[x].columnType,\n                                    data.rows[y].cells[x].value);\n\n                            }\n                            // If there are fewer column types/header set than there are columns.\n                            // Data put in a cell with a column that does not have it's type set is never considered invalid.\n                            else {\n                                this.badFindingCell[x][y] = false;\n                            }\n                        }\n                    }\n                }\n\n                // If there are already column headers set, preserve them.\n                for (var colX = 0; colX < this.csvDataColCount; colX++) {\n                    if ((this.currentFinding.columnHeaders[colX] !== null) && (this.currentFinding.columnHeaders[colX] !== undefined)) {\n                        data.columnHeaders[colX] = this.currentFinding.columnHeaders[colX];\n                    }\n                 }\n                this.currentFinding = data;\n                console.log('complete')\n\n        })\n    };\n\n    rendering() {\n        console.log('test')\n    }\n\n    validateCsv = function (csv) {\n        // Normalize line feeds\n        let temp = (csv.replace(/\\r\\n/g, '\\r').replace(/\\n\\r/g, '\\r').replace(/\\n/g, '\\r')).split(/\\r/);\n\n        // Do we have too many rows?\n        if (temp.length > this.csvMaxNumberOfLines) {\n            this.csvImportError = 'Too many Lines (' + temp.length + ')';\n            return false;\n        }\n\n        // Are any cells too long?\n        // Determine length of longest cell entry\n        let biggestLine = 0;\n        for (let f0 = 0; f0 < temp.length; f0++) {\n            if (biggestLine < temp[f0].length) {\n                biggestLine = temp[f0].length;\n            }\n        }\n\n        // If at least one entry is too long, set error and return false\n        if (biggestLine > this.csvMaxLenOfEntry) {\n            this.csvImportError = 'line(s) too long (' + biggestLine + ')';\n            return false;\n        }\n\n\n        // Send each line to csv validation function.\n        // Remove anything that is not a quote or a comma. That is all we need for validating csv.\n        let regex = new RegExp('[^\",]', 'g');\n        for (let f = 0; f < temp.length; f++) {\n            let csvString = temp[f].replace(regex, '');\n            let isValid = this.validateCsvLine(csvString);\n            if (!isValid) {\n                return false;\n            }\n        }\n\n        // Return true if: not too many rows, no row is too long, and csv format is correct.\n        return true;\n    };\n    validateCsvLine(csvLine) {\n        let inQ = false;\n        let badData = false;\n        for (let f = 0; f < csvLine.length; f++) {\n            if (!inQ) {\n\n                // A starting quote plus a nested quote (3 quotes)\n                if ((csvLine.length <= (f + 2)) && csvLine[f] === '\"' && csvLine[f + 1] === '\"' && csvLine[f + 2] === '\"') {\n                    inQ = true;\n                }\n\n                // Two quotes, BUT not in a quote, and ends.\n                else if ((csvLine.length <= (f + 1)) && csvLine[f] === '\"' && csvLine[f + 1] === '\"') {\n                    badData = false;\n                    break;\n                } else if (csvLine[f] === '\"') {\n                    inQ = true;\n                }\n            } else {\n                // An ending quote\n                if (csvLine[f] === '\"' && csvLine[f + 1] !== '\"') {\n                    inQ = false;\n                } else if (csvLine[f] === '\"' && csvLine[f + 1] === '\"') {\n                    f++;\n                }\n            }\n        }\n\n        // Are we still in a quote at the end\n        if (inQ) {\n            badData = true;\n            this.csvImportError = 'csv validation error';\n        }\n        return (!badData);\n    }\n\n    qFix(input) {\n        var output = '';\n        for (var i = 0; i < input.length; ++i) {\n\n            if (input.charCodeAt(i) === 226) {\n                // Unicode double quote\n                if (\n                    (input.charCodeAt(i + 1) === 128 && input.charCodeAt(i + 2) === 157) ||\n                    (input.charCodeAt(i + 1) === 128 && input.charCodeAt(i + 2) === 156)\n                ) {\n                    i += 2;\n                    output += '\"';\n                }\n                // Unicode single quote\n                else if (input.charCodeAt(i + 1) === 128 && input.charCodeAt(i + 2) === 153) {\n                    i += 2;\n                    output += '\\'';\n                }\n\n            } else if (input.charCodeAt(i) === 194 || input.charCodeAt(i) === 195) {\n                var hexDigit0 = input.charCodeAt(i).toString(16);\n                if (hexDigit0.length % 2) {\n                    hexDigit0 = '0' + hexDigit0;\n                }\n                var hexDigit1 = input.charCodeAt(i + 1).toString(16);\n                if (hexDigit1.length % 2) {\n                    hexDigit1 = '0' + hexDigit1;\n                }\n                var hex = '%' + hexDigit0 + '%' + hexDigit1;\n                let decoded = this.decode_utf8(hex);\n                if (decoded === 'ERROR-ERROR') {\n                    output = '';\n                    return output;\n                }\n                output += decoded;\n                i++;\n            } else {\n                output += input[i];\n            }\n        }\n        return (output);\n    };\n\n\n    cleanCsvValue(val) {\n        if (val.substr(0, 1) === '\"') {\n            val = val.substr(1);\n        }\n        if (val.substr(val.length - 1) === ',') {\n            val = val.substr(0, val.length - 1);\n        }\n        if (val.substr(val.length - 1) === '\"') {\n            val = val.substr(0, val.length - 1);\n        }\n\n        val = val.replace(/\"\"/g, '\"');\n        return val;\n    };\n\n\n    /**\n     *\n     * @param s\n     * @returns {string}\n     */\n    decode_utf8(s) {\n        var returnData = '';\n        try {\n            returnData = decodeURIComponent(s);\n        } catch (e) {\n            returnData = 'ERROR-ERROR'; // TODO  Make this a const\n        }\n        return returnData;\n    }\n\n    parseCsv(data) {\n        if (!this.validateCsv(data)) {\n            return null;\n        }\n        // Split on the CR or LF\n        let dataLines = this.qFix(data.replace(/\\r\\n/g, '\\r').replace(/\\n\\r/g, '\\r').replace(/\\n/g, '\\r')).split(/\\r/);\n        let startCell = 1; //true\n        let currentCell = '';\n        let currentCellType = 0; // 0=unknown  1=comma no double quote  2=comma with double quote\n        let i = 0;\n        let csvData;\n        let csvDataObj = [];\n\n        for (let dataLine = 0; dataLine < dataLines.length && this.runaway > 0; dataLine++) {\n            csvData = dataLines[dataLine];\n\n            if (csvData.length < 1) {\n                continue;\n            }\n\n            let lineOfValues = [];\n            i = 0;\n            while (i < csvData.length && this.runaway > 0) {\n                let trailingCommas = [];\n                trailingCommas = csvData.match(/(,+)$/g);\n                if (trailingCommas !== null) {\n                    let replacementStr = '';\n                    for (let f = 0; f < trailingCommas[0].length; f++) {\n                        replacementStr += ',\"\"';\n                    }\n                    let re = new RegExp(trailingCommas[0] + '$');\n                    csvData = csvData.replace(re, replacementStr);\n                }\n                // Determine cell type\n                if (csvData.substr(i, 1) === '\"') {\n                    currentCellType = 2;\n                } else {\n                    currentCellType = 1;\n                }\n\n                if (currentCellType === 1) {\n                    // Just grab to the first comma\n                    currentCell = csvData.substr(i).match(/[^,]*,/);\n                    if (currentCell !== null) {\n                        currentCell = currentCell[0];\n                        lineOfValues.push(this.cleanCsvValue(currentCell));\n                    }\n                    // No comma, we are at the end.\n                    else {\n                        currentCell = csvData.substr(i);\n                        lineOfValues.push(this.cleanCsvValue(currentCell));\n                    }\n                    i += currentCell.length;\n                } else if (currentCellType === 2) {\n                    csvData = csvData.substr(i);\n                    i = 0;\n                    startCell = 1;\n                    let charStatus = 0; // Nothing yet\n                    let currentChar = '';\n                    let currentNextChar = '';\n                    let i1 = 0;\n\n                    while (i1 < csvData.length) {\n                        currentChar = csvData.substr(i1, 1);\n                        if (i1 + 1 < csvData.length) {\n                            currentNextChar = csvData.substr(i1 + 1, 1);\n                        } else {\n                            currentNextChar = '';\n                        }\n                        i1++;\n\n                        // The first char\n                        if (charStatus === 0 && startCell === 1) {\n                            // Is it a quote (it should be)\n                            if (currentChar === '\"') {\n                                charStatus = 1; // We have seen the first quote\n                            }\n                            startCell = 0; // No longer looking at the first char\n                            currentChar = csvData.substr(i1, 1);\n                            if (i1 + 1 < csvData.length) {\n                                currentNextChar = csvData.substr(i1 + 1, 1);\n                            } else {\n                                currentNextChar = '';\n                            }\n                        } // END if (charStatus === 0 && startCell === 1)\n\n                        // Not the first char\n                        else if (startCell !== 1) {\n                            // We are past the first quote\n                            if (charStatus === 1) { // We have seen the first quote\n                                // Check for two double quotes, this is a quote within a quoted cell - ignore it and go past it\n                                if (currentChar === '\"' && currentNextChar === '\"') {\n                                    i1 += 1;\n                                }\n                                // A quote here means the end\n                                else if (currentChar === '\"') {\n                                    // Find the next comma or the end of the line.\n                                    currentCell = csvData.substr(0, i1);\n                                    csvData = csvData.substr(currentCell.length + 1);\n                                    i1 = 0;\n                                    startCell = 1; //true\n                                    charStatus = 0;\n                                    lineOfValues.push(this.cleanCsvValue(currentCell));\n                                }\n                            }\n\n                        } // END else if( startCell !== 1)\n                        this.runaway--;\n                    }\n                }\n                this.runaway--;\n            } // End while loop\n\n            csvDataObj.push(lineOfValues);\n            this.runaway--;\n\n        } // End for loop\n\n        // Check here for too may columns\n        if (this.getMaxColumnCount(csvDataObj) > this.csvColumnMaxCount) {\n            this.csvImportError = 'Too many columns (' + this.getMaxColumnCount(csvDataObj) + ')';\n            return null;\n        }\n        let columnCount = this.getMaxColumnCount(csvDataObj);\n        for (let f = 0; f < csvDataObj.length; f++) {\n            while (csvDataObj[f].length < columnCount) {\n                csvDataObj[f].push('');\n            }\n        }\n        return csvDataObj;\n    }\n\n    getMaxColumnCount(csvData) {\n        var columnCount = 0;\n        for (var row = 0; row < csvData.length; row++) {\n            if (columnCount < csvData[row].length) {\n                columnCount = csvData[row].length;\n            }\n        }\n        return columnCount;\n    }\n\n    resetCharacterization() {\n        this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n        this.data['assayTypesByCharNameLookup'] = [];\n        this.changeType(this.data.type)\n\n    };\n\n    resetColumnForm() {\n        this.columnHeader=JSON.parse(JSON.stringify(this.columnHeaderTrailer));\n    }\n\n    saveColumnForm() {\n        if (this.columnHeader['constantValue']!='') {\n            this.currentFinding['rows'].forEach(row=> {\n                row['cells'][this.columnHeaderIndex]['value']=this.columnHeader['constantValue'];\n            });\n        }\n        this.currentFinding.columnHeaders[this.columnHeaderIndex]=this.columnHeader;\n        this.columnHeaderIndex=null;\n        this.fileIndex=null;\n    };\n\n    saveColumnOrder() {\n        this.currentFinding=JSON.parse(JSON.stringify(this.columnOrder));\n        let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SET_COLUMN_ORDER,this.columnOrder);\n        url.subscribe(data=> {\n            this.errors={};\n            this.currentFinding=data;\n        },\n        error=>{\n            this.errors=error;\n        })\n        this.columnOrder=null;\n\n    }\n\n    saveFile() {\n        if (!this.currentFile['uriExternal']) {\n            if (this.theFile) {\n                this.theFile.append('uriExternal',this.currentFile['uriExternal']);\n                this.theFile.append('externalUrl',this.currentFile['externalUrl']);\n                this.theFile.append('type',this.currentFile['type']);\n                this.theFile.append('title',this.currentFile['title']);\n                this.theFile.append('keywordsStr',this.currentFile['keywordsStr']);\n                this.theFile.append('description',this.currentFile['description']);\n                let uploadUrl = this.httpClient.post(Consts.QUERY_UPLOAD_FILE,this.theFile);\n                uploadUrl.subscribe(data=> {\n                    if (this.fileIndex==-1) {\n                        this.currentFinding.files.push(data);\n                    }\n                    else {\n                        this.currentFinding.files[this.fileIndex]=data;\n                    }\n                    this.currentFinding['dirty']=1;\n                    this.currentFinding.theFile=this.currentFile;\n                    this.currentFinding['theFile']['uri']=data['fileName']\n                    let saveUrl = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SAVE_FILE,this.currentFinding);\n                    saveUrl.subscribe(data=> {\n                        this.errors={};\n                        this.currentFinding=data;\n                    },\n                    error=> {\n                        this.errors=error;\n                    })\n                },\n                error=> {\n                    this.errors=error;\n                })\n            }\n            else {\n                this.currentFinding['dirty']=1;\n                this.currentFinding.theFile=this.currentFile;\n                this.currentFinding['theFile']['uri']=this.currentFile['uri']\n                let saveUrl = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SAVE_FILE,this.currentFinding);\n                saveUrl.subscribe(data=> {\n                    this.errors={};\n                    this.currentFinding=data;\n                },\n                error=> {\n                    this.errors=error;\n                })\n            }\n\n\n            if (this.fileIndex==-1) {\n                this.currentFinding.files\n            }\n            else {\n            }\n        }\n        else {\n            this.currentFinding['theFile']=this.currentFile;\n            let saveUrl = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SAVE_FILE,this.currentFinding);\n            saveUrl.subscribe(data=> {\n                this.errors={};\n                this.currentFinding=data;\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n        this.fileIndex=null;\n    }\n\n    saveFinding() {\n        this.currentFinding.dirty=1;\n        if (this.findingIndex==-1) {\n            this.data.finding.push(this.currentFinding);\n        }\n        else {\n            this.data.finding[this.findingIndex]=JSON.parse(JSON.stringify(this.currentFinding));\n        }\n        let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SAVE_FINDING,this.data);\n        url.subscribe(data=> {\n            this.errors={};\n\n            this.data=data;\n            this.setCharacterizationData();\n\n        },\n        error=> {\n            this.errors=error;\n        })\n        this.columnHeaderIndex=null;\n        this.findingIndex=null;\n        this.fileIndex=null;\n    };\n\n    saveInstrument() {\n        if (this.instrumentIndex==-1) {\n            this.techniqueInstrument.instruments.push(this.instrument);\n        }\n        this.instrumentIndex=null;\n    };\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'],newItem['value'])\n            this.setValue(newItem['field'],newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'],newItem['value']);\n        }\n    };\n\n    saveTechniqueInstrument() {\n        if (this.techniqueIndex==-1) {\n            this.data.techniqueInstruments.experiments.push(this.techniqueInstrument);\n            let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SAVE_EXPERIMENT,this.data);\n            // push technique, call save and overwrite this.data //\n        }\n\n        this.data.techniqueInstruments.experiments[this.techniqueIndex]=this.techniqueInstrument;\n        let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SAVE_EXPERIMENT,this.data);\n        url.subscribe(\n                data=> {\n                    this.errors={};\n\n                    this.data=data;\n                    this.setCharacterizationData();\n                },\n                error=> {\n                    this.errors=error;\n\n                }\n            )\n\n        this.techniqueIndex=null;\n        this.instrumentIndex=null;\n    };\n\n    setCharacterizationData() {\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        this.data.characterizationDate = this.formatDate(this.data.characterizationDate)\n        this.setupData = [];\n        let url = this.apiService.doGet(Consts.QUERY_CHARACTERIZATION_GET_DATUM_NUMBER_MODIFIER,'columnName=Number%20Modifier');\n        url.subscribe(data=> {\n            this.errors={};\n\n            this.setupData.datumNumberModifier=data;\n            this.setupData.datumNumberModifier.splice(this.setupData.datumNumberModifier.indexOf('other'),1)\n        },\n        error=> {\n            this.errors=error;\n        })\n        this.setupData.instrumentTypeLookup = [];\n    };\n\n    setupDefaultDataSet() {\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n    };\n\n    setupTechniqueInstrument() {\n        this.techniqueInstrument = {\n            \"techniqueType\":\"\",\n            \"dirty\":1,\n            \"instruments\":[]\n        }\n    };\n\n    // splits keywords for experiments and configurations //\n    splitKeywords(keywords) {\n        if (keywords) {\n            return keywords.split('\\n')\n        }\n        else {\n            return ''\n        }\n    }\n\n    submitCharacterization() {\n        this.data.characterizationDate = new Date(this.data.characterizationDate+' 00:00');\n        let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZATION_SAVE,this.data);\n        url.subscribe(\n            data=> {\n                this.errors={};\n                this.router.navigate( ['home/samples/characterization', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n            },\n            error=> {\n                this.errors=error;\n            }\n        )\n    };\n\n    updateRowsColumns() {\n        let url = this.apiService.doPost(Consts.QUERY_CHARACTERIZTAION_UPDATE_FINDING,this.currentFinding)\n        url.subscribe(data=> {\n            this.errors={};\n            this.currentFinding=data;\n        },\n        error=> {\n            this.errors=error;\n        })\n    };\n\n    uploadFile(event) {\n        this.theFile = new FormData();\n        const tFile = event.target.files.item(0);\n        console.log(typeof(tFile))\n        console.log(tFile)\n        this.theFile.append('myFile', tFile, tFile.name);\n        this.fileName=tFile.name;\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\"\n>\n</canano-main-display-heading>\n<div class=\"mainSection\" *ngIf=\"data\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <div class=\"error\" *ngIf=\"message\">\n        {{message}}\n    </div>\n    <form action=\"\" method=\"get\" name=\"characterizationForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr *ngIf=\"!charId\">\n                    <td class=\"label\">\n                        <label for=\"charType\">\n                            Characterization Type*\n                        </label>\n                    </td>\n                    <td>\n                        <select (ngModelChange)=\"changeType($event);addOtherValue('type',data.type)\" name=\"charType\" id=\"charType\" [(ngModel)]=\"data.type\">\n                            <option value=\"\" [selected]=\"data.type===''\">--Select--</option>\n                                <option *ngFor=\"let type of data['charTypesLookup']\" [selected]=\"data.type===type\" value=\"{{type}}\">\n                                    {{type}}\n                                </option>\n                                <option [hidden]=\"data.type!='other'\" value=\"\" [selected]=\"data.type=='other'\" value=\"other\">[other]</option>\n                            </select>\n                        <div *ngIf=\"data.type ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Characterization Type'\" [value]=\"currentDropdownValues['type']\" [field]=\"'data.type'\" [array]=\"'data.charTypesLookup'\">\n\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"charNamePrompt\">\n                            Characterization Name*\n                        </label>\n                    </td>\n                    <td>\n                        <select (ngModelChange)=\"changeName($event); addOtherValue('name',data.name)\" name=\"charNamePrompt\" id=\"charNamePrompt\" [(ngModel)]=\"data.name\">\n                            <option value=\"\" [selected]=\"data.name===''\">--Select--</option>\n                            <option *ngFor=\"let type of data['charNamesForCurrentType']\" [selected]=\"data.name===type\" value=\"{{type}}\">\n                                {{type}}\n                            </option>\n                        </select>\n                        <div *ngIf=\"data.name ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Characterization Name'\" [value]=\"currentDropdownValues['name']\" [field]=\"'data.name'\" [array]=\"'data.charNamesForCurrentType'\">\n\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"assayType\">\n                            Assay Type\n                        </label>\n                    </td>\n                    <td>\n                        <select (ngModelChange)=\"addOtherValue('assayType',data.assayType)\" name=\"assayType\" id=\"assayType\" [(ngModel)]=\"data.assayType\">\n                            <option value=\"\" [selected]=\"data.assayType===''\">--Select--</option>\n                            <option *ngFor=\"let type of data['assayTypesByCharNameLookup']\" [selected]=\"data.assayType===type\" value=\"{{type}}\">\n                                {{type}}\n                            </option>\n                        </select>\n                        <div *ngIf=\"data.assayType ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Assay Type'\" [value]=\"currentDropdownValues['assayType']\" [field]=\"'data.assayType'\" [array]=\"'data.assayTypesByCharNameLookup'\">\n\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"protocolId\">\n                            Protocol Name - Version\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"protocolId\" id=\"protocolId\" [(ngModel)]=\"data.protocolId\">\n                            <option value=\"0\" [selected]=\"data.protocolId==0\">--Select--</option>\n                            <option *ngFor=\"let type of data['protocolLookup']\" [selected]=\"data.protocolId===type\" [ngValue]=\"type.domainId\">\n                                {{type.displayName}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"characterizationSourceId\">\n                            Characterization Source\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"characterizationSourceId\" id=\"characterizationSourceId\" [(ngModel)]=\"data.characterizationSourceId\">\n                            <option value=\"\" [selected]=\"data.characterizationSourceId==0\" [ngValue]=\"0\">--Select--</option>\n                            <option *ngFor=\"let type of data['charSourceLookup']\" [selected]=\"data.characterizationSourceId===type.id\" [ngValue]=\"type.id\">\n                                {{type.displayName}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"characterizationDate\">\n                            Characterization Date\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"date\" name=\"characterizationDate\" id=\"characterizationDate\" [(ngModel)]=\"data.characterizationDate\">\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <ng-container *ngIf=\"propertiesLoaded\">\n            <ng-container *ngIf=\"data.name=='physical state'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr colspan=\"2\"><td class=\"label\">Phsyical Properties</td></tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.type\">\n                                    Type\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('data.property.type',data.property.type)\" name=\"property.type\" id=\"property.type\" [(ngModel)]=\"data.property.type\">\n                                    <option value=\"\" [selected]=\"data.property.type===''\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['typeOptions']\" [selected]=\"data.property.type===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property.type ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Physical Type'\" [value]=\"currentDropdownValues['data.property.type']\" [field]=\"'data.property.type'\" [array]=\"'data.property.typeOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n            <ng-container *ngIf=\"data.name=='shape'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr colspan=\"4\"><td class=\"label\">Shape Properties</td></tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.type\">\n                                    Type\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('data.property.type',data.property.type)\" name=\"property.type\" id=\"property.type\" [(ngModel)]=\"data.property.type\">\n                                    <option value=\"\" [selected]=\"!data.property.type\" [ngValue]=\"null\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['shapeTypeOptions']\" [selected]=\"data.property.type===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property['type'] ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Shape'\" [value]=\"currentDropdownValues['data.property.type']\" [field]=\"'data.property.type'\" [array]=\"'data.property.shapeTypeOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                            <td class=\"label\">\n                                <label for=\"property.aspectRatio\">\n                                    Aspect Ratio\n                                </label>\n                            </td>\n                            <td>\n                                <input type=\"text\" name=\"property.aspectRatio\" id=\"property.aspectRatio\" [(ngModel)]=\"data.property.aspectRatio\">\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.minDimension\">\n                                    Minimum Dimension\n                                </label>\n                            </td>\n                            <td>\n                                <input type=\"number\" name=\"property.minDimension\" id=\"property.minDimension\" [(ngModel)]=\"data.property.minDimension\">\n                                <select (ngModelChange)=\"addOtherValue('data.property.minDimensionUnit',data.property.minDimensionUnit)\" name=\"property.minDimensionUnit\" id=\"property.minDimensionUnit\" [(ngModel)]=\"data.property.minDimensionUnit\">\n                                    <option value=\"\" [selected]=\"!data.property['minDimensionUnit']\" [ngValue]=\"null\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['unitOptions']\" [selected]=\"data.property.minDimensionUnit===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property['minDimensionUnit'] ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Unit Option'\" [value]=\"currentDropdownValues['data.property.minDimensionUnit']\" [field]=\"'data.property.minDimensionUnit'\" [array]=\"'data.property.unitOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                            <td class=\"label\">\n                                <label for=\"property.maxDimension\">\n                                    Maximum Dimension\n                                </label>\n                            </td>\n                            <td>\n                                <input type=\"number\" name=\"property.maxDimension\" id=\"property.maxDimension\" [(ngModel)]=\"data.property.maxDimension\">\n                                <select (ngModelChange)=\"addOtherValue('data.property.maxDimensionUnit',data.property.maxDimensionUnit)\" name=\"property.maxDimensionUnit\" id=\"property.maxDimensionUnit\" [(ngModel)]=\"data.property.maxDimensionUnit\">\n                                    <option value=\"\" [selected]=\"!data.property['maxDimensionUnit']\" [ngValue]=\"null\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['unitOptions']\" [selected]=\"data.property.maxDimensionUnit===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property['maxDimensionUnit'] ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Unit Option'\" [value]=\"currentDropdownValues['data.property.maxDimensionUnit']\" [field]=\"'data.property.maxDimensionUnit'\" [array]=\"'data.property.unitOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n            <ng-container *ngIf=\"data.name=='solubility'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr colspan=\"4\"><td class=\"label\">Solubility Properties</td></tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.solvent\">\n                                    Solvent\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('data.property.solvent',data.property.solvent)\" name=\"property.solvent\" id=\"property.solvent\" [(ngModel)]=\"data.property.solvent\">\n                                    <option [selected]=\"!data.property['solvent']\" [ngValue]=\"null\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['solventOptions']\" [selected]=\"data.property.solvent===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property['solvent'] ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Solvent'\" [value]=\"currentDropdownValues['data.property.solvent']\" [field]=\"'data.property.solvent'\" [array]=\"'data.property.solventOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                            <td class=\"label\">\n                                <label for=\"property.isSoluble\">\n                                    Is Soluble\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('data.property.isSoluble',data.property.isSoluble)\" name=\"property.isSoluble\" id=\"property.isSoluble\" [(ngModel)]=\"data.property.isSoluble\">\n                                    <option [selected]=\"!data.property['isSoluble']\" [ngValue]=\"null\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['isSolubleOptions']\" [selected]=\"data.property.isSoluble===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property['isSoluble'] ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Is Soluble'\" [value]=\"currentDropdownValues['data.property.isSoluble']\" [field]=\"'data.property.isSoluble'\" [array]=\"'data.property.isSolubleOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.criticalConcentration\">\n                                    Critical Concentration\n                                </label>\n                            </td>\n                            <td>\n                                <input type=\"number\" name=\"property.criticalConcentration\" id=\"property.criticalConcentration\" [(ngModel)]=\"data.property.criticalConcentration\">\n\n                                <select (ngModelChange)=\"addOtherValue('data.property.concentrationUnit',data.property.concentrationUnit)\" name=\"property.concentrationUnit\" id=\"property.concentrationUnit\" [(ngModel)]=\"data.property.concentrationUnit\">\n                                    <option [selected]=\"!data.property['concentrationUnit']\" [ngValue]=\"null\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['concentrationUnitOptions']\" [selected]=\"data.property.concentrationUnit===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property['concentrationUnit'] ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Concentration Unit Option'\" [value]=\"currentDropdownValues['data.property.concentrationUnit']\" [field]=\"'data.property.concentrationUnit'\" [array]=\"'data.property.concentrationUnitOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n            <ng-container *ngIf=\"data.name=='surface'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr>\n                            <td colspan=\"2\" class=\"label\">Surcace Properties</td>\n                        </tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.isHydrophobic\">\n                                    Is Hydrophobic\n                                </label>\n                            </td>\n                            <td>\n                                <select name=\"property.isHydrophobic\" id=\"property.isHydrophobic\" [(ngModel)]=\"data.property.isHydrophobic\">\n                                    <option value=\"\" [selected]=\"!data.property.isHydrophobic\" [ngValue]=\"null\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['isHydrophobicOptions']\" [selected]=\"data.property.isHydrophobic===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n            <ng-container *ngIf=\"data.name=='cytotoxicity'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr>\n                            <td class=\"label\" colspan=\"2\">Cytotoxicity Properties</td>\n                        </tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.cellLine\">\n                                    Cell Line\n                                </label>\n                            </td>\n                            <td>\n                                <textarea rows=\"3\" cols=\"120\" name=\"property.cellLine\" id=\"property.cellLine\" [(ngModel)]=\"data.property.cellLine\">\n                                    {{data.property.cellLine}}\n                                </textarea>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n            <ng-container *ngIf=\"data.name=='enzyme induction'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr>\n                            <td colspan=\"2\" class=\"label\">Enzyme Properties</td>\n                        </tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.enzymeName\">\n                                    Enzyme Name\n                                </label>\n                            </td>\n                            <td>\n                                <select (ngModelChange)=\"addOtherValue('data.property.enzymeName',data.property.enzymeName)\" name=\"property.enzymeName\" id=\"property.enzymeName\" [(ngModel)]=\"data.property.enzymeName\">\n                                    <option [selected]=\"data.property['enzymeName']===''\" [ngValue]=\"''\">--Select--</option>\n                                    <option *ngFor=\"let type of data.property['enzymeNameOptions']\" [selected]=\"data.property.enzymeName===type\" value=\"{{type}}\">\n                                        {{type}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"data.property['enzymeName'] ==='other'\">\n                                    <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Enzyme Name'\" [value]=\"currentDropdownValues['data.property.enzymeName']\" [field]=\"'data.property.enzymeName'\" [array]=\"'data.property.enzymeNameOptions'\">\n\n                                    </canano-other-dropdown>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n            <ng-container *ngIf=\"data.name=='targeting'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr>\n                            <td class=\"label\" colspan=\"2\">Targeting Properties</td>\n                        </tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.cellLine\">\n                                    Cell Line\n                                </label>\n                            </td>\n                            <td>\n                                <textarea rows=\"3\" cols=\"120\" name=\"property.cellLine\" id=\"property.cellLine\" [(ngModel)]=\"data.property.cellLine\">\n                                    {{data.property.cellLine}}\n                                </textarea>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n            <ng-container *ngIf=\"data.name=='transfection'\">\n                <div class=\"mainBorder\">\n                    <table class=\"dataMain\">\n                        <tr>\n                            <td class=\"label\" colspan=\"2\">Transfection Properties</td>\n                        </tr>\n                        <tr>\n                            <td class=\"label\">\n                                <label for=\"property.cellLine\">\n                                    Cell Line\n                                </label>\n                            </td>\n                            <td>\n                                <textarea rows=\"3\" cols=\"120\" name=\"property.cellLine\" id=\"property.cellLine\" [(ngModel)]=\"data.property.cellLine\">\n                                    {{data.property.cellLine}}\n                                </textarea>\n                            </td>\n                        </tr>\n                    </table>\n                </div><br />\n            </ng-container>\n        </ng-container>\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"designMethodsDescription\">\n                            Design and Methods Description\n                        </label>\n                    </td>\n                    <td>\n                        <textarea [(ngModel)]=\"data.designMethodsDescription\" name=\"designMethodsDescription\" id=\"designMethodsDescription\" rows=\"3\" cols=\"120\">\n\n                        </textarea>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"techniqueInstrument\">\n                            Technique and Instrument\n                        </label>\n                    </td>\n                    <td>\n                        <button (click)=\"addTechniqueInstrument()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.techniqueInstruments.experiments.length\">\n                    <td>\n                        &nbsp;\n                    </td>\n                    <td>\n                        <table class=\"dataTable\">\n                            <tr>\n                                <th>\n                                    Technique\n                                </th>\n                                <th>\n                                    Instruments\n                                </th>\n                                <th>\n                                    Description\n                                </th>\n                                <th>\n                                    &nbsp;\n                                </th>\n                            </tr>\n                            <tr *ngFor=\"let technique of data.techniqueInstruments.experiments;let tIndex= index;let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                <td>{{technique.techniqueType}}</td>\n                                <td>\n                                    <ul>\n                                        <li *ngFor=\"let instrument of technique.instruments\">\n                                            {{instrument.type}} ({{instrument.manufacturer}}, {{instrument.modelName}})\n                                        </li>\n                                    </ul>\n                                </td>\n                                <td>\n                                    {{technique.description}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editTechniqueInstrument(tIndex,technique)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"techniqueIndex!=null\">\n                    <td>&nbsp;</td>\n                    <td>\n                        <div class=\"mainBorder\">\n                            <table>\n                                <tr>\n                                    <td colspan=\"4\">\n                                        <table class=\"dataMain gray\">\n                                            <tr>\n                                                <td class=\"label\">\n                                                    <label for=\"techniqueInstrument.techniqueType\">\n                                                        Technique*\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <select (ngModelChange)=\"changeInstrumentType($event);addOtherValue('techniqueInstrument.techniqueType',techniqueInstrument.techniqueType)\" name=\"techniqueInstrument.techniqueType\" id=\"techniqueInstrument.techniqueType\" [(ngModel)]=\"techniqueInstrument.techniqueType\">\n                                                        <option value=\"\" [selected]=\"techniqueInstrument.techniqueType===''\">--Select--</option>\n                                                        <option *ngFor=\"let type of data.techniqueInstruments['techniqueTypeLookup']\" [selected]=\"techniqueInstrument.techniqueType===type\" value=\"{{type}}\">\n                                                            {{type}}\n                                                        </option>\n                                                    </select>\n                                                    <div *ngIf=\"techniqueInstrument.techniqueType ==='other'\">\n                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Technique'\" [value]=\"currentDropdownValues['techniqueInstrument.techniqueType']\" [field]=\"'techniqueInstrument.techniqueType'\" [array]=\"'data.techniqueInstruments.techniqueTypeLookup'\">\n\n                                                        </canano-other-dropdown>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"label\">\n                                                    <label for=\"techniqueInstrument.abbreviation\">\n                                                        Abbreviation\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <input type=\"text\" name=\"techniqueInstrument.abbreviation\" id=\"techniqueInstrument.abbreviation\" [(ngModel)]=\"techniqueInstrument.abbreviation\">\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"label\">\n                                                    Instrument\n                                                </td>\n                                                <td>\n                                                    <button [disabled]=\"!techniqueInstrument.techniqueType\" (click)=\"addInstrument()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"techniqueInstrument.instruments.length\">\n                                                <td></td>\n                                                <td>\n                                                    <table class=\"dataTable\">\n                                                        <tr>\n                                                            <th>\n                                                                Manufacturer\n                                                            </th>\n                                                            <th>\n                                                                Model Name\n                                                            </th>\n                                                            <th>\n                                                                Type\n                                                            </th>\n                                                            <th>\n\n                                                            </th>\n                                                        </tr>\n                                                        <tr *ngFor=\"let instrument of techniqueInstrument.instruments; let iIndex=index;let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                                            <td>\n                                                                {{instrument.manufacturer}}\n                                                            </td>\n                                                            <td>\n                                                                {{instrument.modelName}}\n                                                            </td>\n                                                            <td>\n                                                                {{instrument.type}}\n                                                            </td>\n                                                            <td>\n                                                                <button (click)=\"editInstrument(instrument,iIndex)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                            </td>\n                                                        </tr>\n                                                    </table>\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"instrumentIndex!=null\">\n                                                <td></td>\n                                                <td>\n                                                    <div class=\"mainBorder\">\n                                                        <table>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"instrument.manufacturer\">\n                                                                        Manufacturer\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('instrument.manufacturer',instrument.manufacturer)\" name=\"instrument.manufacturer\" id=\"instrument.manufacturer\" [(ngModel)]=\"instrument.manufacturer\">\n                                                                        <option [selected]=\"instrument.manufacturer===''\" [ngValue]=\"''\">--Select--</option>\n                                                                        <option *ngFor=\"let type of data.techniqueInstruments['manufacturerLookup']\" [selected]=\"instrument.manufacturer===type\" value=\"{{type}}\">\n                                                                            {{type}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"instrument.manufacturer ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Manufacturer'\" [value]=\"currentDropdownValues['instrument.manufacturer']\" [field]=\"'instrument.manufacturer'\" [array]=\"'data.techniqueInstruments.manufacturerLookup'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"instrument.modelName\">\n                                                                        Model Name\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <input type=\"text\" name=\"instrument.modelName\" id=\"instrument.modelName\" [(ngModel)]=\"instrument.modelName\">\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"instrument.type\">\n                                                                        Type\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('instrument.type',instrument.type)\" name=\"instrument.type\" id=\"instrument.type\" [(ngModel)]=\"instrument.type\">\n                                                                        <option [selected]=\"instrument.type===''\" [ngValue]=\"''\">--Select--</option>\n                                                                        <option *ngFor=\"let type of setupData['instrumentTypeLookup']\" [selected]=\"instrument.type===type\" value=\"{{type}}\">\n                                                                            {{type}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"instrument.type ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['instrument.type']\" [field]=\"'instrument.type'\" [array]=\"'setupData.instrumentTypeLookup'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div>                                                                                                                           </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>\n                                                                    <button *ngIf=\"instrumentIndex!=-1\" (click)=\"deleteInstrument()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                                </td>\n                                                                <td class=\"submit\">\n                                                                    <button (click)=\"saveInstrument()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                                    <button (click)=\"cancelInstrument()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n\n                                                                </td>\n                                                            </tr>\n                                                        </table>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"label\">\n                                                    <label for=\"techniqueInstrument.abbreviation\">\n                                                        Description\n                                                    </label>\n                                                </td>\n                                                <td>\n                                                    <textarea name=\"techniqueInstrument.description\" [(ngModel)]=\"techniqueInstrument.description\" rows=\"5\" cols=\"70\">\n                                                        {{techniqueInstrument.description}}\n                                                    </textarea>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <button *ngIf=\"techniqueIndex!=-1\" (click)=\"deleteTechniqueInstrument()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                </td>\n                                                <td class=\"submit\">\n                                                    <button (click)=\"saveTechniqueInstrument()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                    <button (click)=\"cancelTechniqueInstrument()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                </td>\n\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"finding\">\n                            Finding\n                        </label>\n                    </td>\n                    <td>\n                        <button (click)=\"addFinding()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <ng-container *ngFor=\"let finding of data.finding; let fIndex=index\">\n                            <div *ngIf=\"finding.rows.length||finding.files.length\" class=\"mainBorder\">\n                                                <div class=\"dataConditions\"><B>Data and Conditions</B>\n                                                        <button  (click)=\"editFinding(fIndex, finding)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                </div>\n                                                <table class=\"dataTable\">\n                                                    <tr>\n                                                        <th *ngFor=\"let header of finding.columnHeaders\">\n                                                            {{header.columnName}}\n                                                        </th>\n                                                    </tr>\n                                                    <tr *ngFor=\"let row of finding.rows; let rowIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                                        <td [ngStyle]=\"{'width':85/row.cells.length+'%'}\" *ngFor=\"let column of row.cells\">\n                                                            <span *ngIf=\"column.operand!='='\">\n                                                                {{column.operand}}\n                                                            </span>\n                                                            {{column.value}}\n                                                        </td>\n                                                    </tr>\n                                                </table>\n                                            <ng-container *ngIf=\"finding.files.length\">\n                                                <br /><B>Files</B>\n                                                <table class=\"dataTable\">\n                                                    <tr>\n                                                        <th>File Type</th>\n                                                        <th>Title and Download Link</th>\n                                                        <th>Keywords</th>\n                                                        <th>Description</th>\n                                                    </tr>\n                                                    <tr *ngFor=\"let file of finding.files\">\n                                                        <td>{{file.type}}</td>\n                                                        <td>\n                                                            <a href=\"\" *ngIf=\"!file.uriExternal && file.type !=='image'\"\n                                                               [href]=\"serverUrl+'/rest/sample/download?fileId='+file.id\">\n                                                                {{file['title']}}\n                                                            </a>\n                                                            <a *ngIf=\"file['type'] === 'image'\"\n                                                               [href]=\"serverUrl+'/rest/sample/download?fileId='+file.id\"\n                                                            >\n                                                                <img  [src]=\"serverUrl+'/rest/sample/download?fileId='+file.id\" width=\"150\">\n                                                            </a>\n\n                                                            <a  *ngIf=\"file.uriExternal\" [href]=\"file.externalUrl\" target=\"_blank\" rel=\"nofollow noreferrer\">\n                                                                {{file['title']}}\n                                                            </a>\n                                                        </td>\n                                                        <td>\n                                                            <ul>\n                                                                <li *ngFor=\"let keyword of splitKeywords(file['keywordsStr'])\">\n                                                                    {{keyword}}\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td>{{file.description}}</td>\n                                                    </tr>\n                                                </table>\n                                            </ng-container>\n\n                            </div><br />\n                        </ng-container>\n                        <div class=\"mainBorder\" *ngIf=\"findingIndex!=null\">\n                            <table id=\"findingsEditForm\" class=\"dataMain\">\n                                <tr>\n                                    <td colspan=\"2\">\n                                        <table class=\"dataMain\">\n                                            <tr>\n                                                <td class=\"columnUpdate\">\n                                                    <label for=\"finding.columns\">\n                                                        Columns\n                                                    </label>\n                                                    <input type=\"number\" name=\"columns\" id=\"finding.columns\" [(ngModel)]=\"currentFinding.numberOfColumns\">\n                                                    <label for=\"finding.rows\">\n                                                        &nbsp;Rows\n                                                    </label>\n                                                    <input type=\"number\" name=\"rows\" id=\"finding.rows\" [(ngModel)]=\"currentFinding.numberOfRows\"><br />\n                                                    <button (click)=\"updateRowsColumns()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Update</button>\n                                                    <button *ngIf=\"findingIndex!=-1\" (click)=\"editColumnOrder()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Set Column Order</button>\n                                                    <label class=\"btn-canano btn-canano-primary btn-canano-xs\">\n                                                        Import csv\n                                                        <input type=\"file\" id=\"csvFile\" style=\"display: none\" (change)=\"importCSV($event)\">\n                                                    </label>\n\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"columnOrder!=null\">\n                                                <td>\n                                                    <div class=\"mainBorder\">\n                                                        <h5>Column Order</h5>\n                                                            <table class=\"dataTable\">\n                                                                <tr>\n                                                                    <th *ngFor=\"let columnHeader of columnOrder.columnHeaders\">\n                                                                        {{columnHeader.columnName}}\n                                                                    </th>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td *ngFor=\"let columnHeader of columnOrder.columnHeaders; let cIndex=index\">\n                                                                        <input type=\"number\" [(ngModel)]=\"columnHeader.columnOrder\" [name]=\"'c'+cIndex+'.columnOrder'\">\n                                                                    </td>\n                                                                </tr>\n\n                                                            </table><br />\n                                                            <button (click)=\"saveColumnOrder()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                            <button (click)=\"cancelColumnOrder()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"label\">\n                                                    Data and Conditions\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"columnHeaderIndex!=null\">\n                                                <td>\n                                                    <div class=\"mainBorder\">\n                                                        <table class=\"columnHeaderDefinitions\">\n                                                            <tr>\n                                                                <td colspan=\"2\">\n                                                                    <h5>Column Definitions</h5>\n                                                                    <br />\n                                                                    At least one column must be of type Datum.\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.columnType\">\n                                                                        Column Type*\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"changeColumnType($event,true)\" name=\"columnHeader.columnType\" [(ngModel)]=\"columnHeader.columnType\">\n                                                                        <option [selected]=\"columnHeader.columnType===null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option [selected]=\"columnHeader.columnType==='datum'\">datum</option>\n                                                                        <option [selected]=\"columnHeader.columnType==='condition'\">condition</option>\n                                                                    </select>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.columnName\">\n                                                                        Column Name*\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('columnHeader.columnName',columnHeader.columnName);changeColumnName($event,true)\" name=\"columnHeader.columnName\" [disabled]=\"columnHeader.columnType==null\" [(ngModel)]=\"columnHeader.columnName\">\n                                                                        <option [selected]=\"columnHeader.columnName===null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option *ngFor=\"let name of setupData.columnNameOptions\" [selected]=\"columnHeader.columnName==name\">\n                                                                            {{name}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"columnHeader.columnName ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Name'\" [value]=\"currentDropdownValues['columnHeader.columnName']\" [field]=\"'columnHeader.columnName'\" [array]=\"'setupData.columnNameOptions'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div>\n                                                                    <br />\n                                                                    <i>Combination of column name and column value type must be unique.</i>\n\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.valueType\">\n                                                                        Column Value Type\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('columnHeader.valueType',columnHeader.valueType)\" name=\"columnHeader.valueType\" [disabled]=\"columnHeader.columnType==null || columnHeader.columnName==null\" [(ngModel)]=\"columnHeader.valueType\">\n                                                                        <option [selected]=\"columnHeader.valueType===null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option *ngFor=\"let name of data.datumConditionValueTypeLookup\" [selected]=\"columnHeader.valueType==name\">\n                                                                            {{name}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"columnHeader.valueType ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Value Type'\" [value]=\"currentDropdownValues['columnHeader.valueType']\" [field]=\"'columnHeader.valueType'\" [array]=\"'data.datumConditionValueTypeLookup'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div><br />\n                                                                    <i>Combination of column name and column value type must be unique.</i>\n\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.valueUnit\">\n                                                                        Column Value Unit\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('columnHeader.valueUnit',columnHeader.valueUnit)\" name=\"columnHeader.valueUnit\" id=\"columnHeader.valueUnit\" [(ngModel)]=\"columnHeader.valueUnit\">\n                                                                        <option [selected]=\"columnHeader.valueUnit==null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option *ngFor=\"let type of setupData.valueUnitOptions\" [selected]=\"columnHeader.valueUnit===type\" value=\"{{type}}\">\n                                                                            {{type}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"columnHeader.valueUnit ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Value Unit'\" [value]=\"currentDropdownValues['columnHeader.valueUnit']\" [field]=\"'columnHeader.valueUnit'\" [array]=\"'setupData.valueUnitOptions'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div>\n\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.constantValue\">\n                                                                        Constant Value\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <input type=\"text\" name=\"columnHeader.constantValue\" id=\"columnHeader.constantValue\" [(ngModel)]=\"columnHeader.constantValue\">\n                                                                    <br />\n                                                                    <i>For boolean column value type, please enter 1 for true, 0 for false\n                                                                    </i>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>\n                                                                    <button (click)=\"resetColumnForm()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n\n                                                                </td>\n                                                                <td>\n                                                                    <button (click)=\"saveColumnForm()\" [disabled]=\"columnHeader.columnType==null||columnHeader.columnName==null\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                                    <button (click)=\"cancelColumnForm()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                                </td>\n                                                            </tr>\n                                                        </table>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <table class=\"dataTable\">\n                                                        <tr>\n                                                            <td [colSpan]=\"currentFinding.numberOfColumns+1\">\n                                                                <h5>Column Data</h5><br />\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <th *ngFor=\"let columnHeader of currentFinding.columnHeaders; let columnHeaderIndex=index\">\n                                                                <a [routerLink]=\"\" (click)=\"editColumnForm(columnHeader, columnHeaderIndex)\">\n                                                                    {{columnHeader.columnName}}\n                                                                </a>\n                                                            </th>\n                                                            <th></th>\n                                                        </tr>\n                                                        <ng-container *ngFor=\"let row of currentFinding.rows;let rIndex=index; let odd=odd; let last=last\">\n                                                            <tr [ngClass]=\"{'rowOdd':odd}\">\n                                                                <td *ngFor=\"let column of row.cells; let cIndex=index;\">\n                                                                    <select [name]=\"'column.operand'+rIndex+cIndex\" [(ngModel)]=\"column.operand\">\n                                                                        <option *ngFor=\"let modifier of setupData.datumNumberModifier\" [selected]=\"column.operand===modifier\" [ngValue]=\"modifier\">{{modifier}}</option>\n                                                                    </select>\n                                                                    <input type=\"number\" *ngIf=\"currentFinding.columnHeaders[cIndex]['columnType']=='datum'\" [name]=\"'column.value'+rIndex+cIndex\" [(ngModel)]=\"column.value\" size=\"10\">\n                                                                    <input type=\"text\" *ngIf=\"currentFinding.columnHeaders[cIndex]['columnType']=='condition'||currentFinding.columnHeaders[cIndex]['columnType']==null\" [name]=\"'column.value'+rIndex+cIndex\" [(ngModel)]=\"column.value\" size=\"10\">\n                                                                </td>\n                                                                <td>\n                                                                    <button (click)=\"deleteFindingRow(rIndex)\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                                </td>\n                                                            </tr>\n                                                        </ng-container>\n                                                    </table>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"label\">\n                                                    Files &nbsp;&nbsp;&nbsp;&nbsp;<button (click)=\"addFileForm()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"currentFinding.files.length\">\n                                                <td>\n                                                    <table class=\"dataTable\">\n                                                        <tr>\n                                                            <th>File Type</th>\n                                                            <th>Title and Download Link</th>\n                                                            <th>Keywords</th>\n                                                            <th>Description</th>\n                                                            <th></th>\n                                                        </tr>\n                                                        <tr *ngFor=\"let file of currentFinding.files; let fileIndex=index\">\n                                                            <td>{{file.type}}</td>\n                                                            <td>\n                                                                <a href=\"\" [href]=\"serverUrl+'/rest/sample/download?fileId='+file.id\">\n                                                                    {{file['title']}}\n                                                                </a>\n\n                                                            </td>\n                                                            <td>\n                                                                <ul>\n                                                                    <li *ngFor=\"let keyword of splitKeywords(file.keywordsStr)\">\n                                                                        {{keyword}}\n                                                                    </li>\n                                                                </ul>\n                                                            </td>\n                                                            <td>{{file.description}}</td>\n                                                            <td>\n                                                                <button (click)=\"editFile(file, fileIndex)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                                <button (click)=\"deleteFile(file, fileIndex)\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                            </td>\n                                                        </tr>\n                                                    </table>\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"fileIndex!=null\">\n                                                <td>\n                                                    <table>\n                                                        <tr>\n                                                            <td colspan=\"2\">\n                                                                <label for=\"fileUpload\" class=\"right\">\n                                                                    Upload\n                                                                </label>\n                                                                <input type=\"radio\" name=\"curentFile.uriExternal\" id=\"fileUpload\" [value]=\"false\" [(ngModel)]=\"currentFile.uriExternal\">\n                                                                <label for=\"fileURL\" class=\"right\">\n                                                                    Enter File URL\n                                                                </label>\n                                                                <input type=\"radio\" name=\"curentFile.uriExternal\" id=\"fileURL\" [value]=\"true\" [(ngModel)]=\"currentFile.uriExternal\">\n                                                            </td>\n                                                        </tr>\n                                                        <tr *ngIf=\"currentFile.uriExternal==1\">\n                                                            <td class=\"label\">\n                                                                <label for=\"uriExternal\">\n                                                                    File URL\n                                                                </label>\n                                                            </td>\n                                                            <td>\n                                                                <input id=\"uriExternal\" *ngIf=\"currentFile.uriExternal==1\" type=\"text\" name=\"currentFile.externalUrl\" [(ngModel)]=\"currentFile.externalUrl\">\n                                                                [<canano-disclaimer *ngIf=\"currentFile.uriExternal==1\"></canano-disclaimer>]\n                                                            </td>\n                                                        </tr>\n                                                        <tr *ngIf=\"currentFile.uriExternal==0\">\n                                                            <td class=\"label\">\n                                                                <label for=\"file\">\n                                                                    File\n                                                                </label>\n                                                            </td>\n                                                            <td>\n                                                                <input id=\"file\" (change)=\"uploadFile($event)\" type=\"file\" name=\"currentFile.uploadFile\">\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"label\">\n                                                                <label for=\"currentFile.fileType\">\n                                                                    File Type*\n                                                                </label>\n                                                            </td>\n                                                            <td>\n                                                                <select name=\"currentFile.type\" [(ngModel)]=\"currentFile.type\" id=\"currentFile.fileType\">\n                                                                    <option [select]=\"currentFile.type===''\" [ngValue]=\"''\">--Select</option>\n                                                                    <option>document</option>\n                                                                    <option>graph</option>\n                                                                    <option>image</option>\n                                                                    <option>movie</option>\n                                                                    <option>spread sheet</option>\n                                                                </select>\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"label\">\n                                                                <label for=\"currentFile.title\">\n                                                                    File Title*\n                                                                </label>\n                                                            </td>\n                                                            <td>\n                                                                <input id=\"currentFile.title\" type=\"text\" name=\"currentFile.title\" [(ngModel)]=\"currentFile.title\">\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"label\">\n                                                                <label for=\"currentFile.keywordsStr\">\n                                                                    Keywords\n                                                                </label>\n                                                            </td>\n                                                            <td>\n                                                                <textarea id=\"currentFile.keywordsStr\" name=\"currentFile.keywordsStr\" rows=\"3\" cols=\"60\" [(ngModel)]=\"currentFile.keywordsStr\">\n                                                                    {{currentFile.keywordsStr}}\n                                                                </textarea>\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"label\">\n                                                                <label for=\"currentFile.description\">\n                                                                    Description\n                                                                </label>\n                                                            </td>\n                                                            <td>\n                                                                <textarea id=\"currentFile.description\" name=\"currentFile.description\" rows=\"3\" cols=\"60\" [(ngModel)]=\"currentFile.description\">\n                                                                    {{currentFile.description}}\n                                                                </textarea>\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>\n                                                                <button (click)=\"deleteFile()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                            </td>\n                                                            <td>\n                                                                <button (click)=\"saveFile()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                                <button (click)=\"cancelFile()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n\n                                                            </td>\n                                                        </tr>\n                                                    </table>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteFinding()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td class=\"submit\">\n                                        <button (click)=\"saveFinding()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelFinding()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"analysisConclusion\">\n                            Analysis and Conclusion\n                        </label>\n                    </td>\n                    <td>\n                        <textarea name=\"analysisConclusion\" id=\"analysisConclusion\" rows=\"3\" cols=\"120\" [(ngModel)]=\"data.analysisConclusion\">\n\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain copy\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"otherSampleNames\">\n                            Copy to other samples with the same primary organization?\n                        </label>\n                    </td>\n                    <td>\n                        <select class=\"multiple\" id=\"otherSampleNames\" name=\"otherSampleNames\" multiple=\"true\" size=\"10\" [(ngModel)]=\"data.selectedOtherSampleNames\">\n                            <option *ngFor=\"let sn of data['otherSampleNameLookup']\" value=\"{{sn}}\" >\n                                {{sn}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <input type=\"checkbox\" name=\"copyToOtherSamples\" id=\"copyToOtherSamples\" [(ngModel)]=\"data.copyToOtherSamples\">\n                        <label for=\"copyToOtherSamples\" class=\"right\">\n                            Also copy finding data and conditions?\n                        </label>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div>\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td *ngIf=\"charId\" style=\"text-align:left;\">\n                        <button (click)=\"deleteCharacterization()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"resetCharacterization()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"data.type=='' || data.name==''\" (click)=\"submitCharacterization()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n"],"sourceRoot":"webpack:///"}