{"version":3,"file":"src_app_cananolab-client_main-display_admin_admin_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/admin/admin-routing.module.ts","./src/app/cananolab-client/main-display/admin/admin.component.ts","./src/app/cananolab-client/main-display/admin/admin.component.html","./src/app/cananolab-client/main-display/admin/admin.module.ts","./src/app/cananolab-client/main-display/admin/user-results/user-results.component.ts","./src/app/cananolab-client/main-display/admin/user-results/user-results.component.html","./src/app/cananolab-client/main-display/admin/user-results/user-results.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nconst routes: Routes = [{ path: '', component: AdminComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Consts } from '../../../constants';\nimport { ApiService } from '../../common/services/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'canano-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n    currentUrl='admin';\n    message='';\n    errors={};\n    toolHeadingName='Manage Users';\n    userData={};\n    username='';\n    userSearchResults;\n    searchUserName='';\n    searchAll;\n    piiConfirmed=false;\n    constructor(private activatedRoute:ActivatedRoute,private router:Router,private apiService:ApiService,private httpClient:HttpClient) { }\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe(data=> {\n            this.username=data['username'];\n            this.searchAll=data['all'];\n            if (this.username) {\n                this.apiService.doGet(Consts.QUERY_ADMIN_USER_READ,'username='+this.username).subscribe(data=> {\n                    let userData=this.setupUserData();\n                    Object.keys(userData).forEach(element=> { // we dont want credentials so create new object first then get keys //\n                        if (element=='roles') {\n                            data[element].splice(data[element].indexOf('ROLE_ANONYMOUS'),1)\n                        }\n                        this.userData[element]=data[element];\n                    })\n\n                })\n            }\n        })\n        if (this.router.url.includes('update-user')) {\n            this.currentUrl='update-user';\n            this.toolHeadingName='Update User';\n        }\n        if (this.router.url.includes('create-user')) {\n            this.currentUrl='create-user';\n            this.toolHeadingName='Create User';\n            this.userData=this.setupUserData();\n            this.userData['username']='';\n        }\n        if (this.router.url.includes('search-user')) {\n            this.currentUrl='search-user';\n            this.toolHeadingName='Search Users';\n            if (this.searchAll) {\n                this.searchForUsers();\n            }\n        }\n    }\n\n    reset() {\n        this.userData=this.setupUserData();\n        if (this.currentUrl=='create-user') {\n            this.userData['username']=='';\n        };\n        if (this.currentUrl=='update-user') {\n            this.userData['username']=this.username;\n        }\n        this.piiConfirmed=false;\n    }\n\n    resetSearch() {\n        this.searchUserName='';\n    }\n\n    setupUserData() {\n        let userData={\n            username:\"\",\n            department: \"\",\n            emailId: \"\",\n            enabled: true,\n            firstName: \"\",\n            lastName: \"\",\n            organization: \"\",\n            phoneNumber: \"\",\n            roles: [],\n            title: \"\"\n        }\n        return userData;\n    }\n\n\n\n    searchForUsers() {\n        this.apiService.doGet(Consts.QUERY_ADMIN_SEARCH_USERS,'username='+this.searchUserName).subscribe(data=>{\n            this.userSearchResults=data;\n        })\n    }\n\n\n    submit() {\n        let url;\n        if (this.currentUrl=='create-user') {\n            this.apiService.doPost(Consts.QUERY_ADMIN_USER_CREATE,this.userData).subscribe(data=> {\n                this.router.navigate(['/home/admin/update-user',data.username])\n            })\n        } url = Consts.QUERY_ADMIN_USER_CREATE;\n        if (this.currentUrl=='update-user') {\n            this.apiService.doPost(Consts.QUERY_ADMIN_USER_UPDATE,this.userData).subscribe(data=> {\n                this.message='User Successfully Updated'\n            })\n        }\n\n\n    }\n\n}\n","\n<canano-main-display-heading [helpUrl]=\"''\"\n[toolHeadingName]=\"toolHeadingName\">\n\n</canano-main-display-heading>\n\n\n<div class=\"mainSection\">\n    <div class=\"mainBorder\" *ngIf=\"currentUrl=='admin'\">\n        <div class=\"links-panel card ml-1 mt-2\">\n            <div  class=\"card-header mb-0 pb-0\">\n                <span class=\"card-title unselectable m-0 p-0\">\n                    <h5>USER LINKS</h5>\n                </span>\n\n            </div>\n            <div class=\"card-body\">\n                <a class=\"link-clicker\" routerLink=\"/home/admin/create-user\">Create a New User</a><br>\n                Select to create a new user.<br><br>\n\n                <a  class=\"link-clicker\" routerLink=\"/home/admin/search-user\">Search Existing Users</a><br>\n                Enter search criteria to obtain information on users of interest.\n\n\n            </div>\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"currentUrl=='search-user'\">\n        <div  class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"username\">\n                            Search Name\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"username\" id=\"username\" [(ngModel)]=\"searchUserName\" size=\"50\">\n                    </td>\n                </tr>\n                <tr>\n                    <td colspan=\"2\">\n                        <i>Note: You can search using Username, First Name or Last Name in the above field.\n                            Searching without any parameters returns all users.</i>\n                    </td>\n                </tr>\n                <tr *ngIf=\"userSearchResults\">\n                    <td colspan=\"2\">\n                        <canano-user-results [searchResults]=\"userSearchResults\"></canano-user-results>\n                        <!-- <table class=\"dataTable\">\n                            <tr>\n                                <th>Actions</th>\n                                <th>Username</th>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Organization</th>\n                                <th>Department</th>\n                                <th>Title</th>\n                                <th>Phone</th>\n                                <th>Email</th>\n                            </tr>\n                            <tr *ngFor=\"let user of userSearchResults\">\n                                <td>\n                                    <a (click)=\"navigateToEditUser(user)\">Edit</a><br />\n                                    <a (click)=\"navigateToResetPassword(user)\">Reset Password</a>\n                                </td>\n                                <td>{{user.username}}</td>\n                                <td>{{user.firstName}}</td>\n                                <td>{{user.lastName}}</td>\n                                <td>{{user.organization}}</td>\n                                <td>{{user.department}}</td>\n                                <td>{{user.title}}</td>\n                                <td>{{user.phoneNumber}}</td>\n                                <td>{{user.emailId}}</td>\n                            </tr>\n                        </table> -->\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"resetSearch()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button (click)=\"searchForUsers()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Search</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"currentUrl=='update-user'||currentUrl=='create-user'\">\n        <div class=\"mainBorder\">\n\n            <table class=\"dataMain\">\n                <tr *ngIf=\"message!=''\">\n                    <td colspan=\"2\" class=\"message\">\n                        {{message}}\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.username\">\n                            Username*\n                        </label>\n                    </td>\n                    <td>\n                        <B *ngIf=\"currentUrl=='update-user'\">{{this.userData.username}}</B>\n                        <input *ngIf=\"currentUrl=='create-user'\" type=\"text\" name=\"userData.userName\" id=\"userData.username\" [(ngModel)]=\"userData.username\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.firstName\">\n                            First Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.firstName\" id=\"userData.firstName\" [(ngModel)]=\"userData.firstName\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.lastName\">\n                            Last Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.lastName\" id=\"userData.lastName\" [(ngModel)]=\"userData.lastName\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.organization\">\n                            Organization\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.organization\" id=\"userData.organization\" [(ngModel)]=\"userData.organization\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.department\">\n                            Department\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.department\" id=\"userData.department\" [(ngModel)]=\"userData.department\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.title\">\n                            Title\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.title\" id=\"userData.title\" [(ngModel)]=\"userData.title\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.phoneNumber\">\n                            Phone Number\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.phoneNumber\" id=\"userData.phoneNumber\" [(ngModel)]=\"userData.phoneNumber\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.emailId\">\n                            Email*\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"userData.emailId\" id=\"userData.emailId\" [(ngModel)]=\"userData.emailId\" size=\"70\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"userData.roles\">\n                            Role\n                        </label>\n                    </td>\n                    <td>\n                        <select class=\"multiple\" name=\"userData.roles\" id=\"userData.roles\" [(ngModel)]=\"userData.roles\" multiple size=\"3\">\n                            <option [ngValue]=\"'ROLE_CURATOR'\">\n                                Curator\n                            </option>\n                            <option [ngValue]=\"'ROLE_RESEARCHER'\">\n                                Researcher\n                            </option>\n                            <option [ngValue]=\"'ROLE_ADMIN'\">\n                                Admin\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table>\n            <br>\n            <div style=\"width:800px\">\n                <div>\n                    Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                    points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                </div>\n                <br>\n                <div>\n                    <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                    <b> * I have read and understood the message above.</b>\n                </div>\n            </div>\n        </div>\n        <div>\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button (click)=\"submit()\" [disabled]=\"userData.emailId==''||userData.username==''||userData.firstName==''||userData.lastName==''||!piiConfirmed\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </ng-container>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserResultsModule } from './user-results/user-results.module';\n\n@NgModule({\n    declarations: [AdminComponent],\n    imports: [\n      CommonModule,\n      AdminRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      UserResultsModule\n    ]\n  })\n  export class AdminModule { }\n","import { Component, Input, OnInit,OnChanges } from '@angular/core';\nimport { Properties } from 'src/assets/properties';\nimport { Consts } from 'src/app/constants';\nimport { SortState } from 'src/app/constants';\nimport { Router } from '@angular/router';\nimport { SearchResultsPagerService } from 'src/app/cananolab-client/common/components/search-results-pager/search-results-pager.service';\nimport { UtilService } from 'src/app/cananolab-client/common/services/util.service';\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\nimport { takeUntil,timeout } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { timeoutWith } from 'rxjs/operators'\nimport { throwError } from 'rxjs'\n\n@Component({\n  selector: 'canano-user-results',\n  templateUrl: './user-results.component.html',\n  styleUrls: ['./user-results.component.scss']\n})\nexport class UserResultsComponent implements OnInit {\n    @Input() searchResults;\n    columnHeadings = [\n        {Actions:'Actions'},\n        {username:'Username'},\n        {firstName:'First Name'},\n        {lastName:'Last Name'},\n        {organization:'Organization'},\n        {department:'Department'},\n        {title:'Title'},\n        {phoneNumber:\"Phone\"},\n        {emailId:\"Email\"}\n    ];\n\n    maxPageLength = Properties.MAX_PAGE_LENGTH;\n    pageLength = Properties.DEFAULT_PAGE_LENGTH;\n    pageCount = 10;\n    searchResultsCount = -1;\n    currentPage = 0;\n    searchResultsPageToDisplay;\n    userName;\n\n    sortingStates = [\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n    ];\n\n    sortState = SortState;\n    properties = Properties;\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private router: Router,\n        private searchResultsPagerService: SearchResultsPagerService,\n        private utilService: UtilService,\n        private statusDisplayService: StatusDisplayService\n    ) { }\n\n    ngOnInit(): void {\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n\n        this.statusDisplayService.updateUserEmitter\n            .subscribe((data) => {\n                this.userName = data;\n            });\n            this.searchResultsCount = this.searchResults.length;\n            this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n            this.onPageLengthChange();\n    }\n\n    ngOnChanges(): void {\n\n        this.maxPageLength = Properties.MAX_PAGE_LENGTH;\n        this.pageLength = Properties.DEFAULT_PAGE_LENGTH;\n        this.pageCount = 10;\n        this.searchResultsCount = -1;\n        this.currentPage = 0;\n        this.searchResultsPageToDisplay;\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n            this.searchResultsCount = this.searchResults.length;\n            this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n            this.onPageLengthChange();\n\n    console.log(this.currentPage)\n    }\n\n    setupPage() {\n        this.searchResultsPageToDisplay = this.searchResults.slice(\n            this.pageLength * this.currentPage,\n            this.pageLength * (this.currentPage + 1)\n        );\n    }\n\n    onSortClick(i, key) {\n        if (i) {\n            if (this.sortingStates[i]) {\n                // clicking on column that already is sorted on //\n                this.sortingStates[i] = this.sortingStates[i] == 1 ? 2 : 1;\n            } else {\n                // reset sorting states //\n                this.sortingStates.forEach((item, index) => {\n                    this.sortingStates[index] = 0;\n                });\n                this.sortingStates[i] = 1;\n            }\n            console.log(this.sortingStates)\n            if (this.sortingStates[i] == 1) {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) > this.getStringValue(b[key]) ? 1 : -1));\n            } else {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) < this.getStringValue(b[key]) ? 1 : -1));\n            }\n            this.setupPage();\n        }\n    }\n\n    navigateToEditUser(user) {\n        this.router.navigate(['/home/admin/update-user',user])\n    }\n\n    getStringValue(val) {\n        if (val) {\n            return val.toString().toUpperCase()\n        }\n        return ''\n    }\n\n\n    onPageLengthChange() {\n        if (this.pageLength < 1) {\n            this.pageLength = 1;\n        }\n        if (this.pageLength > this.maxPageLength) {\n            this.pageLength = this.maxPageLength;\n        }\n\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.searchResultsPagerService.setPageCount(this.pageCount);\n        this.setupPage(); // Sets this page as the currently viewed search results.\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n\n}\n","<div>\n<div *ngIf=\"!searchResults.length\" class=\"mainBorder\"> No search results found. </div>\n<div *ngIf=\"searchResults.length\">\n    <span class=\"ml-2\">\n        {{searchResults.length}} Item{{(searchResults.length > 1 ? 's' : '')}} found, displaying\n        {{(currentPage * pageLength) + 1}}\n        -{{ (((currentPage * pageLength) + pageLength) > searchResults.length) ? searchResults.length : (currentPage *\n        pageLength) + pageLength }}\n    </span>\n<span class=\"search-results-pager\">\n    <!-- Page length number setting  -->\n    <span class=\"ml-5\">\n        Show\n        <input class=\"number-spinner rows-per-page-spinner\" min=\"1\" max=\"{{maxPageLength}}\" type=\"number\"\n            [(ngModel)]=\"pageLength\" (change)=\"onPageLengthChange()\">\n        entries\n    </span>\n    <!-- Pager buttons -->\n    <canano-search-results-pager style=\"float: right;\" [totalCount]=\"searchResultsCount\" [startingPageLength]=\"pageLength\"></canano-search-results-pager>\n    </span><br /><br />\n    <table class=\"dataTable\">\n        <tr>\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <th *ngFor=\"let colKeyValue of col | keyvalue\" class=\"unselectable hand\" (click)=\"onSortClick(i,colKeyValue.key)\">\n                    <label for=\"sortClick\" class=\"hand\">\n                        {{ colKeyValue.value }}\n                        <span *ngIf=\"i > 0\" id=\"sortClick\" class=\"inline\">\n                            <span *ngIf=\"i > 0\" class=\"sortImages\" >\n                                <span *ngIf=\"sortingStates[i] === sortState.NO_SORT\">\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                    </svg>\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                    </svg>\n                                </span>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_UP\" width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                </svg>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_DOWN\"  width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                </svg>\n                            </span>\n                        </span>\n                    </label>\n                    <!-- No sorting for \"Actions\" column -->\n\n                    <!-- END Add sorting icons -->\n                </th>\n            </ng-container>\n        </tr>\n        <tr *ngFor=\"let res of searchResultsPageToDisplay; let even=even; let odd=odd; let i=index\" class=\"search-results-tr\" [ngClass]=\"{\n            '': even,\n            'rowOdd': odd\n        }\">\n            <td class=\"search-results-td\">\n                <a (click)=\"navigateToEditUser(res['username'])\">Edit</a><br />\n            </td>\n            <td class=\"search-results-td\"> {{res['username']}} </td>\n            <td class=\"search-results-td\"> {{res['firstName']}} </td>\n            <td class=\"search-results-td\"> {{res['lastName']}} </td>\n            <td class=\"search-results-td\"> {{res['organization']}} </td>\n            <td class=\"search-results-td\"> {{res['department']}} </td>\n            <td class=\"search-results-td\"> {{res['title']}} </td>\n            <td class=\"search-results-td\"> {{res['phoneNumber']}} </td>\n            <td class=\"search-results-td\"> {{res['emailId']}} </td>\n        </tr>\n</table>\n<!-- Pager buttons -->\n<br />\n<canano-search-results-pager style=\"float: right; \" [totalCount]=searchResultsCount [startingPageLength]=pageLength> </canano-search-results-pager>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserResultsComponent } from './user-results.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/cananolab-client/common/modules/set-object-value/shared.module';\n\n@NgModule({\n  declarations: [UserResultsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  exports: [UserResultsComponent]\n})\nexport class UserResultsModule { }\n"],"names":["RouterModule","AdminComponent","routes","path","component","AdminRoutingModule","forChild","imports","exports","Consts","i0","constructor","activatedRoute","router","apiService","httpClient","ngOnInit","params","subscribe","data","username","searchAll","doGet","QUERY_ADMIN_USER_READ","userData","setupUserData","Object","keys","forEach","element","splice","indexOf","url","includes","currentUrl","toolHeadingName","searchForUsers","reset","piiConfirmed","resetSearch","searchUserName","department","emailId","enabled","firstName","lastName","organization","phoneNumber","roles","title","QUERY_ADMIN_SEARCH_USERS","userSearchResults","submit","doPost","QUERY_ADMIN_USER_CREATE","navigate","QUERY_ADMIN_USER_UPDATE","message","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","UserResultsModule","AdminModule","declarations","Properties","SortState","takeUntil","Subject","UserResultsComponent","searchResultsPagerService","utilService","statusDisplayService","Actions","MAX_PAGE_LENGTH","DEFAULT_PAGE_LENGTH","NO_SORT","currentPageChangeEmitter","pipe","ngUnsubscribe","currentPage","setupPage","updateUserEmitter","userName","searchResultsCount","searchResults","length","pageCount","Math","ceil","pageLength","onPageLengthChange","ngOnChanges","maxPageLength","searchResultsPageToDisplay","console","log","slice","onSortClick","i","key","sortingStates","item","index","sort","a","b","getStringValue","navigateToEditUser","user","val","toString","toUpperCase","setPageCount","ngOnDestroy","next","complete","inputs","features"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}