{"version":3,"sources":["./src/app/cananolab-client/main-display/protocols/protocol-search/protocol-search.component.ts","./src/app/cananolab-client/main-display/protocols/protocol-search/protocol-search.component.html","./src/app/cananolab-client/main-display/protocols/protocol-search/protocol-search-routing.module.ts","./src/app/cananolab-client/main-display/protocols/protocol-search/protocol-search.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-protocols-protocol-search-protocol-search-module.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Consts, ProtocolScreen } from '../../../../constants';\nimport { TopMainMenuService } from '../../../top-main-menu/top-main-menu.service';\nimport { ApiService } from '../../../common/services/api.service';\nimport { Properties } from '../../../../../assets/properties';\nimport { UtilService } from '../../../common/services/util.service';\nimport { ProtocolsService } from '../protocols.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n@Component( {\n    selector: 'canano-protocol-search',\n    templateUrl: './protocol-search.component.html',\n    styleUrls: ['./protocol-search.component.scss']\n} )\nexport class ProtocolSearchComponent implements OnInit, OnDestroy{\n    protocolSearchForm;\n    /**\n     * For canano-main-display-heading @Input()\n     */\n    loading;\n    loadingMessage=Consts.searchingMessage;\n    helpUrl = Consts.HELP_URL_PROTOCOL_SEARCH;\n    helpUrlSearchResults = Consts.HELP_URL_PROTOCOL_SEARCH_RESULTS;\n    toolHeadingName = 'Protocol Search';\n    toolHeadingNameSearchResults = 'Protocol Search Results';\n    errors;\n    // List for the dropdown\n    protocolTypes = [];\n\n    protocol_search_protocol_name = '';\n    protocolSearchProtocolType = '';\n    protocolSearchProtocolType1 = '';\n\n\n    protocolScreenToShow = ProtocolScreen.PROTOCOL_SEARCH_INPUT_SCREEN;\n    protocolScreenInfo = '';\n    searchResults = [];\n\n    defaultOperand = 'contains';\n    nameOperand = '';\n    titleOperand = '';\n    abbreviationOperand = '';\n\n    protocolType = '';\n\n    resetting = false;\n    initData;\n    protocolScreen = ProtocolScreen;\n    protocolName = '';\n\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor( private router:Router,private topMainMenuService: TopMainMenuService, private apiService: ApiService,\n                 private utilService: UtilService, private protocolsService: ProtocolsService ){\n    }\n\n    ngOnInit(): void{\n        this.errors={};\n        console.log('test')\n        this.protocolSearchForm={\n            \"nameOperand\":this.defaultOperand,\n            \"titleOperand\":this.defaultOperand,\n            \"abbreviationOperand\":this.defaultOperand,\n            \"fileTitle\":\"\",\n            \"protocolType\":\"\",\n            \"protocolName\":\"\"\n        };\n        this.initData=JSON.parse(JSON.stringify(this.protocolSearchForm))\n\n        // Listen for changing Protocol screens\n        this.protocolsService.currentProtocolScreenEmitter.pipe( takeUntil( this.ngUnsubscribe ) ).subscribe(\n            ( data ) => {\n                this.errors={};\n                this.protocolScreenToShow = data.ps;\n                this.protocolScreenInfo = data.info;\n            },\n            error=> {\n                this.errors=error;\n            } );\n\n\n        // Get Protocol types from server\n        this.init();\n\n    }\n\n\n    onSubmit(  ){\n        this.loading=true;\n        this.loadingMessage=Consts.searchingMessage;\n        this.apiService.doPost( Consts.QUERY_SEARCH_PROTOCOL, this.protocolSearchForm ).subscribe(\n            data => {\n                this.protocolsService.setProtocolSearchResults(data);\n                this.router.navigate(['home/protocols/protocol-search-results']);\n                this.errors={};\n                this.loading=null;\n            },\n            err => {\n                if( err.status === 404 ){ // @checkme\n                    this.errors=err;\n                    this.loading=null;\n                }\n            }\n        );\n    }\n\n\n    init(){\n        // Get list of Protocol types for dropdown\n        if( Properties.PROTOCOL_TYPES.length < 1){\n            this.loading=true;\n            this.loadingMessage=Consts.loadingMessage;\n            this.apiService.doGet( Consts.QUERY_PROTOCOL_SETUP, '' ).subscribe(\n                data => {\n                    this.errors={};\n                    this.protocolTypes = <any>data['protocolTypes'];\n                    Properties.PROTOCOL_TYPES = this.protocolTypes; // Cache it\n                    this.loading=false;\n                },\n                error=> {\n                    this.loading=null;\n                    this.errors=error;\n                } );\n        }else{\n            this.protocolTypes = Properties.PROTOCOL_TYPES;\n        }\n    }\n\n    onResetClick(){\n        this.resetting = true;\n        this.protocolSearchForm=JSON.parse(JSON.stringify(this.initData));\n    }\n\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n\n}\n","\n<canano-main-display-heading\n[helpUrl]=\"'https://wiki.nci.nih.gov/display/caNanoLab/Managing+Protocols+in+caNanoLab#ManagingProtocolsincaNanoLab-SearchProtocols'\"\n[toolHeadingName]=\"'Protocol Search'\">\n</canano-main-display-heading>\n\n<div class=\"mainSection\" *ngIf=\"protocolSearchForm\">\n    <canano-loader [loading]=\"loading\" [message]=\"loadingMessage\"></canano-loader>\n    <form name=\"protocolSearchForm\">\n        <div class=\"mainBorder\">\n            <table>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"protocolType\">\n                            Protocol Type\n                        </label>\n                    </td>\n                    <td>\n                        <select  name=\"protocolType\" id=\"protocolType\" [(ngModel)]=\"protocolSearchForm.protocolType\">\n                            <option [selected]=\"protocolSearchForm.protocolType==''\" [ngValue]=\"''\">--Select--</option>\n                            <option *ngFor=\" let option of protocolTypes\" value={{option}}>\n                                {{option}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"protocolName\">\n                            Protocol Name\n                        </label>\n                    </td>\n                    <td>\n                        <label for=\"nameOperand\">\n                            <select [(ngModel)]=\"protocolSearchForm.nameOperand\" name=\"nameOperand\" id=\"nameOperand\">\n                                <option  value=\"contains\">contains</option>\n                                <option value=\"equals\">equals</option>\n                            </select>\n                        </label>\n                        <input type=\"text\" [(ngModel)]=\"protocolSearchForm.protocolName\" name=\"protocolName\" id=\"protocolName\">\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <label for=\"protocolAbbreviation\">\n                            Protocol Abbreviation\n                        </label>\n                    </td>\n                    <td>\n                        <label for=\"abbreviationOperand\">\n                            <select [(ngModel)]=\"protocolSearchForm.abbreviationOperand\" name=\"abbreviationOperand\" id=\"abbreviationOperand\">\n                                <option value=\"contains\">contains</option>\n                                <option value=\"equals\">equals</option>\n                            </select>\n                        </label>\n                        <input id=\"protocolAbbreviation\" name=\"protocolAbbreviation\" type=\"text\" [(ngModel)]=\"protocolSearchForm.protocolAbbreviation\">\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <label for=\"fileTitle\">\n                            Protcol File Title\n                        </label>\n                    </td>\n                    <td>\n                        <label for=\"titleOperand\">\n                            <select [(ngModel)]=\"protocolSearchForm.titleOperand\" name=\"titleOperand\" id=\"titleOperand\">\n                                <option value=\"contains\">contains</option>\n                                <option value=\"equals\">equals</option>\n                            </select>\n                        </label>\n                        <input name=\"fileTitle\" id=\"fileTitle\" type=\"text\" [(ngModel)]=\"protocolSearchForm.fileTitle\">\n                    </td>\n                </tr>\n            </table>\n\n        </div>\n        <div class=\"buttons\">\n            <div>\n                Searching without any parameters returns all protocols.\n            </div>\n            <button [disabled]=\"loading\" (click)=\"onResetClick()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n            <button [disabled]=\"loading\" (click)=\"onSubmit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Search</button>\n\n        </div>\n    </form>\n</div>\n<!-- -----  END Enter search criteria  ----- -->\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProtocolSearchComponent } from './protocol-search.component';\nconst routes: Routes = [{ path: '', component: ProtocolSearchComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProtocolSearchRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProtocolSearchComponent } from './protocol-search.component';\nimport { ProtocolSearchRoutingModule } from './protocol-search-routing.module';\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [ProtocolSearchComponent],\n    imports: [\n      CommonModule,\n      ProtocolSearchRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class ProtocolSearchModule { }\n"],"sourceRoot":"webpack:///"}