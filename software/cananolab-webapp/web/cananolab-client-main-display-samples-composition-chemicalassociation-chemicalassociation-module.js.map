{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.module.ts","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.component.ts","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.component.html","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-composition-chemicalassociation-chemicalassociation-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChemicalassociationComponent } from './chemicalassociation.component';\nimport { ChemicalassociationRoutingModule } from './chemicalassociation-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n@NgModule({\n    declarations: [ChemicalassociationComponent],\n    imports: [\n      CommonModule,\n      ChemicalassociationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule,\n      FileModule\n    ]\n  })\nexport class ChemicalassociationModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\n@Component({\n  selector: 'canano-chemicalassociation',\n  templateUrl: './chemicalassociation.component.html',\n  styleUrls: ['../../../../../btn-bravo-canano.scss','./chemicalassociation.component.scss']\n})\nexport class ChemicalassociationComponent implements OnInit {\n  sampleId = Properties.CURRENT_SAMPLE_ID;\n  consts=Consts;\n  dataId;\n  sampleName = Properties.CURRENT_SAMPLE_NAME;\n  helpUrl =  Consts.HELP_URL_SAMPLE_COMPOSITION;\n  toolHeadingNameManage = 'Sample Composition';\n  data;\n  dataTrailer;\n  errors={};\n  fileIndex;\n  message;\n  nanomaterialEntityOptions;\n  functionalizingEntityOptions;\n  composingElementOptionsA;\n  composingElementOptionsB;\n  dataLoaded;\n  entityOptionsA;\n  entityOptionsB;\n  resetStatus=false;\n  setupData;\n  currentDropdownValues;\n  currentField;\n    constructor( private apiService:ApiService,private navigationService:NavigationService,private router: Router, private route: ActivatedRoute ){\n    }\n\n\n    ngOnInit(): void{\n        this.navigationService.setCurrentSelectedItem(1);\n        this.currentDropdownValues = {};\n        this.entityOptionsA = [];\n        this.entityOptionsB = [];\n        this.composingElementOptionsA = [];\n        this.composingElementOptionsB = [];\n        this.nanomaterialEntityOptions = [];\n        this.functionalizingEntityOptions = [];\n\n        this.data = this.setDefaultDataSet();\n        this.dataTrailer = this.setDefaultDataSet();\n      this.route.params.subscribe(\n          ( params: Params ) => {\n            this.sampleId = params['sampleId'];\n            this.dataId = params['dataId'];\n\n            if(\n                  this.sampleId <= 0 ){\n                  this.sampleId = Properties.CURRENT_SAMPLE_ID;\n              }else{\n                  Properties.CURRENT_SAMPLE_ID = this.sampleId;\n              };\n              this.apiService.getSampleName(this.sampleId).subscribe(\n                data=>this.toolHeadingNameManage='Edit ' +data['sampleName'] + ' Chemical Association'\n            )\n              if (this.dataId) {\n                this.data = this.getdata().subscribe(\n                    data => {\n                        Properties.SAMPLE_TOOLS = true;\n                        this.data = data;\n                        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                        this.loadSetupData();\n                        this.errors={};\n                    },\n                    error=>{\n                        Properties.SAMPLE_TOOLS = true;\n                        this.errors=error;\n                    } );\n              }\n              else {\n                  this.loadSetupData();\n                  Properties.SAMPLE_TOOLS = true;\n\n              }\n\n\n\n                }\n\n\n      );\n  }\n\n  getError(error:Object) {\n    this.errors=error;\n}\n\n  getdata(){\n    let getUrl = Consts.QUERY_CHEMICAL_ASSOCIATION_EDIT;\n\n    if( Properties.DEBUG_CURL ){\n        let curl = 'curl  -k \\'' + getUrl + '\\'';\n    }\n\n    let headers = new HttpHeaders( {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    } );\n\n    let options = {\n        headers: headers,\n        method: 'get',\n    };\n\n    let results;\n    try{\n        results = this.apiService.doGet(getUrl,'sampleId='+this.sampleId+'&dataId='+this.dataId);\n    }catch( e ){\n        // TODO react to error.\n        this.errors=e;\n        console.error( 'doGet Exception: ' + e );\n    }\n    return results;\n\n}\n\nisSubmissionValid() {\n    if (this.data.type=='') {\n        return true\n    }\n    if (this.data.type=='attachment'&&this.data.bondType=='') {\n        return true\n    }\n    let AKeys=Object.keys(this.data['associatedElementA']);\n    let BKeys=Object.keys(this.data['associatedElementB']);\n    let ACount=[];\n    let BCount=[];\n\n    AKeys.forEach(item=> {\n        if (this.data['associatedElementA'][item]=='') {\n            ACount.push(item)\n        }\n        if (this.data['associatedElementA']['compositionType']=='nanomaterial entity') {\n            if (this.data['associatedElementA']['composingElement']['id']=='') {\n                ACount.push(item)\n            }\n        }\n    })\n    BKeys.forEach(item=> {\n        if (this.data['associatedElementB'][item]=='') {\n            BCount.push(item)\n        }\n        if (this.data['associatedElementB']['compositionType']=='nanomaterial entity') {\n            if (this.data['associatedElementB']['composingElement']['id']=='') {\n                BCount.push(item)\n            }\n        }\n    })\n    if (ACount.length||BCount.length) {\n        return true\n    }\n    return false\n}\nsetDefaultDataSet() {\n    return {\n        \"sampleId\":this.sampleId,\n        \"type\":\"\",\n        \"bondType\":\"\",\n        \"description\":\"\",\n        \"files\":[],\n        \"associatedElementA\":{\n            \"compositionType\":\"\",\n            \"entityId\":\"\",\n            \"entityDisplayName\":\"\",\n            \"composingElement\":{\n                \"id\":\"\"\n            }\n        },\n        \"associatedElementB\":{\n            \"compositionType\":\"\",\n            \"entityId\":\"\",\n            \"entityDisplayName\":\"\",\n            \"composingElement\":{\n                \"id\":\"\"\n            }\n        }\n    }\n};\n\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field,currentValue) {\n        this.currentDropdownValues[field]=currentValue;\n    };\n\n// save other value //\nsaveOther(newItem: Object) {\n    if (newItem['change'] && newItem['value']) {\n        this.addDropdownItem(newItem['array'],newItem['value']);\n        this.setValue(newItem['field'],newItem['value']);\n    }\n    else {\n        this.setValue(newItem['field'],newItem['value']);\n    }\n};\n\nchangeEntityId(compositionType,entity, val) {\n    // no need to do anything if functionalizing entity //\n    if (entity=='nanomaterial entity') {\n        if (compositionType==='compositionTypeA') {\n            this.data.assoentityDisplayName;\n            let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_COMPOSING_ELEMENTS_BY_NANO_ID+'?id='+val,{});\n            url.subscribe( data => {\n                this.composingElementOptionsA=data;\n                this.errors={};\n            },\n            err => {\n                this.errors=err;\n            });\n        }\n        else {\n            let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_COMPOSING_ELEMENTS_BY_NANO_ID+'?id='+val,{});\n            url.subscribe( data => {\n                this.composingElementOptionsB=data;\n                this.errors={};\n            },\n            err => {\n                this.errors=err;\n            });\n        }\n    };\n\n    if (compositionType=='compositionTypeA') {\n        this.entityOptionsA.forEach(element => {\n            if (element.domainId==val) {\n                this.data.associatedElementA.entityDisplayName=element.displayName;\n            }\n        });\n    }\n    else {\n        this.entityOptionsB.forEach(element => {\n            if (element.domainId==val) {\n                this.data.associatedElementB.entityDisplayName=element.displayName;\n            }\n        });\n    }\n}\n\nchangeCompositionType(compositionType,val,edit) {\n\n    if (compositionType==='compositionTypeA') {\n        this.entityOptionsA = val=='nanomaterial entity' ? this.nanomaterialEntityOptions:this.functionalizingEntityOptions;\n        if (!edit) {\n            this.data['associatedElementA']['entityId']=''\n            this.data['associatedElementA']['entityDisplayName']=''\n            this.data['associatedElementA']['composingElement']={'id':''}\n        }\n\n    }\n    else {\n        this.entityOptionsB = val=='nanomaterial entity' ? this.nanomaterialEntityOptions:this.functionalizingEntityOptions;\n        if (!edit) {\n            this.data['associatedElementB']['entityId']=''\n            this.data['associatedElementB']['entityDisplayName']=''\n            this.data['associatedElementB']['composingElement']={'id':''}\n        }\n\n    }\n}\n\ndeleteChemicalAssociation() {\n    if (confirm(\"Are you sure you want to delete this functionalizing entity?\")) {\n        let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_DELETE,this.data);\n        url.subscribe( data => {\n            this.router.navigate( ['home/samples/composition', this.sampleId] );\n            this.errors={};\n        },\n        err => {\n            this.errors=err;\n        });\n    }\n}\n\nresetChemicalAssociation() {\n    this.resetStatus=true;\n    this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n}\n\nsubmitChemicalAssociation() {\n    let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_SAVE,this.data);\n    url.subscribe( data => {\n        this.router.navigate( ['home/samples/composition', this.sampleId] );\n        this.errors={};\n    },\n    err => {\n        this.errors=err;\n    });\n}\n\nselectAssociatedElement(entityId,domainId) {\n    return entityId==domainId ? true:false;\n}\n\nloadDropdowns() {\n    this.changeEntityId('compositionTypeA',this.data.associatedElementA.compositionType,this.data.associatedElementA.entityId)\n    this.changeEntityId('compositionTypeB',this.data.associatedElementB.compositionType,this.data.associatedElementB.entityId)\n    this.changeCompositionType('compositionTypeA',this.data.associatedElementA.compositionType,true)\n    this.changeCompositionType('compositionTypeB',this.data.associatedElementB.compositionType,true)\n\n}\n\nloadSetupData() {\n    let getUrl = this.apiService.doGet(Consts.QUERY_CHEMICAL_ASSOCIATION_SETUP,'sampleId='+this.sampleId);\n    getUrl.subscribe( data => {\n        this.setupData = data;\n        let nanoUrl = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_ASSOCIATED_ELEMENT_OPTIONS+'?compositionType=nanomaterial entity',{});\n        nanoUrl.subscribe( data => {\n            let functionalizingUrl = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_ASSOCIATED_ELEMENT_OPTIONS+'?compositionType=functionalizing entity',{});\n            this.nanomaterialEntityOptions=data;\n            functionalizingUrl.subscribe( data => {\n                this.errors={};\n                this.functionalizingEntityOptions=data;\n                if (this.dataId) {\n                    this.loadDropdowns();\n                }\n                Properties.SAMPLE_TOOLS = true;\n\n            },\n            err => {\n                this.errors=err;\n            });\n        },\n        err => {\n            this.errors=err;\n        });\n    },\n    err => {\n        this.errors=err;\n    });\n}\n\nchangeFile(newItem:Object) {\n    if (newItem['type']=='save'||newItem['type']=='delete') {\n        this.data=newItem['data'];\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n    }\n}\n\n\n\n\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\" [toolHeadingName]=\"toolHeadingNameManage\">\n\n</canano-main-display-heading>\n<div class=\"error\" *ngIf=\"errors['error']\">\n    {{errors['error']}}\n</div>\n<div class=\"error\" *ngIf=\"message\">\n    {{message}}\n</div>\n<div class=\"mainSection\" *ngIf=\"setupData\">\n    <form action=\"\" method=\"get\">\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr *ngIf=\"!dataId\">\n                <td class=\"label\">\n                    <label for=\"associationType\">Association Type*</label>\n                </td>\n                <td>\n                    <select (ngModelChange)=\"addOtherValue('type',data.type)\" id=\"associationType\" [(ngModel)]=\"data.type\" name=\"associationType\">\n                        <option value=\"\" [selected]=\"data.type===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['chemicalAssociationTypes']\" [selected]=\"data.type===type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                        <option value=\"[other]\">[other]</option>\n\n                    </select>\n                    <div *ngIf=\"data.type ==='[other]'\">\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Association Type'\" [value]=\"currentDropdownValues['type']\" [field]=\"'data.type'\" [array]=\"'setupData.chemicalAssociationTypes'\">\n\n                        </canano-other-dropdown>\n                    </div>\n                </td>\n            </tr>\n            <tr *ngIf=\"data.type==='attachment'\">\n                <td class=\"label\">\n                    <label for=\"bondType\">Bond Type*</label>\n                </td>\n                <td>\n                    <select id=\"associationType\" [(ngModel)]=\"data.bondType\" name=\"bondType\">\n                        <option value=\"\" [selected]=\"data.bondType===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['bondTypes']\" [selected]=\"data.bondType===type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"description\">Description</label>\n                </td>\n                <td>\n                    <textarea id=\"description\" name=\"description\" [(ngModel)]=\"data.description\" rows=\"3\" cols=\"65\">\n                        {{data.description}}\n                    </textarea>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    <label for=\"compositionTypeA\">Element*</label>\n                </td>\n                <td>\n                    <img src=\"assets/images/arrow_left_right_gray.gif\">\n                </td>\n                <td class=\"label\">\n                    <label for=\"compositionTypeB\">Element*</label>\n                </td>\n            </tr>\n            <tr *ngIf=\"nanomaterialEntityOptions.length && functionalizingEntityOptions.length\">\n                <td>\n                    <ng-container *ngIf=\"data['associatedElementA']\">\n                    <div>\n                        <select (ngModelChange)=\"changeCompositionType('compositionTypeA',$event,false)\" id=\"compositionTypeA\" [(ngModel)]=\"data.associatedElementA.compositionType\" name=\"compositionTypeA\">\n                            <option value=\"\" [selected]=\"data.associatedElementA.compositionType===''\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['associationCompositionTypes']\" [selected]=\"data.associatedElementA.compositionType===type\" value=\"{{type}}\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"element\" *ngIf=\"entityOptionsA.length && data.associatedElementA.compositionType\">\n                        <select (ngModelChange)=\"changeEntityId('compositionTypeA',data.associatedElementA.compositionType,$event)\" id=\"entityIdA\" name=\"entityIdA\" [(ngModel)]=\"data.associatedElementA.entityId\">\n                            <option value=\"\" [selected]=\"data.associatedElementA.entityId===''\">--Select--</option>\n                            <option *ngFor=\"let type of entityOptionsA\" [ngValue]=\"type.domainId\" [selected]=\"type.domainId==data.associatedElementA.entityId\">\n                                    {{type.type}}\n                                    <ng-container *ngIf=\"data.associatedElementA.compositionType=='functionalizing entity'\">\n                                        {{type.displayName}}\n                                    </ng-container>\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"element\" *ngIf=\"data.associatedElementA.compositionType && data.associatedElementA.compositionType=='nanomaterial entity' && data.associatedElementA.entityId\">\n\n                        <select id=\"composingElementIdA\" name=\"composingElementIdA\" [(ngModel)]=\"data.associatedElementA.composingElement.id\">\n                            <option value=\"\" [selected]=\"data.associatedElementA.composingElement.id===''\">--Select--</option>\n                            <option *ngFor=\"let type of composingElementOptionsA\" [ngValue]=\"type.id\">\n                                {{type.type}} (name:{{type.name}})\n                            </option>\n                        </select>\n                    </div>\n                    </ng-container>\n                </td>\n                <td>associated with</td>\n                <td>\n                    <ng-container *ngIf=\"data['associatedElementB']\">\n                        <div>\n                            <select (ngModelChange)=\"changeCompositionType('compositionTypeB',$event,false)\" id=\"compositionTypeB\" [(ngModel)]=\"data.associatedElementB.compositionType\" name=\"compositionTypeB\">\n                                <option value=\"\" [selected]=\"data.associatedElementB.compositionType===''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['associationCompositionTypes']\" [selected]=\"data.associatedElementB.compositionType===type\" value=\"{{type}}\">\n                                    {{type}}\n                                </option>\n                            </select>\n                        </div>\n                        <div class=\"element\" *ngIf=\"entityOptionsB.length && data.associatedElementB.compositionType\">\n                            <select (ngModelChange)=\"changeEntityId('compositionTypeB',data.associatedElementB.compositionType,$event)\" id=\"entityIdB\" name=\"entityIdB\" [(ngModel)]=\"data.associatedElementB.entityId\">\n                                <option value=\"\" [selected]=\"data.associatedElementB.entityId===''\">--Select--</option>\n                                <option *ngFor=\"let type of entityOptionsB\" [ngValue]=\"type.domainId\" [selected]=\"type.domainId==data.associatedElementB.entityId\">\n                                        {{type.type}}\n                                        <ng-container *ngIf=\"data.associatedElementB.compositionType=='functionalizing entity'\">\n                                            {{type.displayName}}\n                                        </ng-container>\n                                </option>\n                            </select>\n                        </div>\n                        <div class=\"element\" *ngIf=\"data.associatedElementB.compositionType && data.associatedElementB.compositionType=='nanomaterial entity' && data.associatedElementB.entityId\">\n\n                            <select id=\"composingElementIdB\" name=\"composingElementIdB\" [(ngModel)]=\"data.associatedElementB.composingElement.id\">\n                                <option value=\"\" [selected]=\"data.associatedElementB.composingElement.id===''\">--Select--</option>\n                                <option *ngFor=\"let type of composingElementOptionsB\" [ngValue]=\"type.id\">\n                                    {{type.type}} (name:{{type.name}})\n                                </option>\n                            </select>\n                        </div>\n                        </ng-container>\n\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    File\n                </td>\n                <td>\n                    <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\" (changeFile)=\"changeFile($event)\" [saveUrl]=\"consts.QUERY_CHEMICAL_ASSOCIATION_SAVE_FILE\" [deleteUrl]=\"QUERY_CHEMICAL_ASSOCIATION_REMOVE_FILE\" [fileVariable]=\"'simpleFile'\" [sampleId]=\"sampleId\" [data]=\"data\" [fileArray]=\"'files'\">\n\n                    </canano-file>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div>\n        <table class=\"dataMain submit\">\n            <tr>\n                <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                    <button (click)=\"deleteChemicalAssociation()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                </td>\n                <td>\n                    <button (click)=\"resetChemicalAssociation()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                    <button [disabled]=\"isSubmissionValid()\" (click)=\"submitChemicalAssociation()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChemicalassociationComponent } from './chemicalassociation.component';\nconst routes: Routes = [{ path: '', component: ChemicalassociationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChemicalassociationRoutingModule { }\n"],"sourceRoot":"webpack:///"}