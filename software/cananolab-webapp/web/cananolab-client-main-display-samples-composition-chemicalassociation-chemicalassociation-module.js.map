{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.module.ts","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.component.ts","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.component.html","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-composition-chemicalassociation-chemicalassociation-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChemicalassociationComponent } from './chemicalassociation.component';\r\nimport { ChemicalassociationRoutingModule } from './chemicalassociation-routing.module';\r\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\r\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [ChemicalassociationComponent],\r\n    imports: [\r\n      CommonModule,\r\n      ChemicalassociationRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      OtherDropdownModule,\r\n      FileModule\r\n    ]\r\n  })\r\nexport class ChemicalassociationModule { }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Properties } from '../../../../../../assets/properties';\r\nimport { Consts } from '../../../../../constants';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { NavigationService } from '../../../../common/services/navigation.service';\r\nimport { ApiService } from '../../../../common/services/api.service';\r\n@Component({\r\n  selector: 'canano-chemicalassociation',\r\n  templateUrl: './chemicalassociation.component.html',\r\n  styleUrls: ['../../../../../btn-bravo-canano.scss','./chemicalassociation.component.scss']\r\n})\r\nexport class ChemicalassociationComponent implements OnInit {\r\n  sampleId = Properties.CURRENT_SAMPLE_ID;\r\n  consts=Consts;\r\n  dataId;\r\n  sampleName = Properties.CURRENT_SAMPLE_NAME;\r\n  helpUrl =  Consts.HELP_URL_SAMPLE_COMPOSITION;\r\n  toolHeadingNameManage = 'Sample Composition';\r\n  data;\r\n  dataTrailer;\r\n  errors={};\r\n  fileIndex;\r\n  message;\r\n  nanomaterialEntityOptions;\r\n  functionalizingEntityOptions;\r\n  composingElementOptionsA;\r\n  composingElementOptionsB;\r\n  dataLoaded;\r\n  entityOptionsA;\r\n  entityOptionsB;\r\n  resetStatus=false;\r\n  setupData;\r\n  currentDropdownValues;\r\n  currentField;\r\n    constructor( private apiService:ApiService,private navigationService:NavigationService,private router: Router, private route: ActivatedRoute ){\r\n    }\r\n\r\n\r\n    ngOnInit(): void{\r\n        this.navigationService.setCurrentSelectedItem(1);\r\n        this.currentDropdownValues = {};\r\n        this.entityOptionsA = [];\r\n        this.entityOptionsB = [];\r\n        this.composingElementOptionsA = [];\r\n        this.composingElementOptionsB = [];\r\n        this.nanomaterialEntityOptions = [];\r\n        this.functionalizingEntityOptions = [];\r\n\r\n        this.data = this.setDefaultDataSet();\r\n        this.dataTrailer = this.setDefaultDataSet();\r\n      this.route.params.subscribe(\r\n          ( params: Params ) => {\r\n            this.sampleId = params['sampleId'];\r\n            this.dataId = params['dataId'];\r\n\r\n            if(\r\n                  this.sampleId <= 0 ){\r\n                  this.sampleId = Properties.CURRENT_SAMPLE_ID;\r\n              }else{\r\n                  Properties.CURRENT_SAMPLE_ID = this.sampleId;\r\n              };\r\n              this.apiService.getSampleName(this.sampleId).subscribe(\r\n                data=>this.toolHeadingNameManage='Edit ' +data['sampleName'] + ' Chemical Association'\r\n            )\r\n              if (this.dataId) {\r\n                this.data = this.getdata().subscribe(\r\n                    data => {\r\n                        Properties.SAMPLE_TOOLS = true;\r\n                        this.data = data;\r\n                        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\r\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\r\n                        this.loadSetupData();\r\n                        this.errors={};\r\n                    },\r\n                    error=>{\r\n                        Properties.SAMPLE_TOOLS = true;\r\n                        this.errors=error;\r\n                    } );\r\n              }\r\n              else {\r\n                  this.loadSetupData();\r\n                  Properties.SAMPLE_TOOLS = true;\r\n\r\n              }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n      );\r\n  }\r\n\r\n  getError(error:Object) {\r\n    this.errors=error;\r\n}\r\n\r\n  getdata(){\r\n    let getUrl = Consts.QUERY_CHEMICAL_ASSOCIATION_EDIT;\r\n\r\n    if( Properties.DEBUG_CURL ){\r\n        let curl = 'curl  -k \\'' + getUrl + '\\'';\r\n    }\r\n\r\n    let headers = new HttpHeaders( {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n    } );\r\n\r\n    let options = {\r\n        headers: headers,\r\n        method: 'get',\r\n    };\r\n\r\n    let results;\r\n    try{\r\n        results = this.apiService.doGet(getUrl,'sampleId='+this.sampleId+'&dataId='+this.dataId);\r\n    }catch( e ){\r\n        // TODO react to error.\r\n        this.errors=e;\r\n        console.error( 'doGet Exception: ' + e );\r\n    }\r\n    return results;\r\n\r\n}\r\n\r\nisSubmissionValid() {\r\n    if (this.data.type=='') {\r\n        return true\r\n    }\r\n    if (this.data.type=='attachment'&&this.data.bondType=='') {\r\n        return true\r\n    }\r\n    let AKeys=Object.keys(this.data['associatedElementA']);\r\n    let BKeys=Object.keys(this.data['associatedElementB']);\r\n    let ACount=[];\r\n    let BCount=[];\r\n\r\n    AKeys.forEach(item=> {\r\n        if (this.data['associatedElementA'][item]=='') {\r\n            ACount.push(item)\r\n        }\r\n        if (this.data['associatedElementA']['compositionType']=='nanomaterial entity') {\r\n            if (this.data['associatedElementA']['composingElement']['id']=='') {\r\n                ACount.push(item)\r\n            }\r\n        }\r\n    })\r\n    BKeys.forEach(item=> {\r\n        if (this.data['associatedElementB'][item]=='') {\r\n            BCount.push(item)\r\n        }\r\n        if (this.data['associatedElementB']['compositionType']=='nanomaterial entity') {\r\n            if (this.data['associatedElementB']['composingElement']['id']=='') {\r\n                BCount.push(item)\r\n            }\r\n        }\r\n    })\r\n    if (ACount.length||BCount.length) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\nsetDefaultDataSet() {\r\n    return {\r\n        \"sampleId\":this.sampleId,\r\n        \"type\":\"\",\r\n        \"bondType\":\"\",\r\n        \"description\":\"\",\r\n        \"files\":[],\r\n        \"associatedElementA\":{\r\n            \"compositionType\":\"\",\r\n            \"entityId\":\"\",\r\n            \"entityDisplayName\":\"\",\r\n            \"composingElement\":{\r\n                \"id\":\"\"\r\n            }\r\n        },\r\n        \"associatedElementB\":{\r\n            \"compositionType\":\"\",\r\n            \"entityId\":\"\",\r\n            \"entityDisplayName\":\"\",\r\n            \"composingElement\":{\r\n                \"id\":\"\"\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n    // set pointer fields to old values when adding other //\r\n    addOtherValue(field,currentValue) {\r\n        this.currentDropdownValues[field]=currentValue;\r\n    };\r\n\r\n// save other value //\r\nsaveOther(newItem: Object) {\r\n    if (newItem['change'] && newItem['value']) {\r\n        this.addDropdownItem(newItem['array'],newItem['value']);\r\n        this.setValue(newItem['field'],newItem['value']);\r\n    }\r\n    else {\r\n        this.setValue(newItem['field'],newItem['value']);\r\n    }\r\n};\r\n\r\nchangeEntityId(compositionType,entity, val) {\r\n    // no need to do anything if functionalizing entity //\r\n    if (entity=='nanomaterial entity') {\r\n        if (compositionType==='compositionTypeA') {\r\n            this.data.assoentityDisplayName;\r\n            let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_COMPOSING_ELEMENTS_BY_NANO_ID+'?id='+val,{});\r\n            url.subscribe( data => {\r\n                this.composingElementOptionsA=data;\r\n                this.errors={};\r\n            },\r\n            err => {\r\n                this.errors=err;\r\n            });\r\n        }\r\n        else {\r\n            let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_COMPOSING_ELEMENTS_BY_NANO_ID+'?id='+val,{});\r\n            url.subscribe( data => {\r\n                this.composingElementOptionsB=data;\r\n                this.errors={};\r\n            },\r\n            err => {\r\n                this.errors=err;\r\n            });\r\n        }\r\n    };\r\n\r\n    if (compositionType=='compositionTypeA') {\r\n        this.entityOptionsA.forEach(element => {\r\n            if (element.domainId==val) {\r\n                this.data.associatedElementA.entityDisplayName=element.displayName;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        this.entityOptionsB.forEach(element => {\r\n            if (element.domainId==val) {\r\n                this.data.associatedElementB.entityDisplayName=element.displayName;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nchangeCompositionType(compositionType,val,edit) {\r\n\r\n    if (compositionType==='compositionTypeA') {\r\n        this.entityOptionsA = val=='nanomaterial entity' ? this.nanomaterialEntityOptions:this.functionalizingEntityOptions;\r\n        if (!edit) {\r\n            this.data['associatedElementA']['entityId']=''\r\n            this.data['associatedElementA']['entityDisplayName']=''\r\n            this.data['associatedElementA']['composingElement']={'id':''}\r\n        }\r\n\r\n    }\r\n    else {\r\n        this.entityOptionsB = val=='nanomaterial entity' ? this.nanomaterialEntityOptions:this.functionalizingEntityOptions;\r\n        if (!edit) {\r\n            this.data['associatedElementB']['entityId']=''\r\n            this.data['associatedElementB']['entityDisplayName']=''\r\n            this.data['associatedElementB']['composingElement']={'id':''}\r\n        }\r\n\r\n    }\r\n}\r\n\r\ndeleteChemicalAssociation() {\r\n    if (confirm(\"Are you sure you want to delete this functionalizing entity?\")) {\r\n        let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_DELETE,this.data);\r\n        url.subscribe( data => {\r\n            this.router.navigate( ['home/samples/composition', this.sampleId] );\r\n            this.errors={};\r\n        },\r\n        err => {\r\n            this.errors=err;\r\n        });\r\n    }\r\n}\r\n\r\nresetChemicalAssociation() {\r\n    this.resetStatus=true;\r\n    this.data = JSON.parse(JSON.stringify(this.dataTrailer));\r\n}\r\n\r\nsubmitChemicalAssociation() {\r\n    let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_SAVE,this.data);\r\n    url.subscribe( data => {\r\n        this.router.navigate( ['home/samples/composition', this.sampleId] );\r\n        this.errors={};\r\n    },\r\n    err => {\r\n        this.errors=err;\r\n    });\r\n}\r\n\r\nselectAssociatedElement(entityId,domainId) {\r\n    return entityId==domainId ? true:false;\r\n}\r\n\r\nloadDropdowns() {\r\n    this.changeEntityId('compositionTypeA',this.data.associatedElementA.compositionType,this.data.associatedElementA.entityId)\r\n    this.changeEntityId('compositionTypeB',this.data.associatedElementB.compositionType,this.data.associatedElementB.entityId)\r\n    this.changeCompositionType('compositionTypeA',this.data.associatedElementA.compositionType,true)\r\n    this.changeCompositionType('compositionTypeB',this.data.associatedElementB.compositionType,true)\r\n\r\n}\r\n\r\nloadSetupData() {\r\n    let getUrl = this.apiService.doGet(Consts.QUERY_CHEMICAL_ASSOCIATION_SETUP,'sampleId='+this.sampleId);\r\n    getUrl.subscribe( data => {\r\n        this.setupData = data;\r\n        let nanoUrl = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_ASSOCIATED_ELEMENT_OPTIONS+'?compositionType=nanomaterial entity',{});\r\n        nanoUrl.subscribe( data => {\r\n            let functionalizingUrl = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_ASSOCIATED_ELEMENT_OPTIONS+'?compositionType=functionalizing entity',{});\r\n            this.nanomaterialEntityOptions=data;\r\n            functionalizingUrl.subscribe( data => {\r\n                this.errors={};\r\n                this.functionalizingEntityOptions=data;\r\n                if (this.dataId) {\r\n                    this.loadDropdowns();\r\n                }\r\n                Properties.SAMPLE_TOOLS = true;\r\n\r\n            },\r\n            err => {\r\n                this.errors=err;\r\n            });\r\n        },\r\n        err => {\r\n            this.errors=err;\r\n        });\r\n    },\r\n    err => {\r\n        this.errors=err;\r\n    });\r\n}\r\n\r\nchangeFile(newItem:Object) {\r\n    if (newItem['type']=='save'||newItem['type']=='delete') {\r\n        this.data=newItem['data'];\r\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n","<canano-main-display-heading [helpUrl]=\"helpUrl\" [toolHeadingName]=\"toolHeadingNameManage\">\r\n\r\n</canano-main-display-heading>\r\n<div class=\"error\" *ngIf=\"errors['error']\">\r\n    {{errors['error']}}\r\n</div>\r\n<div class=\"error\" *ngIf=\"message\">\r\n    {{message}}\r\n</div>\r\n<div class=\"mainSection\" *ngIf=\"setupData\">\r\n    <form action=\"\" method=\"get\">\r\n    <div class=\"mainBorder\">\r\n        <table class=\"dataMain\">\r\n            <tr *ngIf=\"!dataId\">\r\n                <td class=\"label\">\r\n                    <label for=\"associationType\">Association Type*</label>\r\n                </td>\r\n                <td>\r\n                    <select (ngModelChange)=\"addOtherValue('type',data.type)\" id=\"associationType\" [(ngModel)]=\"data.type\" name=\"associationType\">\r\n                        <option value=\"\" [selected]=\"data.type===''\">--Select--</option>\r\n                        <option *ngFor=\"let type of setupData['chemicalAssociationTypes']\" [selected]=\"data.type===type\" value=\"{{type}}\">\r\n                            {{type}}\r\n                        </option>\r\n                        <option value=\"[other]\">[other]</option>\r\n\r\n                    </select>\r\n                    <div *ngIf=\"data.type ==='[other]'\">\r\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Association Type'\" [value]=\"currentDropdownValues['type']\" [field]=\"'data.type'\" [array]=\"'setupData.chemicalAssociationTypes'\">\r\n\r\n                        </canano-other-dropdown>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"data.type==='attachment'\">\r\n                <td class=\"label\">\r\n                    <label for=\"bondType\">Bond Type*</label>\r\n                </td>\r\n                <td>\r\n                    <select id=\"associationType\" [(ngModel)]=\"data.bondType\" name=\"bondType\">\r\n                        <option value=\"\" [selected]=\"data.bondType===''\">--Select--</option>\r\n                        <option *ngFor=\"let type of setupData['bondTypes']\" [selected]=\"data.bondType===type\" value=\"{{type}}\">\r\n                            {{type}}\r\n                        </option>\r\n                    </select>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"description\">Description</label>\r\n                </td>\r\n                <td>\r\n                    <textarea id=\"description\" name=\"description\" [(ngModel)]=\"data.description\" rows=\"3\" cols=\"65\">\r\n                        {{data.description}}\r\n                    </textarea>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div><br />\r\n    <div class=\"mainBorder\">\r\n        <table class=\"dataMain\">\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"compositionTypeA\">Element*</label>\r\n                </td>\r\n                <td>\r\n                    <img src=\"assets/images/arrow_left_right_gray.gif\">\r\n                </td>\r\n                <td class=\"label\">\r\n                    <label for=\"compositionTypeB\">Element*</label>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"nanomaterialEntityOptions.length && functionalizingEntityOptions.length\">\r\n                <td>\r\n                    <ng-container *ngIf=\"data['associatedElementA']\">\r\n                    <div>\r\n                        <select (ngModelChange)=\"changeCompositionType('compositionTypeA',$event,false)\" id=\"compositionTypeA\" [(ngModel)]=\"data.associatedElementA.compositionType\" name=\"compositionTypeA\">\r\n                            <option value=\"\" [selected]=\"data.associatedElementA.compositionType===''\">--Select--</option>\r\n                            <option *ngFor=\"let type of setupData['associationCompositionTypes']\" [selected]=\"data.associatedElementA.compositionType===type\" value=\"{{type}}\">\r\n                                {{type}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"element\" *ngIf=\"entityOptionsA.length && data.associatedElementA.compositionType\">\r\n                        <select (ngModelChange)=\"changeEntityId('compositionTypeA',data.associatedElementA.compositionType,$event)\" id=\"entityIdA\" name=\"entityIdA\" [(ngModel)]=\"data.associatedElementA.entityId\">\r\n                            <option value=\"\" [selected]=\"data.associatedElementA.entityId===''\">--Select--</option>\r\n                            <option *ngFor=\"let type of entityOptionsA\" [ngValue]=\"type.domainId\" [selected]=\"type.domainId==data.associatedElementA.entityId\">\r\n                                    {{type.type}}\r\n                                    <ng-container *ngIf=\"data.associatedElementA.compositionType=='functionalizing entity'\">\r\n                                        {{type.displayName}}\r\n                                    </ng-container>\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"element\" *ngIf=\"data.associatedElementA.compositionType && data.associatedElementA.compositionType=='nanomaterial entity' && data.associatedElementA.entityId\">\r\n\r\n                        <select id=\"composingElementIdA\" name=\"composingElementIdA\" [(ngModel)]=\"data.associatedElementA.composingElement.id\">\r\n                            <option value=\"\" [selected]=\"data.associatedElementA.composingElement.id===''\">--Select--</option>\r\n                            <option *ngFor=\"let type of composingElementOptionsA\" [ngValue]=\"type.id\">\r\n                                {{type.type}} (name:{{type.name}})\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    </ng-container>\r\n                </td>\r\n                <td>associated with</td>\r\n                <td>\r\n                    <ng-container *ngIf=\"data['associatedElementB']\">\r\n                        <div>\r\n                            <select (ngModelChange)=\"changeCompositionType('compositionTypeB',$event,false)\" id=\"compositionTypeB\" [(ngModel)]=\"data.associatedElementB.compositionType\" name=\"compositionTypeB\">\r\n                                <option value=\"\" [selected]=\"data.associatedElementB.compositionType===''\">--Select--</option>\r\n                                <option *ngFor=\"let type of setupData['associationCompositionTypes']\" [selected]=\"data.associatedElementB.compositionType===type\" value=\"{{type}}\">\r\n                                    {{type}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"element\" *ngIf=\"entityOptionsB.length && data.associatedElementB.compositionType\">\r\n                            <select (ngModelChange)=\"changeEntityId('compositionTypeB',data.associatedElementB.compositionType,$event)\" id=\"entityIdB\" name=\"entityIdB\" [(ngModel)]=\"data.associatedElementB.entityId\">\r\n                                <option value=\"\" [selected]=\"data.associatedElementB.entityId===''\">--Select--</option>\r\n                                <option *ngFor=\"let type of entityOptionsB\" [ngValue]=\"type.domainId\" [selected]=\"type.domainId==data.associatedElementB.entityId\">\r\n                                        {{type.type}}\r\n                                        <ng-container *ngIf=\"data.associatedElementB.compositionType=='functionalizing entity'\">\r\n                                            {{type.displayName}}\r\n                                        </ng-container>\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"element\" *ngIf=\"data.associatedElementB.compositionType && data.associatedElementB.compositionType=='nanomaterial entity' && data.associatedElementB.entityId\">\r\n\r\n                            <select id=\"composingElementIdB\" name=\"composingElementIdB\" [(ngModel)]=\"data.associatedElementB.composingElement.id\">\r\n                                <option value=\"\" [selected]=\"data.associatedElementB.composingElement.id===''\">--Select--</option>\r\n                                <option *ngFor=\"let type of composingElementOptionsB\" [ngValue]=\"type.id\">\r\n                                    {{type.type}} (name:{{type.name}})\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        </ng-container>\r\n\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div><br />\r\n    <div class=\"mainBorder\">\r\n        <table class=\"dataMain\">\r\n            <tr>\r\n                <td class=\"label\">\r\n                    File\r\n                </td>\r\n                <td>\r\n                    <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\" (changeFile)=\"changeFile($event)\" [saveUrl]=\"consts.QUERY_CHEMICAL_ASSOCIATION_SAVE_FILE\" [deleteUrl]=\"QUERY_CHEMICAL_ASSOCIATION_REMOVE_FILE\" [fileVariable]=\"'simpleFile'\" [sampleId]=\"sampleId\" [data]=\"data\" [fileArray]=\"'files'\">\r\n\r\n                    </canano-file>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div><br />\r\n    <div>\r\n        <table class=\"dataMain submit\">\r\n            <tr>\r\n                <td *ngIf=\"dataId\" style=\"text-align:left;\">\r\n                    <button (click)=\"deleteChemicalAssociation()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\r\n                </td>\r\n                <td>\r\n                    <button (click)=\"resetChemicalAssociation()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\r\n                    <button [disabled]=\"isSubmissionValid()\" (click)=\"submitChemicalAssociation()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChemicalassociationComponent } from './chemicalassociation.component';\r\nconst routes: Routes = [{ path: '', component: ChemicalassociationComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChemicalassociationRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}