{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACA;AAKC;;;;;;;;ICC/C,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,kGACJ;;;;IAgCwB,6EACI;IADkD,oWAA8B;IAChF,uDACJ;IAAA,4DAAS;;;IAFD,0EAAc;IAClB,0DACJ;IADI,iFACJ;;AD/BrB,MAAM,mBAAmB;IAY5B,YAAqB,cAA6B,EAAS,UAAsB,EAAU,MAAc;QAApF,mBAAc,GAAd,cAAc,CAAe;QAAS,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAVzG,YAAO,GAAG,iDAAM,CAAC,oBAAoB,CAAC;QACtC,gCAA2B,GAAG,aAAa,CAAC;QAE5C,eAAU,GAAG,EAAE,CAAC;QAEhB,kBAAa,GAAG,EAAE,CAAC;QACnB,WAAM,GAAC,EAAE,CAAC;QAEV,kBAAa,GAAG,KAAK,CAAC;IAGtB,CAAC;IAED,QAAQ;QACJ,UAAU,CAAC,GAAE,EAAE;YACX,gEAAU,CAAC,YAAY,GAAG,KAAK,CAAC;QACpC,CAAC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,GAAE;YACvC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iDAAM,CAAC,4BAA4B,EAAC,WAAW,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;oBACjG,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,YAAY,CAAC;gBACtC,CAAC,CAAC;aACL;QACL,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAE,iDAAM,CAAC,sBAAsB,EAAE,EAAE,CAAE,CAAC,SAAS,CAChE,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC,EACD,CAAE,GAAG,EAAG,EAAE;YACN,OAAO,CAAC,GAAG,CAAE,yDAAyD,EAAE,GAAG,CAAE,CAAC;QAClF,CAAC,CACJ,CAAC;IACN,CAAC;IAED,aAAa;QACT,IAAI,CAAC,aAAa,GAAG,CAAE,IAAI,CAAC,aAAa,CAAC;IAC9C,CAAC;IAED,oBAAoB,CAAE,QAAQ;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAE,QAAQ,CAAE,CAAC,CAAC,CAAE,gCAAgC;IAC/F,CAAC;IAED,gBAAgB,CAAE,EAAE;QAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,KAAK;QACD,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;IAC1B,CAAC;IAED,mBAAmB;QACf,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,iDAAM,CAAC,iBAAiB,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,CAAE,CAAC,SAAS,CAChI,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,CAAC,EACD,CAAE,GAAG,EAAG,EAAE;YACN,IAAI,CAAC,MAAM,GAAC,GAAG,CAAC;QACpB,CAAC,CACJ,CAAC;IACN,CAAC;;sFAnEQ,mBAAmB;mGAAnB,mBAAmB;QCZhC,4FAI8B;QAE9B,yEACI;QAAA,+GAEM;QACN,yEACA;QAAA,2EACI;QAAA,qEACI;QAAA,wEACI;QAAA,2EACI;QAAA,6EACJ;QAAA,4DAAQ;QACZ,4DAAK;QACL,qEACI;QAAA,4EACJ;QADyD,4LAAwB;QAA7E,4DACJ;QAAA,4DAAK;QACT,4DAAK;QACL,sEACI;QAAA,yEACI;QAAA,4EACI;QAAA,yEACJ;QAAA,4DAAQ;QACZ,4DAAK;QACL,sEACI;QAAA,4EACJ;QAD+D,+LAA2B;QAAtF,4DACJ;QAAA,4DAAK;QACT,4DAAK;QACL,sEACI;QAAA,yEACI;QAAA,6EACI;QAAA,8EACJ;QAAA,4DAAQ;QACZ,4DAAK;QACL,sEACI;QAAA,wEACI;QAAA,8EACQ;QADyD,6LAAwB;QACjF,wHAES;QACjB,4DAAS;QACb,4DAAO;QACX,4DAAK;QACT,4DAAK;QACT,4DAAQ;QACZ,4DAAM;QACN,uEACI;QAAA,6EACI;QAAA,sEACI;QAAA,sEACI;QAAA,8EAAkF;QAA1E,4IAAS,WAAO,IAAC;QAAyD,iEAAK;QAAA,4DAAS;QAChG,8EAAkJ;QAAzF,4IAAS,yBAAqB,IAAC;QAA0D,kEAAM;QAAA,4DAAS;QACrK,4DAAK;QACT,4DAAK;QACT,4DAAQ;QACZ,4DAAM;QACN,4DAAM;;QA3DF,gFAAmB;QAMC,0DAAqB;QAArB,qFAAqB;QAYwB,0DAAwB;QAAxB,mFAAwB;QAUlB,0DAA2B;QAA3B,sFAA2B;QAWjB,0DAAwB;QAAxB,mFAAwB;QAC3C,0DAAc;QAAd,oFAAc;QAcxD,0DAAgD;QAAhD,qHAAgD;;6FD3C3D,mBAAmB;cAL/B,uDAAS;eAAE;gBACR,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC9C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACe;AACS;AACkB;AACvB;;AAazD,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBARlB;YACP,4DAAY;YACZ,mFAAuB;YACvB,2FAAY;YACZ,0DAAW;YACX,kEAAmB;SACpB;mIAEU,gBAAgB,mBATZ,0EAAmB,aAEhC,4DAAY;QACZ,mFAAuB;QACvB,2FAAY;QACZ,0DAAW;QACX,kEAAmB;6FAGV,gBAAgB;cAV9B,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,0EAAmB,CAAC;gBACnC,OAAO,EAAE;oBACP,4DAAY;oBACZ,mFAAuB;oBACvB,2FAAY;oBACZ,0DAAW;oBACX,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACjBH;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACO;;;AAC9D,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAmB,EAAE,CAAC,CAAC;AAM/D,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAHzB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,uBAAuB,uFAFxB,4DAAY;6FAEX,uBAAuB;cAJnC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB","file":"cananolab-client-main-display-samples-general-info-sample-copy-sample-copy-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../../constants';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Properties } from 'src/assets/properties';\n@Component( {\n    selector: 'canano-sample-copy',\n    templateUrl: './sample-copy.component.html',\n    styleUrls: ['./sample-copy.component.scss']\n} )\nexport class SampleCopyComponent implements OnInit{\n\n    helpUrl = Consts.HELP_URL_SAMPLE_COPY;\n    toolHeadingNameSearchSample = 'Copy Sample';\n\n    sampleName = '';\n    sampleId;\n    newSampleName = '';\n    errors={};\n    sampleNames;\n    showNamesMenu = false;\n\n    constructor( private activatedRoute:ActivatedRoute,private apiService: ApiService, private router: Router ){\n    }\n\n    ngOnInit(): void{\n        setTimeout(()=> {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.activatedRoute.params.subscribe(data=> {\n            this.sampleId=data['sampleId'];\n            if (this.sampleId) {\n                this.apiService.doGet(Consts.QUERY_SAMPLE_GET_SAMPLE_NAME,'sampleId='+this.sampleId).subscribe(data=> {\n                    this.sampleName=data['sampleName']\n                })\n            }\n        })\n        this.init();\n    }\n\n    init(){\n        this.apiService.doGet( Consts.QUERY_SAMPLE_GET_NAMES, '' ).subscribe(\n            data => {\n                this.sampleNames = data;\n            },\n            ( err ) => {\n                console.log( 'ERROR SampleCopyComponent init QUERY_SAMPLE_GET_NAMES: ', err );\n            }\n        );\n    }\n\n    browseClicked(){\n        this.showNamesMenu = ! this.showNamesMenu;\n    }\n\n    navigateToSampleEdit( sampleId ){\n        this.router.navigate(['home/samples/sample', sampleId ]);  // @FIXME  Don't hard code these\n    }\n\n    selectSampleName( nm ){\n        this.sampleName = nm;\n    }\n\n    reset() {\n        this.sampleName='';\n        this.newSampleName='';\n    }\n\n    onSubmitCopyClicked(){\n        this.apiService.doPost( Consts.QUERY_SAMPLE_COPY, { 'newSampleName': this.newSampleName, 'sampleName': this.sampleName } ).subscribe(\n            data => {\n                this.router.navigate(['home/samples/sample',data.sampleId])\n            },\n            ( err ) => {\n                this.errors=err;\n            }\n        );\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameSearchSample\"\n>\n</canano-main-display-heading>\n\n<div class=\"mainSection\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <div class=\"mainBorder\">\n    <table class=\"dataMain copy\">\n        <tr>\n            <td class=\"label\">\n                <label for=\"sampleName\">\n                    Existing Sample*\n                </label>\n            </td>\n            <td>\n                <input type=\"text\" name=\"sampleName\" id=\"sampleName\" [(ngModel)]=\"sampleName\" size=\"60\">\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                <label for=\"newSampleName\">\n                    New Sample*\n                </label>\n            </td>\n            <td>\n                <input type=\"text\" name=\"newSampleName\" id=\"newSampleName\" [(ngModel)]=\"newSampleName\" size=\"60\">\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                <label for=\"existingSamples\">\n                    Existing Samples\n                </label>\n            </td>\n            <td>\n                <span>\n                    <select class=\"multiple\" name=\"nameMenu\" id=\"nameMenu\" size=\"10\" [(ngModel)]=\"sampleName\">\n                            <option [ngValue]=\"nm\" *ngFor=\"let nm of sampleNames\" (click)=\"selectSampleName(nm)\">\n                                {{nm}}\n                            </option>\n                    </select>\n                </span>\n            </td>\n        </tr>\n    </table>\n</div>\n<div>\n    <table class=\"dataMain submit\">\n        <tr>\n            <td>\n                <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                <button [disabled]=\"sampleName=='' || newSampleName==''\" (click)=\"onSubmitCopyClicked()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n            </td>\n        </tr>\n    </table>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleCopyComponent } from './sample-copy.component';\nimport { SampleCopyRoutingModule } from './sample-copy-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [SampleCopyComponent],\n    imports: [\n      CommonModule,\n      SampleCopyRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class SampleCopyModule { }\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleCopyComponent } from './sample-copy.component';\nconst routes: Routes = [{ path: '', component: SampleCopyComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleCopyRoutingModule { }\n"],"sourceRoot":"webpack:///"}