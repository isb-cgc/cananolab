{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-copy-sample-copy-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Consts } from '../../../../../constants';\r\nimport { ApiService } from '../../../../common/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Properties } from 'src/assets/properties';\r\n@Component( {\r\n    selector: 'canano-sample-copy',\r\n    templateUrl: './sample-copy.component.html',\r\n    styleUrls: ['./sample-copy.component.scss']\r\n} )\r\nexport class SampleCopyComponent implements OnInit{\r\n\r\n    helpUrl = Consts.HELP_URL_SAMPLE_COPY;\r\n    toolHeadingNameSearchSample = 'Copy Sample';\r\n\r\n    sampleName = '';\r\n    sampleId;\r\n    newSampleName = '';\r\n    errors={};\r\n    sampleNames;\r\n    showNamesMenu = false;\r\n\r\n    constructor( private activatedRoute:ActivatedRoute,private apiService: ApiService, private router: Router ){\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        setTimeout(()=> {\r\n            Properties.SAMPLE_TOOLS = false;\r\n        })\r\n        this.activatedRoute.params.subscribe(data=> {\r\n            this.sampleId=data['sampleId'];\r\n            if (this.sampleId) {\r\n                this.apiService.doGet(Consts.QUERY_SAMPLE_GET_SAMPLE_NAME,'sampleId='+this.sampleId).subscribe(data=> {\r\n                    this.sampleName=data['sampleName']\r\n                })\r\n            }\r\n        })\r\n        this.init();\r\n    }\r\n\r\n    init(){\r\n        this.apiService.doGet( Consts.QUERY_SAMPLE_GET_NAMES, '' ).subscribe(\r\n            data => {\r\n                this.sampleNames = data;\r\n            },\r\n            ( err ) => {\r\n                console.log( 'ERROR SampleCopyComponent init QUERY_SAMPLE_GET_NAMES: ', err );\r\n            }\r\n        );\r\n    }\r\n\r\n    browseClicked(){\r\n        this.showNamesMenu = ! this.showNamesMenu;\r\n    }\r\n\r\n    navigateToSampleEdit( sampleId ){\r\n        this.router.navigate(['home/samples/sample', sampleId ]);  // @FIXME  Don't hard code these\r\n    }\r\n\r\n    selectSampleName( nm ){\r\n        this.sampleName = nm;\r\n    }\r\n\r\n    reset() {\r\n        this.sampleName='';\r\n        this.newSampleName='';\r\n    }\r\n\r\n    onSubmitCopyClicked(){\r\n        this.apiService.doPost( Consts.QUERY_SAMPLE_COPY, { 'newSampleName': this.newSampleName, 'sampleName': this.sampleName } ).subscribe(\r\n            data => {\r\n                this.router.navigate(['home/samples/sample',data.sampleId])\r\n            },\r\n            ( err ) => {\r\n                this.errors=err;\r\n            }\r\n        );\r\n    }\r\n}\r\n","<canano-main-display-heading\r\n    [helpUrl]=\"helpUrl\"\r\n    [toolHeadingName]=\"toolHeadingNameSearchSample\"\r\n>\r\n</canano-main-display-heading>\r\n\r\n<div class=\"mainSection\">\r\n    <div class=\"error\" *ngIf=\"errors['error']\">\r\n        {{errors['error']}}\r\n    </div>\r\n    <div class=\"mainBorder\">\r\n    <table class=\"dataMain copy\">\r\n        <tr>\r\n            <td class=\"label\">\r\n                <label for=\"sampleName\">\r\n                    Existing Sample*\r\n                </label>\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" name=\"sampleName\" id=\"sampleName\" [(ngModel)]=\"sampleName\" size=\"60\">\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"label\">\r\n                <label for=\"newSampleName\">\r\n                    New Sample*\r\n                </label>\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" name=\"newSampleName\" id=\"newSampleName\" [(ngModel)]=\"newSampleName\" size=\"60\">\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"label\">\r\n                <label for=\"existingSamples\">\r\n                    Existing Samples\r\n                </label>\r\n            </td>\r\n            <td>\r\n                <span>\r\n                    <select class=\"multiple\" name=\"nameMenu\" id=\"nameMenu\" size=\"10\" [(ngModel)]=\"sampleName\">\r\n                            <option [ngValue]=\"nm\" *ngFor=\"let nm of sampleNames\" (click)=\"selectSampleName(nm)\">\r\n                                {{nm}}\r\n                            </option>\r\n                    </select>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n<div>\r\n    <table class=\"dataMain submit\">\r\n        <tr>\r\n            <td>\r\n                <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\r\n                <button [disabled]=\"sampleName=='' || newSampleName==''\" (click)=\"onSubmitCopyClicked()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SampleCopyComponent } from './sample-copy.component';\r\nimport { SampleCopyRoutingModule } from './sample-copy-routing.module';\r\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    declarations: [SampleCopyComponent],\r\n    imports: [\r\n      CommonModule,\r\n      SampleCopyRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule\r\n    ]\r\n  })\r\n  export class SampleCopyModule { }\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SampleCopyComponent } from './sample-copy.component';\r\nconst routes: Routes = [{ path: '', component: SampleCopyComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SampleCopyRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}