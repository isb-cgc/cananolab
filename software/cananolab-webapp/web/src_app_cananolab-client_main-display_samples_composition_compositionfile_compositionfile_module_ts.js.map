{"version":3,"file":"src_app_cananolab-client_main-display_samples_composition_compositionfile_compositionfile_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/composition/compositionfile/compositionfile-routing.module.ts","./src/app/cananolab-client/main-display/samples/composition/compositionfile/compositionfile.component.ts","./src/app/cananolab-client/main-display/samples/composition/compositionfile/compositionfile.component.html","./src/app/cananolab-client/main-display/samples/composition/compositionfile/compositionfile.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompositionfileComponent } from './compositionfile.component';\nconst routes: Routes = [{ path: '', component: CompositionfileComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompositionfileRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { Router } from '@angular/router';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'canano-compositionfile',\n  templateUrl: './compositionfile.component.html',\n  styleUrls: ['../../../../../btn-bravo-canano.scss','./compositionfile.component.scss']\n})\nexport class CompositionfileComponent implements OnInit {\n    dataId;\n    setupData;\n    data;\n    dataTrailer;\n    errors={};\n    message;\n    theFile;\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleName = Properties.CURRENT_SAMPLE_NAME;\n    helpUrl = Consts.HELP_URL_SAMPLE_COMPOSITION_COMPOSITION_FILE;\n    toolHeadingNameManage = 'Sample ' + this.sampleName + ' Composition File';\n\n  constructor( private httpClient:HttpClient,private apiService:ApiService,private navigationService:NavigationService,private router: Router, private route: ActivatedRoute ){\n  }\n\n    ngOnInit(): void{\n        this.navigationService.setCurrentSelectedItem(1);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n               this.dataId=params['dataId'];\n               this.sampleId=params['sampleId'];\n               if(\n                this.sampleId <= 0 ){\n                this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                };\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data=>this.toolHeadingNameManage='Edit ' +data['sampleName'] + ' Composition File'\n                )\n                let url = this.apiService.doGet(Consts.QUERY_COMPOSITION_FILE_SETUP,'sampleId='+this.sampleId);\n                url.subscribe(data=> {\n                    this.errors={};\n                    Properties.SAMPLE_TOOLS=true;\n                    this.setupData=data;\n                },\n                error=> {\n                    this.errors=error;\n                });\n                if (this.dataId) {\n                    let url = this.apiService.doGet(Consts.QUERY_COMPOSITION_FILE_EDIT,'sampleId='+this.sampleId+'&dataId='+this.dataId);\n                    url.subscribe(data=> {\n                        this.errors={};\n                        this.data=data;\n                        this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n                    },\n                    error=> {\n                        this.errors=error;\n\n                    })\n                }\n                else {\n                    this.setupNewFile();\n                    this.dataTrailer=JSON.parse(JSON.stringify(this.data))\n                }\n               }\n\n        );\n    }\n\n    delete() {\n        if(confirm(\"Are you sure you wish to delete this composition file?\"))\n        {\n            let url = this.apiService.doPost(Consts.QUERY_COMPOSITION_FILE_DELETE,this.data);\n            url.subscribe(data=> {\n                this.errors={};\n                this.router.navigate( ['home/samples/composition', this.sampleId] );\n            },\n            error=> {\n                this.errors=error;\n\n            })\n        }\n    }\n\n    isFileUploadValid() {\n        if (this.data.type!=''&&this.data.title!='') {\n          if (this.data.uriExternal) {\n              if (this.data.externalUrl!='') {\n                  return false;\n              }\n          }\n          if (!this.data.uriExternal) {\n              if (this.theFile) {\n                  return false\n              }\n          }\n        }\n        return true;\n    };\n\n    saveFile() {\n        if (this.data.uriExternal) {\n        let saveUrl = this.apiService.doPost(Consts.QUERY_COMPOSITION_FILE_SAVE,this.data);\n          saveUrl.subscribe(data=> {\n              this.data=data;\n              this.errors={};\n              this.router.navigate( ['home/samples/composition', this.sampleId] );\n          },\n          error=> {\n            this.errors=error;\n        })\n        }\n        else {\n          this.theFile.append('uriExternal',this.data['uriExternal']);\n          this.theFile.append('externalUrl',this.data['externalUrl']);\n          this.theFile.append('type',this.data['type']);\n          this.theFile.append('title',this.data['title']);\n          this.theFile.append('keywordsStr',this.data['keywordsStr']);\n          this.theFile.append('description',this.data['description']);\n          let uploadUrl=this.httpClient.post(Consts.QUERY_UPLOAD_FILE,this.theFile);\n          uploadUrl.subscribe(data=> {\n                this.errors={};\n                this.data['uri']=data['fileName'];\n                let saveUrl = this.apiService.doPost(Consts.QUERY_COMPOSITION_FILE_SAVE,this.data);\n                saveUrl.subscribe(data=> {\n                this.errors={};\n                  this.data=data;\n                  this.router.navigate( ['home/samples/composition', this.sampleId] );\n\n              },\n              error=> {\n                this.errors=error;\n            })\n          },\n          error=> {\n            this.errors=error;\n\n          })\n        }\n        console.log('i am saving')\n    };\n\n    setupNewFile() {\n        this.data={\n            \"uriExternal\": false,\n            \"type\": \"\",\n            \"title\": \"\",\n            \"description\": \"\",\n            \"keywordsStr\": \"\",\n            \"sampleId\": this.sampleId,\n            \"externalUrl\": null\n        }\n    }\n\n    uploadFile(event) {\n        this.theFile = new FormData();\n        const tFile = event.target.files.item(0);\n        this.theFile.append('myFile', tFile, tFile.name);\n      }\n\n    reset() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n    }\n\n\n\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\"\n[toolHeadingName]=\"toolHeadingNameManage\">\n\n</canano-main-display-heading>\n\n\n<div class=\"mainSection\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <div class=\"error\" *ngIf=\"message\">\n        {{message}}\n    </div>\n        <form action=\"\" method=\"get\" name=\"functionalizingEntityForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\" *ngIf=\"data\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"fileUpload\">\n                            Upload&nbsp;\n                        </label>\n                        <input type=\"radio\" name=\"data.uriExternal\" id=\"fileUpload\" [value]=\"false\" [(ngModel)]=\"data.uriExternal\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"fileURL\">\n                            Enter File URL&nbsp;\n                        </label>\n                        <input type=\"radio\" name=\"data.uriExternal\" id=\"fileURL\" [value]=\"true\" [(ngModel)]=\"data.uriExternal\">\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.uriExternal==1\">\n                    <td class=\"label\">\n                        <label for=\"uriExternal\">\n                            File URL*\n                        </label>\n                    </td>\n                    <td>\n                        <input id=\"uriExternal\" *ngIf=\"data.uriExternal==1\" type=\"text\" name=\"data.externalUrl\" [(ngModel)]=\"data.externalUrl\">\n                        [<canano-disclaimer *ngIf=\"data.uriExternal==1\"></canano-disclaimer>]\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.uriExternal==0\">\n                    <td class=\"label\">\n                        <label for=\"file\">\n                            File*\n                        </label>\n                    </td>\n                    <td>\n                        <input id=\"file\" (change)=\"uploadFile($event)\" type=\"file\" name=\"data.uploadFile\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"data.fileType\">\n                            File Type*\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"data.type\" [(ngModel)]=\"data.type\" id=\"data.fileType\">\n                            <option [select]=\"data.type===''\" [ngValue]=\"''\">--Select</option>\n                            <option>document</option>\n                            <option>graph</option>\n                            <option>image</option>\n                            <option>movie</option>\n                            <option>spread sheet</option>\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"data.title\">\n                            File Title*\n                        </label>\n                    </td>\n                    <td>\n                        <input id=\"data.title\" type=\"text\" name=\"data.title\" [(ngModel)]=\"data.title\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"data.keywordsStr\">\n                            Keywords\n                        </label>\n                    </td>\n                    <td>\n                        <textarea id=\"data.keywordsStr\" name=\"data.keywordsStr\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.keywordsStr\">\n                            {{data.keywordsStr}}\n                        </textarea>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"data.description\">\n                            Description\n                        </label>\n                    </td>\n                    <td>\n                        <textarea id=\"data.description\" name=\"data.description\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.description\">\n                            {{data.description}}\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <table class=\"buttons\" *ngIf=\"this.data\">\n            <tr>\n                <td *ngIf=\"dataId\">\n                    <button (click)=\"delete()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                </td>\n                <td class=\"buttons\">\n                    <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                    <button [disabled]=\"isFileUploadValid()\" (click)=\"saveFile()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                </td>\n            </tr>\n        </table>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositionfileComponent } from './compositionfile.component';\nimport { CompositionfileRoutingModule } from './compositionfile-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DisclaimerModule } from 'src/app/cananolab-client/common/components/disclaimer/disclaimer.module';\n\n\n@NgModule({\n    declarations: [CompositionfileComponent],\n    imports: [\n      CommonModule,\n      CompositionfileRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      DisclaimerModule\n    ]\n  })\n  export class CompositionfileModule { }\n"],"names":["RouterModule","CompositionfileComponent","routes","path","component","CompositionfileRoutingModule","forChild","imports","exports","Properties","Consts","i0","constructor","httpClient","apiService","navigationService","router","route","CURRENT_SAMPLE_ID","CURRENT_SAMPLE_NAME","HELP_URL_SAMPLE_COMPOSITION_COMPOSITION_FILE","sampleName","ngOnInit","setCurrentSelectedItem","params","subscribe","dataId","sampleId","getSampleName","data","toolHeadingNameManage","url","doGet","QUERY_COMPOSITION_FILE_SETUP","errors","SAMPLE_TOOLS","setupData","error","QUERY_COMPOSITION_FILE_EDIT","dataTrailer","JSON","parse","stringify","setupNewFile","delete","confirm","doPost","QUERY_COMPOSITION_FILE_DELETE","navigate","isFileUploadValid","type","title","uriExternal","externalUrl","theFile","saveFile","saveUrl","QUERY_COMPOSITION_FILE_SAVE","append","uploadUrl","post","QUERY_UPLOAD_FILE","console","log","uploadFile","event","FormData","tFile","target","files","item","name","reset","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","DisclaimerModule","CompositionfileModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}