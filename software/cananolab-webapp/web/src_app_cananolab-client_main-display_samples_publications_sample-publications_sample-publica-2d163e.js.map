{"version":3,"file":"src_app_cananolab-client_main-display_samples_publications_sample-publications_sample-publica-2d163e.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications-routing.module.ts","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.component.ts","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.component.html","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.module.ts","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.pipe.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SamplePublicationsComponent } from './sample-publications.component';\nconst routes: Routes = [{ path: '', component: SamplePublicationsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SamplePublicationsRoutingModule { }\n","// --------------------------------------------------------------------------------------------\n// ------ This is the Publications screen which is called from  -------------------------------\n// ------ the top left \"Navigation Tree\" menu when a specific Sample has been selected. -------\n// ------ Not to be confused with \"Publications\" in the top horizontal menu.  -----------------\n// --------------------------------------------------------------------------------------------\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\n@Component( {\n    selector: 'canano-sample-publications',\n    templateUrl: './sample-publications.component.html',\n    styleUrls: ['./sample-publications.component.scss']\n} )\nexport class SamplePublicationsComponent implements OnInit{\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    helpUrl = Consts.HELP_URL_SAMPLE_PUBLICATIONS;\n    propertiesLoaded;\n    data;\n    publicationData;\n    toolHeadingNameManage;\n    editUrl=false;\n    sectionToShow='all';\n    constructor( private statusDisplayService:StatusDisplayService,private apiService:ApiService,private router:Router,private navigationService:NavigationService,private route: ActivatedRoute ){\n    }\n\n    ngOnInit(): void{\n        this.editUrl=this.statusDisplayService.isEditUrl();\n        this.publicationData={};\n        this.navigationService.setCurrentSelectedItem(3);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId=params['sampleId'];\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data=>this.toolHeadingNameManage='Sample ' +data['sampleName'] + ' Publication'\n                )\n\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                };\n                let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_SUMMARY_VIEW,'sampleId='+this.sampleId);\n                url.subscribe(data=> {\n                    //console.log(data)\n                    this.data=data;\n                    this.propertiesLoaded=true;\n                    Properties.SAMPLE_TOOLS = true;\n                    this.separateDataSets(data);\n\n                },\n                error=>{\n\n                })\n            })\n\n\n    }\n\n    addPublication(type) {\n        this.router.navigate(['/home/samples/publications/publication',this.sampleId,type]);\n    }\n\n    editpublication(type,publicationId) {\n        console.log(publicationId)\n        this.router.navigate(['/home/samples/publications/publication',this.sampleId,publicationId,type]);\n    }\n\n\n    separateDataSets(data) {\n        let setupUrl=this.apiService.doGet(Consts.QUERY_PUBLICATION_SETUP,'');\n        setupUrl.subscribe(setupData=> {\n            let defaultCategories = setupData['publicationCategories'];\n            defaultCategories.forEach(item=> {\n                this.publicationData[item]=[];\n            });\n\n            let keys = Object.keys(data.category2Publications);\n            keys.forEach(category=> {\n                if (!this.publicationData[category]){\n                    this.publicationData[category]=[];\n                }\n\n                let currentArray=data.category2Publications[category];\n                if (currentArray.length) {\n                    currentArray.forEach(item=> {\n                        this.publicationData[category].push(item);\n                    })\n                }\n            })\n        })\n\n\n    }\n\n    splitKeywords(keywords) {\n        return keywords.split('\\n')\n    }\n\n    showSection(value) {\n        this.sectionToShow=value;\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'PUBLICATION']\" [print]=\"true\"\n>\n</canano-main-display-heading>\n\n<div *ngIf=\"data\">\n    <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\n          </li>\n        <li *ngFor=\"let category of publicationData | keyvalue\" class=\"nav-item\">\n            <a class=\"nav-link\" id=\"category-tab\" data-toggle=\"tab\" (click)=\"showSection(category.key)\">{{category.key}}</a>\n        </li>\n    </ul>\n    <ng-container *ngFor=\"let publicationCategory of publicationData | keyvalue\">\n    <div class=\"mainSection\" *ngIf=\"publicationCategory.key==sectionToShow||sectionToShow=='all'\">\n        <div class=\"header\">\n            {{publicationCategory.key}} <button *ngIf=\"editUrl\" (click)=\"addPublication(publicationCategory.key)\" class=\"btn btn-primary btn-sm\">Add</button>\n        </div><br />\n        <ng-container *ngFor=\"let publication of publicationData[publicationCategory.key]; let publicationIndex=index;let last=last\">\n            <div class=\"mainBorder\" [ngClass]=\"{'last':last}\">\n                <div class=\"editButton\">\n                    <button (click)=\"editpublication(publicationCategory.key,publication.publicationId)\" class=\"btn btn-primary btn-sm\">Edit</button>\n                </div>\n                <table class=\"dataMain\">\n                    <tr>\n                        <td class=\"label\">\n                            Bibliography Info\n                        </td>\n                        <td [innerHTML]=\"publication.displayName|samplePublications\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            Description\n                        </td>\n                        <td>\n                            <span [innerHtml]=\"publication.description\"></span>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"publication.keywordsStr!=''\">\n                        <td class=\"label\">\n                            Keywords\n                        </td>\n                        <td>\n                            <ul>\n                                <li *ngFor=\"let keyword of splitKeywords(publication.keywordsStr)\">\n                                    {{keyword}}\n                                </li>\n                            </ul>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">\n                            Publication Status\n                        </td>\n                        <td>\n                            {{publication.status}}\n                        </td>\n                    </tr>\n                </table>\n            </div>\n\n        </ng-container>\n    </div>\n</ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SamplePublicationsComponent } from './sample-publications.component';\nimport { SamplePublicationsRoutingModule } from './sample-publications-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SamplePublicationsPipe } from './sample-publications.pipe';\n\n@NgModule({\n    declarations: [SamplePublicationsComponent, SamplePublicationsPipe],\n    imports: [\n      CommonModule,\n      SamplePublicationsRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\nexport class SamplePublicationsModule { }\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Consts } from 'src/app/constants';\n@Pipe({\n  name: 'samplePublications'\n})\nexport class SamplePublicationsPipe implements PipeTransform {\n\n  transform(value: String, ...args: unknown[]): unknown {\n      let val = value;\n      val = val.replace(/(^[^\\/])/,\"/$1\");\n    return val;\n  }\n\n}\n"],"names":["RouterModule","SamplePublicationsComponent","routes","path","component","SamplePublicationsRoutingModule","forChild","imports","exports","Properties","Consts","i0","constructor","statusDisplayService","apiService","router","navigationService","route","CURRENT_SAMPLE_ID","HELP_URL_SAMPLE_PUBLICATIONS","ngOnInit","editUrl","isEditUrl","publicationData","setCurrentSelectedItem","params","subscribe","sampleId","getSampleName","data","toolHeadingNameManage","url","doGet","QUERY_PUBLICATION_SUMMARY_VIEW","propertiesLoaded","SAMPLE_TOOLS","separateDataSets","error","addPublication","type","navigate","editpublication","publicationId","console","log","setupUrl","QUERY_PUBLICATION_SETUP","setupData","defaultCategories","forEach","item","keys","Object","category2Publications","category","currentArray","length","push","splitKeywords","keywords","split","showSection","value","sectionToShow","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","SamplePublicationsPipe","SamplePublicationsModule","declarations","transform","args","val","replace","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}