{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.pipe.ts","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.module.ts","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications-routing.module.ts","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.component.ts","./src/app/cananolab-client/main-display/samples/publications/sample-publications/sample-publications.component.html"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-publications-sample-publications-sample-publications-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Consts } from 'src/app/constants';\r\n@Pipe({\r\n  name: 'samplePublications'\r\n})\r\nexport class SamplePublicationsPipe implements PipeTransform {\r\n\r\n  transform(value: String, ...args: unknown[]): unknown {\r\n      let val = value;\r\n      val = val.replace(/(^[^\\/])/,\"/$1\");\r\n    return val;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SamplePublicationsComponent } from './sample-publications.component';\r\nimport { SamplePublicationsRoutingModule } from './sample-publications-routing.module';\r\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SamplePublicationsPipe } from './sample-publications.pipe';\r\n\r\n@NgModule({\r\n    declarations: [SamplePublicationsComponent, SamplePublicationsPipe],\r\n    imports: [\r\n      CommonModule,\r\n      SamplePublicationsRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule\r\n    ]\r\n  })\r\nexport class SamplePublicationsModule { }\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SamplePublicationsComponent } from './sample-publications.component';\r\nconst routes: Routes = [{ path: '', component: SamplePublicationsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SamplePublicationsRoutingModule { }\r\n","// --------------------------------------------------------------------------------------------\r\n// ------ This is the Publications screen which is called from  -------------------------------\r\n// ------ the top left \"Navigation Tree\" menu when a specific Sample has been selected. -------\r\n// ------ Not to be confused with \"Publications\" in the top horizontal menu.  -----------------\r\n// --------------------------------------------------------------------------------------------\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Properties } from '../../../../../../assets/properties';\r\nimport { Consts } from '../../../../../constants';\r\nimport { NavigationService } from '../../../../common/services/navigation.service';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../../../../common/services/api.service';\r\nimport { StatusDisplayService } from 'src/app/cananolab-client/status-display/status-display.service';\r\n@Component( {\r\n    selector: 'canano-sample-publications',\r\n    templateUrl: './sample-publications.component.html',\r\n    styleUrls: ['./sample-publications.component.scss']\r\n} )\r\nexport class SamplePublicationsComponent implements OnInit{\r\n    sampleId = Properties.CURRENT_SAMPLE_ID;\r\n    helpUrl = Consts.HELP_URL_SAMPLE_PUBLICATIONS;\r\n    propertiesLoaded;\r\n    data;\r\n    publicationData;\r\n    toolHeadingNameManage;\r\n    editUrl=false;\r\n    sectionToShow='all';\r\n    constructor( private statusDisplayService:StatusDisplayService,private apiService:ApiService,private router:Router,private navigationService:NavigationService,private route: ActivatedRoute ){\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        this.editUrl=this.statusDisplayService.isEditUrl();\r\n        this.publicationData={};\r\n        this.navigationService.setCurrentSelectedItem(3);\r\n        this.route.params.subscribe(\r\n            ( params: Params ) => {\r\n                this.sampleId=params['sampleId'];\r\n                this.apiService.getSampleName(this.sampleId).subscribe(\r\n                    data=>this.toolHeadingNameManage='Sample ' +data['sampleName'] + ' Publication'\r\n                )\r\n\r\n                if(\r\n                    this.sampleId <= 0 ){\r\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\r\n                }else{\r\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\r\n                };\r\n                let url = this.apiService.doGet(Consts.QUERY_PUBLICATION_SUMMARY_VIEW,'sampleId='+this.sampleId);\r\n                url.subscribe(data=> {\r\n                    //console.log(data)\r\n                    this.data=data;\r\n                    this.propertiesLoaded=true;\r\n                    Properties.SAMPLE_TOOLS = true;\r\n                    this.separateDataSets(data);\r\n\r\n                },\r\n                error=>{\r\n\r\n                })\r\n            })\r\n\r\n\r\n    }\r\n\r\n    addPublication(type) {\r\n        this.router.navigate(['/home/samples/publications/publication',this.sampleId,type]);\r\n    }\r\n\r\n    editpublication(type,publicationId) {\r\n        console.log(publicationId)\r\n        this.router.navigate(['/home/samples/publications/publication',this.sampleId,publicationId,type]);\r\n    }\r\n\r\n\r\n    separateDataSets(data) {\r\n        let setupUrl=this.apiService.doGet(Consts.QUERY_PUBLICATION_SETUP,'');\r\n        setupUrl.subscribe(setupData=> {\r\n            let defaultCategories = setupData['publicationCategories'];\r\n            defaultCategories.forEach(item=> {\r\n                this.publicationData[item]=[];\r\n            });\r\n\r\n            let keys = Object.keys(data.category2Publications);\r\n            keys.forEach(category=> {\r\n                if (!this.publicationData[category]){\r\n                    this.publicationData[category]=[];\r\n                }\r\n\r\n                let currentArray=data.category2Publications[category];\r\n                if (currentArray.length) {\r\n                    currentArray.forEach(item=> {\r\n                        this.publicationData[category].push(item);\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    splitKeywords(keywords) {\r\n        return keywords.split('\\n')\r\n    }\r\n\r\n    showSection(value) {\r\n        this.sectionToShow=value;\r\n    }\r\n}\r\n","<canano-main-display-heading\r\n    [helpUrl]=\"helpUrl\"\r\n    [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'PUBLICATION']\" [print]=\"true\"\r\n>\r\n</canano-main-display-heading>\r\n\r\n<div *ngIf=\"data\">\r\n    <ul class=\"nav nav-tabs\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\r\n          </li>\r\n        <li *ngFor=\"let category of publicationData | keyvalue\" class=\"nav-item\">\r\n            <a class=\"nav-link\" id=\"category-tab\" data-toggle=\"tab\" (click)=\"showSection(category.key)\">{{category.key}}</a>\r\n        </li>\r\n    </ul>\r\n    <ng-container *ngFor=\"let publicationCategory of publicationData | keyvalue\">\r\n    <div class=\"mainSection\" *ngIf=\"publicationCategory.key==sectionToShow||sectionToShow=='all'\">\r\n        <div class=\"header\">\r\n            {{publicationCategory.key}} <button *ngIf=\"editUrl\" (click)=\"addPublication(publicationCategory.key)\" class=\"btn btn-primary btn-sm\">Add</button>\r\n        </div><br />\r\n        <ng-container *ngFor=\"let publication of publicationData[publicationCategory.key]; let publicationIndex=index;let last=last\">\r\n            <div class=\"mainBorder\" [ngClass]=\"{'last':last}\">\r\n                <div class=\"editButton\">\r\n                    <button (click)=\"editpublication(publicationCategory.key,publication.publicationId)\" class=\"btn btn-primary btn-sm\">Edit</button>\r\n                </div>\r\n                <table class=\"dataMain\">\r\n                    <tr>\r\n                        <td class=\"label\">\r\n                            Bibliography Info\r\n                        </td>\r\n                        <td [innerHTML]=\"publication.displayName|samplePublications\">\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"label\">\r\n                            Description\r\n                        </td>\r\n                        <td>\r\n                            <span [innerHtml]=\"publication.description\"></span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngIf=\"publication.keywordsStr!=''\">\r\n                        <td class=\"label\">\r\n                            Keywords\r\n                        </td>\r\n                        <td>\r\n                            <ul>\r\n                                <li *ngFor=\"let keyword of splitKeywords(publication.keywordsStr)\">\r\n                                    {{keyword}}\r\n                                </li>\r\n                            </ul>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"label\">\r\n                            Publication Status\r\n                        </td>\r\n                        <td>\r\n                            {{publication.status}}\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </ng-container>\r\n    </div>\r\n</ng-container>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}