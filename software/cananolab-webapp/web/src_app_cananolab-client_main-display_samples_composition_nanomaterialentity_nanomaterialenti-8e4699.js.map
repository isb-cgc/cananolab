{"version":3,"file":"src_app_cananolab-client_main-display_samples_composition_nanomaterialentity_nanomaterialenti-8e4699.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterial.service.ts","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity-routing.module.ts","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity.component.ts","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity.component.html","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity.module.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class NanomaterialService{\n    nanomaterialSampleId;\n    nanomaterialDescription;\n    nanomaterialDataId;\n    nanomaterialSetupData;\n    nanomaterialEditData;\n    composingElementsArray = [];\n    newNanomaterialType;\n\n    newComposingElementShowEmitter =  new EventEmitter();\n    newNanomaterialTypeEmitter =  new EventEmitter();\n    editComposingElementShowEmitter =  new EventEmitter();\n    editComposingElementIndexEmitter =  new EventEmitter();\n    editComposingElementCancelEmitter =  new EventEmitter();\n\n    constructor(){\n    }\n\n    setComposingElementsArray(cea){\n        this.composingElementsArray = cea;\n    }\n\n    getComposingElementsArray(){\n        return this.composingElementsArray;\n    }\n\n    setNewComposingElementShow(){\n        this.newComposingElementShowEmitter.emit(true);\n        this.editComposingElementShowEmitter.emit(false);\n    }\n\n   setNewComposingElementHide(){\n       this.newComposingElementShowEmitter.emit(false);\n   }\n\n\n    setEditComposingElementShow(){\n        this.editComposingElementShowEmitter.emit(true);\n        this.newComposingElementShowEmitter.emit(false);\n    }\n\n\n\n    // User has canceled out of Edit\n   setEditComposingElementHide( i: number = -1 ){\n\n        if( i >= 0 ){\n            this.editComposingElementCancelEmitter.emit(i);\n        }\n\n       this.editComposingElementShowEmitter.emit(false);\n   }\n\n    editComposingElement( element ){\n        this.editComposingElementIndexEmitter.emit( element );\n        this.editComposingElementShowEmitter.emit(true);\n    }\n\n    getNanomaterialEditData(){\n        return this.nanomaterialEditData;\n    }\n\n    setNanomaterialEditData( nmsData ){\n        this.nanomaterialEditData = nmsData;\n    }\n\n    getNanomaterialSetupData(){\n        return this.nanomaterialSetupData;\n    }\n\n    setNanomaterialSetupData( nmsData ){\n        this.nanomaterialSetupData = nmsData;\n    }\n\n    getNanoMaterialSampleId(){\n        return this.nanomaterialSampleId;\n    }\n\n    setNanoMaterialSampleId( nmsId ){\n        this.nanomaterialSampleId = nmsId;\n    }\n\n    getNanoMaterialDataId(){\n        return this.nanomaterialDataId;\n    }\n\n    setNanoMaterialDataId( nmdId ){\n        this.nanomaterialDataId = nmdId;\n    }\n\n    setNanoMaterialSampleDescription( nmsDec ){\n        this.nanomaterialDescription = nmsDec;\n    }\n\n   getNanoMaterialSampleDescription(  ){\n        return this.nanomaterialDescription;\n    }\n\n\n    setNewNanomaterialType( type, sampleId, description ){\n        this.newNanomaterialType = type;\n        this.newNanomaterialTypeEmitter.emit( {type, sampleId, description });\n    }\n\n    getsetNewNanomaterialType(){\n        return this.newNanomaterialType;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NanomaterialentityComponent } from './nanomaterialentity.component';\nconst routes: Routes = [{ path: '', component: NanomaterialentityComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NanomaterialentityRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Consts } from '../../../../../constants';\nimport { Util } from '../../../../../utilities';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { Properties } from '../../../../../../assets/properties';\nimport { NanomaterialService } from './nanomaterial.service';\nimport { NavigationService } from '../../../../common/services/navigation.service';\n@Component({\n    selector: 'canano-nanomaterialentity',\n    templateUrl: './nanomaterialentity.component.html',\n    styleUrls: ['./nanomaterialentity.component.scss'],\n})\nexport class NanomaterialentityComponent implements OnInit {\n    composingElementIndex;\n    consts = Consts;\n    composingElement;\n    currentDropdownValues = {};\n    currentField;\n    data;\n    dataTrailer;\n    dataId;\n    errors = {};\n    helpUrl = Consts.HELP_URL_SAMPLE_COMPOSITION_NANOMATERIAL;\n    inherentFunctionIndex;\n    inherentFunction;\n    resetStatus = false;\n    otherValue;\n    sampleId;\n    setupData;\n    toolHeadingNameManage = ' Sample Composition - Nanomaterial Entity';\n\n    constructor(\n        private navigationService: NavigationService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private apiService: ApiService,\n        private nanomaterialService: NanomaterialService\n    ) {}\n\n    ngOnInit(): void {\n        this.navigationService.setCurrentSelectedItem(1);\n        this.route.params.subscribe((params: Params) => {\n            this.sampleId = params['sampleId'];\n            this.dataId = params['dataId'];\n            this.apiService\n                .doGet(\n                    Consts.QUERY_NANOMATERIAL_SETUP,\n                    'sampleId=' + this.sampleId\n                )\n                .subscribe(\n                    (data) => {\n                        this.setupData = data;\n                        Properties.SAMPLE_TOOLS = true;\n                        Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                    },\n                    (errors) => {\n                        this.errors = errors;\n                    }\n                );\n\n            if (this.dataId) {\n                this.apiService\n                    .doGet(\n                        Consts.QUERY_NANOMATERIAL_EDIT,\n                        'sampleId=' + this.sampleId + '&dataId=' + this.dataId\n                    )\n                    .subscribe(\n                        (data) => {\n                            this.data = data;\n                            this.dataTrailer = JSON.parse(JSON.stringify(data));\n                            this.errors = {};\n                        },\n                        (errors) => {\n                            this.errors = errors;\n                        }\n                    );\n            } else {\n                this.setupNanomaterial();\n            }\n        });\n    }\n\n    addInherentFunction() {\n        this.inherentFunctionIndex = -1;\n        this.inherentFunction = {type: '', description: '', modality: ''};\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n\n    addComposingElement() {\n        this.composingElementIndex = -1;\n        this.composingElement = {\n            type: '',\n            name: '',\n            pubChemDataSourceName: '',\n            valueUnit: '',\n            molecularFormulaType: '',\n            inherentFunction: [],\n        };\n        setTimeout(function () {\n            document.getElementById('composingElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    }\n\n    cancelComposingElement() {\n        this.composingElementIndex = null;\n        this.inherentFunctionIndex = null;\n    }\n\n    cancelInherentFunction() {\n        this.inherentFunctionIndex = null;\n    }\n\n    changeFile(newItem: Object) {\n        if (newItem['type'] == 'save' || newItem['type'] == 'delete') {\n            this.data = newItem['data'];\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        }\n    }\n\n    convertDomainEntityFieldsToNullAndStrings() {\n        let fieldsToIgnore = ['id', 'createdDate', 'sampleComposition'];\n        if (this.data['domainEntity']) {\n            let domainEntityKeys = Object.keys(this.data['domainEntity']);\n            domainEntityKeys.forEach((item) => {\n                if (this.data.domainEntity[item] != null) {\n                    if (\n                        this.data.domainEntity[item] != '' &&\n                        fieldsToIgnore.indexOf(item) == -1\n                    ) {\n                        this.data.domainEntity[item] =\n                            this.data.domainEntity[item].toString();\n                    }\n                    if (this.data.domainEntity[item] == '') {\n                        this.data.domainEntity[item] = null;\n                    }\n                }\n            });\n        }\n    }\n\n    convertToString(event) {\n        this.data.domainEntity[event.target.id] = event.target.value.toString();\n    }\n    delete() {\n        if (confirm('Are you sure you wish to delete this nanomaterial?')) {\n            this.convertDomainEntityFieldsToNullAndStrings();\n            setTimeout(() => {\n                this.apiService\n                    .doPost(Consts.QUERY_NANOMATERIAL_DELETE, this.data)\n                    .subscribe(\n                        (data) => {\n                            this.router.navigate([\n                                'home/samples/composition',\n                                this.sampleId,\n                            ]);\n                        },\n                        (error) => {\n                            this.errors = error;\n                        }\n                    );\n            }, 200);\n        }\n    }\n\n    deleteComposingElement() {\n        if (\n            confirm('Are you sure you wish to delete this composing element?')\n        ) {\n            this.convertDomainEntityFieldsToNullAndStrings();\n            this.data.simpleCompBean = this.composingElement;\n            // WJRL 2/2023: This was the cause for issue #264. The\n            // array of composing elements that is supposed to survive the\n            // deletion deletes drops the first element regardless of what is\n            // being deleted. Thus, two elements were getting deleted!\n            // This incorrect call is dropping the first element, not the element to delete.\n            // The first argument is supposed to be an integer, not an element\n            // this.data.composingElements.splice(\n            //    this.data.composingElements[this.composingElementIndex],\n            //    1\n            // );\n            //\n            this.data.composingElements.splice(\n                this.composingElementIndex,\n                1\n            );\n            this.apiService\n                .doPost(Consts.QUERY_REMOVE_COMPOSING_ELEMENT, this.data)\n                .subscribe(\n                    (data) => {\n                        this.composingElementIndex = null;\n                        this.inherentFunctionIndex = null;\n                        this.data = data;\n                        this.setupDataTrailer(data);\n                        this.errors = {};\n                    },\n                    (error) => {\n                        this.errors = error;\n                    }\n                );\n        }\n    }\n\n    deleteInherentFunction() {\n        if (confirm('Are you sure you wish to delete this inherent function?')) {\n            this.composingElement.inherentFunction.splice(this.inherentFunctionIndex, 1)\n        }\n        this.inherentFunctionIndex = null;\n    }\n\n    editComposingElement(index, element) {\n        // WJRL 2/7/23: ditch JSON.parse(JSON.stringify())\n        this.composingElement = Util.deepCopy(element, false);\n        this.composingElementIndex = index;\n        setTimeout(function () {\n            document.getElementById('composingElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    editInherentFunction(fIndex, iFunction) {\n        this.inherentFunctionIndex = fIndex;\n        // WJRL 2/7/23: ditch JSON.parse(JSON.stringify())\n        this.inherentFunction = Util.deepCopy(iFunction, false);\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n    getError(error: Object) {\n        this.errors = error;\n    }\n\n    readyToSubmit() {\n        let submissionStatus = true;\n        if (this.data.type == 'biopolymer') {\n            if (this.data.domainEntity.name == '' || this.data.domainEntity.name == null) {\n                submissionStatus = false;\n            }\n            // WJRL ?? This is just a duplicate of above...\n            // if (this.data.domainEntity.type == '' || this.data.domainEntity.type == null) {\n            //    submissionStatus = false;\n            // }\n        }\n        if (this.data.type == '') {\n            submissionStatus = false;\n        }\n        return submissionStatus;\n    }\n\n    reset() {\n        this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n        this.composingElementIndex = null;\n        this.inherentFunctionIndex = null;\n        this.resetStatus = true;\n    }\n\n    saveComposingElement() {\n        this.convertDomainEntityFieldsToNullAndStrings();\n        if (this.composingElementIndex == -1) {\n            this.data['simpleCompBean'] = this.composingElement;\n        } else {\n            this.data['composingElements'][this.composingElementIndex] =\n                this.composingElement;\n            this.data['simpleCompBean'] = this.composingElement;\n        }\n        this.apiService\n            .doPost(Consts.SAVE_COMPOSING_ELEMENT, this.data)\n            .subscribe(\n                (data) => {\n                    this.composingElementIndex = null;\n                    this.inherentFunctionIndex = null;\n                    this.data = data;\n                    this.setupDataTrailer(data);\n                    this.errors = {};\n                },\n                (error) => {\n                    this.errors = error;\n                }\n            );\n    }\n\n    saveInherentFunction() {\n        if (this.inherentFunctionIndex == -1) {\n            this.inherentFunction.id = '-1000';\n            if (!this.composingElement.inherentFunction) {\n                this.composingElement['inherentFunction'] = [];\n            }\n            this.composingElement.inherentFunction.push(this.inherentFunction);\n        }\n        else {\n            this.composingElement.inherentFunction[this.inherentFunctionIndex] = this.inherentFunction;\n        }\n        this.inherentFunctionIndex = null;\n    }\n\n    inherentFunctionHasType(functionType) {\n        for (let func of this.composingElement.inherentFunction) {\n            if (func.type == functionType) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    inherentFunctionDisplayString(func) {\n        if (func.type == 'imaging function') {\n            return func.type + ' (' + func.modality + ') : ' + func.description;\n        } else {\n            return func.type + ' : ' + func.description;\n        }\n    }\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'], newItem['value']);\n            this.setValue(newItem['field'], newItem['value']);\n        } else {\n            this.setValue(newItem['field'], newItem['value']);\n        }\n    }\n\n    setupDataTrailer(data) {\n        this.dataTrailer = JSON.parse(JSON.stringify(data));\n    }\n\n    setupDomainEntity(event) {\n        delete this.data['domainEntity'];\n        if (event == 'biopolymer') {\n            this.data['domainEntity'] = {\n                type: null,\n                name: null,\n                sequence: null,\n            };\n        }\n        if (event == 'dendrimer') {\n            this.data['domainEntity'] = { branch: null, generation: null };\n        }\n        if (event == 'fullerene') {\n            this.data['domainEntity'] = {\n                averageDiameter: null,\n                averageDiameterUnit: null,\n                numberOfCarbon: null,\n            };\n        }\n        if (event == 'liposome') {\n            this.data['domainEntity'] = {\n                isPolymerized: null,\n                polymerName: null,\n            };\n        }\n        if (event == 'polymer') {\n            this.data['domainEntity'] = {\n                isCrossLinked: null,\n                initiator: null,\n                crossLinkDegree: null,\n            };\n        }\n        if (event == 'emulsion') {\n            this.data['domainEntity'] = {\n                isPolymerized: null,\n                polymerName: null,\n            };\n        }\n        if (event == 'carbon nanotube') {\n            this.data['domainEntity'] = {\n                averageLength: null,\n                diameter: null,\n                averageLengthUnit: null,\n                diameterUnit: null,\n                chirality: null,\n                wallType: null,\n            };\n        }\n    }\n\n    setupNanomaterial() {\n        this.data = {\n            description: '',\n            type: '',\n            sampleId: this.sampleId,\n            composingElements: [],\n            files: [],\n        };\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n    }\n\n    submit() {\n        this.convertDomainEntityFieldsToNullAndStrings();\n        this.apiService\n            .doPost(Consts.QUERY_NANOMATERIAL_UPDATE, this.data)\n            .subscribe(\n                (data) => {\n                    this.router.navigate([\n                        'home/samples/composition',\n                        this.sampleId,\n                    ]);\n                },\n                (errors) => {\n                    this.errors = errors;\n                }\n            );\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\">\n</canano-main-display-heading>\n\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <form name=\"nanomaterialForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"nanomaterialType\">\n                            Nanomaterial Entity Type*\n                        </label>\n                    </td>\n                    <td>\n                        <div *ngIf=\"dataId\">\n                            <B>{{data.type}}</B>\n                        </div>\n                            <div *ngIf=\"!dataId\">\n                            <select (ngModelChange)=\"addOtherValue('type',data.type);setupDomainEntity($event)\"  name=\"type\" id=\"nanomaterialType\" [(ngModel)]=\"data.type\">\n                                <option [ngValue]=\"''\" [selected]=\"data.type===''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['nanomaterialEntityTypes']\" [selected]=\"type==data.type\">\n                                    {{type}}\n                                </option>\n                                <option [ngValue]=\"'other'\">other</option>\n                            </select>\n                            <div *ngIf=\"data.type ==='other'\">\n                                <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Nanomaterial Entity Type'\" [value]=\"currentDropdownValues['type']\" [field]=\"'data.type'\" [array]=\"'setupData.nanomaterialEntityTypes'\">\n\n                                </canano-other-dropdown>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"description\">\n                            Description\n                        </label>\n                    </td>\n                    <td>\n                        <textarea name=\"description\" id=\"description\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.description\">\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='biopolymer'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Biopolymer Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"biopolymerName\">\n                            Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"biopolymerName\" [(ngModel)]=\"data.domainEntity['name']\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"biopolymerType\">Biopolymer Type*</label>\n                    </td>\n                    <td>\n                        <select (ngModelChange)=\"addOtherValue('domainEntity.type',data.domainEntity.type)\" id=\"biopolymerType\" [(ngModel)]=\"data['domainEntity']['type']\" name=\"biopolymerType\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity['type']==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['biopolymerTypes']\" [selected]=\"data.domainEntity['type']==type\" value=\"{{type}}\">\n                                {{type}}\n                            </option>\n                            <option value=\"other\">\n                                other\n                            </option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.type ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['domainEntity.type']\" [field]=\"'data.domainEntity.type'\" [array]=\"'setupData.biopolymerTypes'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"biopolymerSequence\">Sequence</label>\n                    </td>\n                    <td colspan=\"3\">\n                        <textarea name=\"biopolymerSequence\" id=\"biopolymerSequence\" [(ngModel)]=\"data.domainEntity.sequence\" rows=\"3\" cols=\"80\">\n                            {{data.sequence}}\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='carbon nanotube'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td colspan=\"6\" class=\"label\">\n                        Carbon Nanotube Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"averageLength\">\n                            Average Length\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"averageLength\" id=\"averageLength\" [(ngModel)]=\"data.domainEntity.averageLength\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"averageLengthUnit\">\n                            Average Length Unit\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"averageLengthUnit\" (ngModelChange)=\"addOtherValue('domainEntity.averageLengthUnit',data.domainEntity.averageLengthUnit)\" name=\"averageLengthUnit\" [(ngModel)]=\"data.domainEntity.averageLengthUnit\" [(ngModel)]=\"data.domainEntity.averageLengthUnit\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.averageLengthUnit==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['composingElementUnits']\" [selected]=\"type==data.domainEntity.averageLengthUnit\">\n                                {{type}}\n                            </option>\n                            <option>other</option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.averageLengthUnit ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Average Length Unit'\" [value]=\"currentDropdownValues['domainEntity.averageLengthUnit']\" [field]=\"'data.domainEntity.averageLengthUnit'\" [array]=\"'setupData.composingElementUnits'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"chirality\">\n                            Chirality\n                        </label>\n                    </td>\n                    <td>\n                       <input type=\"text\" name=\"chirality\" [(ngModel)]=\"data.domainEntity.chirality\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"diameter\">\n                            Diameter\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"diameter\" id=\"diameter\" [(ngModel)]=\"data.domainEntity.diameter\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"diameterUnit\">\n                            Diameter Unit\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"diameterUnit\" (ngModelChange)=\"addOtherValue('domainEntity.diameterUnit',data.domainEntity.diameterUnit)\" name=\"diameterUnit\" [(ngModel)]=\"data.domainEntity.diameterUnit\" [(ngModel)]=\"data.domainEntity.diameterUnit\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.diameterUnit==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['dimensionUnits']\" [selected]=\"type==data.domainEntity.diameterUnit\">\n                                {{type}}\n                            </option>\n                            <option>other</option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.diameterUnit ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Diameter Unit'\" [value]=\"currentDropdownValues['domainEntity.diameterUnit']\" [field]=\"'data.domainEntity.diameterUnit'\" [array]=\"'setupData.dimensionUnits'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"wallType\">\n                            Wall Type\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"wallType\" name=\"wallType\" [(ngModel)]=\"data.domainEntity.wallType\" [(ngModel)]=\"data.domainEntity.wallType\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.wallType==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['wallTypes']\" [selected]=\"type==data.domainEntity.wallType\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='dendrimer'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Dendrimer Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"branch\">\n                            Branch\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"branch\" id=\"branch\" [(ngModel)]=\"data.domainEntity.branch\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"generation\">\n                            Generation\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"generation\" id=\"generation\" [(ngModel)]=\"data.domainEntity.generation\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='emulsion'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Emulsion Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"isPolymerized\">\n                            Is Polymerized\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"isPolymerized\" id=\"isPolymerized\" [(ngModel)]=\"data.domainEntity.isPolymerized\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.polymerized==null\">--Select--</option>\n                            <option value=\"true\"\n                                    [selected]=\"data.domainEntity.polymerized==true\">Yes</option>\n                            <option value=\"false\"\n                                    [selected]=\"data.domainEntity.polymerized==false\">No</option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"polymerName\">\n                            Polymer Name\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"polymerName\" id=\"polymerName\" [(ngModel)]=\"data.domainEntity.polymerName\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='fullerene'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"6\">\n                        Fullerene Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"averageDiameter\">\n                            Average Diameter\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"averageDiameter\" id=\"averageDiameter\" [(ngModel)]=\"data.domainEntity.averageDiameter\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"averageDiameterUnit\">\n                            Average Diameter Unit\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"averageDiameterUnit\" (ngModelChange)=\"addOtherValue('domainEntity.averageDiameterUnit',data.domainEntity.averageDiameterUnit)\" name=\"averageDiameterUnit\" [(ngModel)]=\"data.domainEntity.averageDiameterUnit\" [(ngModel)]=\"data.domainEntity.averageDiameterUnit\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.averageDiameterUnit==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['dimensionUnits']\" [selected]=\"type==data.domainEntity.averageDiameterUnit\">\n                                {{type}}\n                            </option>\n                            <option>other</option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.averageDiameterUnit ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Average Diameter Unit'\" [value]=\"currentDropdownValues['domainEntity.averageDiameterUnit']\" [field]=\"'data.domainEntity.averageDiameterUnit'\" [array]=\"'setupData.dimensionUnits'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"numberOfCarbon\">\n                            Number of Carbons\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"numberOfCarbon\" id=\"numberOfCarbon\" [(ngModel)]=\"data.domainEntity.numberOfCarbon\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='liposome'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Liposome Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"isPolymerized\">\n                            Is Polymerized\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"isPolymerized\" id=\"isPolymerized\" [(ngModel)]=\"data.domainEntity.isPolymerized\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.polymerized==null\">--Select--</option>\n                            <option value=\"true\"\n                                    [selected]=\"data.domainEntity.polymerized===true\">Yes</option>\n                            <option value=\"false\"\n                                    [selected]=\"data.domainEntity.polymerized===false\">No</option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"polymerName\">\n                            Polymer Name\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"polymerName\" id=\"polymerName\" [(ngModel)]=\"data.domainEntity.polymerName\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='polymer'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"6\">\n                        Polymer Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"initiator\">\n                            Initiator\n                        </label>\n                    </td>\n                    <td>\n                        <input (input)=\"convertToString($event)\" type=\"number\" name=\"initiator\" id=\"initiator\" [(ngModel)]=\"data.domainEntity.initiator\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"isCrossLinked\">\n                            Is Cross Linked\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"isCrossLinked\" id=\"isCrossLinked\" [(ngModel)]=\"data.domainEntity.isCrossLinked\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.isCrossLinked==null\">--Select--</option>\n                            <option value=\"true\"\n                                    [selected]=\"data.domainEntity.isCrossLinked==true\">Yes</option>\n                            <option value=\"false\"\n                                    [selected]=\"data.domainEntity.isCrossLinked==false\">No</option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"crossLinkDegree\">\n                            Cross Link Degree\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"crossLinkDegree\" id=\"crossLinkDegree\" [(ngModel)]=\"data.domainEntity.crossLinkDegree\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        Composing Element\n                    </td>\n                    <td>\n                        <button (click)=\"addComposingElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.composingElements.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable properties\" *ngFor=\"let cElement of data.composingElements;let cIndex=index\">\n                            <tr>\n                                <th colspan=\"2\">\n                                    {{cElement.type}} (name:{{cElement.name}})\n                                </th>\n                                <th></th>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    PubChem ID\n                                </td>\n                                <td>\n                                    {{cElement.pubChemId}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editComposingElement(cIndex,cElement)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Molecular Formula\n                                </td>\n                                <td colspan=\"2\">\n                                    {{cElement.molecularFormula}} ({{cElement.molecularFormulaType}})\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Description\n                                </td>\n                                <td colspan=\"2\" [innerHTML]=\"cElement.description\"></td>\n                            </tr>\n                            <tr *ngIf=\"cElement.inherentFunction\">\n                                <td class=\"label\">\n                                    Function\n                                </td>\n                                <td colspan=\"2\">\n                                    <div *ngFor=\"let function of cElement.inherentFunction\">\n                                        <div [innerHTML]=\"inherentFunctionDisplayString(function)\"></div>\n                                        <!-- {{function.type}}:{{function.description}} -->\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"composingElementIndex!=null\" id=\"composingElementForm\">\n                    <td></td>\n                    <td>\n                        <div class=\"mainBorder\">\n                            <table class=\"dataMain\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cType\">\n                                            Type*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('composingElement.type',composingElement.type)\" id=\"cType\" name=\"cType\" [(ngModel)]=\"composingElement.type\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.type==type\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.emulsionComposingElementTypes\" [selected]=\"type==composingElement.type\">\n                                                {{type}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"composingElement.type ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['composingElement.type']\" [field]=\"'composingElement.type'\" [array]=\"'setupData.emulsionComposingElementTypes'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"cName*\">\n                                            Chemical Name*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"cName\" [(ngModel)]=\"composingElement.name\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cPubchemDataSource\">\n                                            PubChem DataSource\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select id=\"cPubchemDataSource\" name=\"cPubchemDataSource\" [(ngModel)]=\"composingElement.pubChemDataSourceName\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.pubChemDataSourceName===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.pubChemDataSources\" [selected]=\"type==composingElement.pubChemDataSourceName\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pubchemid\">\n                                            PubChem Id\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" id=\"pubchemid\" name=\"pubChemId\" [(ngModel)]=\"composingElement.pubChemId\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"amount\">\n                                            Amount\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" name=\"amount\" id=\"amount\" [(ngModel)]=\"composingElement.value\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"amountunit\">\n                                            Amount Unit\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('composingElement.valueUnit',composingElement.valueUnit)\" name=\"valueUnit\" id=\"valueUnit\" [(ngModel)]=\"composingElement.valueUnit\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.valueUnit===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.composingElementUnits\" [selected]=\"composingElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"composingElement.valueUnit ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Amount Unit'\" [value]=\"currentDropdownValues['composingElement.valueUnit']\" [field]=\"'composingElement.valueUnit'\" [array]=\"'setupData.composingElementUnits'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormulaType\">\n                                            Molecular Formula Type\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('composingElement.molecularFormulaType',composingElement.molecularFormulaType)\" name=\"molecularFormulaType\" id=\"molecularFormulaType\" [(ngModel)]=\"composingElement.molecularFormulaType\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.molecularFormulaType===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.molecularFormulaTypes\" [selected]=\"composingElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"composingElement.molecularFormulaType ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Molecular Formula Type'\" [value]=\"currentDropdownValues['composingElement.molecularFormulaType']\" [field]=\"'composingElement.molecularFormulaType'\" [array]=\"'setupData.molecularFormulaTypes'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormula\">\n                                            Molecular Formula\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <textarea name=\"molecularFormula\" id=\"molecularFormula\" rows=\"2\" cols=\"40\" [(ngModel)]=\"composingElement.molecularFormula\">\n                                            {{composingElement.molecularFormula}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cDescription\">\n                                            Description\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <textarea name=\"cDescription\" id=\"cDescription\" rows=\"3\" cols=\"65\" [(ngModel)]=\"composingElement.description\">\n                                            {{composingElement.description}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"inherentFunction\">\n                                            Inherent Function\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <button (click)=\"addInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                    </td>\n                                </tr>\n                                <ng-container *ngIf=\"composingElement.inherentFunction\">\n                                    <tr *ngIf=\"composingElement.inherentFunction.length\">\n                                        <td></td>\n                                        <td colspan=\"3\">\n                                            <table class=\"dataTable\">\n                                                <tr>\n                                                    <th>Function Type</th>\n                                                    <th *ngIf=\"inherentFunctionHasType('imaging function')\">Image Modality</th>\n                                                    <!-- <th *ngIf=\"inherentFunctionHasType('targeting function')\">Targets</th> -->\n                                                    <th>Description</th>\n                                                    <th></th>\n                                                </tr>\n                                                <tr *ngFor=\"let iFunction of composingElement.inherentFunction;let fIndex=index\">\n                                                    <td>\n                                                        {{iFunction.type}}\n                                                    </td>\n                                                    <td *ngIf=\"inherentFunctionHasType('imaging function')\">\n                                                        {{iFunction.modality}}\n                                                    </td>\n                                                    <!-- <td *ngIf=\"inherentFunctionHasType('targeting function')\">\n                                                    </td> -->\n                                                    <td>\n                                                        {{iFunction.description}}\n                                                    </td>\n                                                    <td>\n                                                        <button (click)=\"editInherentFunction(fIndex,iFunction)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <tr *ngIf=\"inherentFunctionIndex!=null\" id=\"inherentFunctionForm\">\n                                    <td>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <div class=\"mainBorder\">\n                                            <table class=\"dataMain\">\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"functionType\">\n                                                            Function Type\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <select (ngModelChange)=\"addOtherValue('inherentFunction.type',inherentFunction.type)\"  name=\"type\" id=\"functionType\" [(ngModel)]=\"inherentFunction.type\">\n                                                            <option [ngValue]=\"''\" [selected]=\"inherentFunction.type===''\">--Select--</option>\n                                                            <option *ngFor=\"let type of setupData['functionTypes']\" [selected]=\"type==inherentFunction.type\">\n                                                                {{type}}\n                                                            </option>\n                                                            <option>other</option>\n                                                        </select>\n                                                        <div *ngIf=\"inherentFunction.type ==='other'\">\n                                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Function Type'\" [value]=\"currentDropdownValues['inherentFunction.type']\" [field]=\"'inherentFunction.type'\" [array]=\"'setupData.functionTypes'\">\n\n                                                            </canano-other-dropdown>\n                                                        </div>\n                                                    </td>\n                                                    <td class=\"label\">\n                                                        <label for=\"modality\" *ngIf=\"inherentFunction.type=='imaging function'\">\n                                                            Imaging Modality Type\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <select *ngIf=\"inherentFunction.type=='imaging function'\" (ngModelChange)=\"addOtherValue('inherentFunction.modality',inherentFunction.modality)\"  name=\"modality\" id=\"modality\" [(ngModel)]=\"inherentFunction.modality\">\n                                                            <option [ngValue]=\"''\" [selected]=\"inherentFunction.modality===''\">--Select--</option>\n                                                            <option *ngFor=\"let type of setupData['modalityTypes']\" [selected]=\"type==inherentFunction.modality\">\n                                                                {{type}}\n                                                            </option>\n                                                            <option>other</option>\n                                                        </select>\n                                                        <div *ngIf=\"inherentFunction.modality ==='other'\">\n                                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Imaging Modality Type'\" [value]=\"currentDropdownValues['inherentFunction.modality']\" [field]=\"'inherentFunction.modality'\" [array]=\"'setupData.modalityTypes'\">\n\n                                                            </canano-other-dropdown>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"inherentFunction.description\">\n                                                            Description\n                                                        </label>\n                                                    </td>\n                                                    <td colspan=\"3\">\n                                                        <textarea name=\"inherentFunction.description\" id=\"inherentFunction.description\" [(ngModel)]=\"inherentFunction.description\" rows=\"5\" cols=\"50\">\n                                                            {{inherentFunction.description}}\n                                                        </textarea>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <button *ngIf=\"inherentFunctionIndex!=-1\" (click)=\"deleteInherentFunction()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                    </td>\n                                                    <td colspan=\"3\" class=\"right\">\n                                                        <button [disabled]=\"inherentFunction.type==''\" (click)=\"saveInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                        <button (click)=\"cancelInherentFunction()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteComposingElement()\" *ngIf=\"composingElementIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td></td>\n                                    <td></td>\n                                    <td class=\"right\">\n                                        <button [disabled]=\"!readyToSubmit()||composingElement.type==''||composingElement.name==''\" (click)=\"saveComposingElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelComposingElement()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        File\n                    </td>\n                    <td>\n                        <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\"  (changeFile)=\"changeFile($event)\" [nanomaterial]=\"true\" [saveUrl]=\"consts.QUERY_NANOMATERIAL_SAVE_FILE\" [deleteUrl]=\"consts.QUERY_NANOMATERIAL_REMOVE_FILE\" [sampleId]=\"sampleId\" [data]=\"data\" [fileVariable]=\"'fileBean'\" [fileArray]=\"'files'\">\n\n                        </canano-file>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"otherSampleNames\">\n                            Copy to other samples with the same primary organization?\n                        </label>\n                    </td>\n                    <td>\n                        <select class=\"multiple\" name=\"otherSampleNames\" id=\"otherSampleNames\" multiple size=\"10\" [(ngModel)]=\"data.otherSampleNames\">\n                            <option *ngFor=\"let type of setupData['otherSampleNames']\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div>\n            <table class=\"submit\">\n                <tr>\n                    <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                        <button (click)=\"delete()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"!readyToSubmit()\" (click)=\"submit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NanomaterialentityComponent } from './nanomaterialentity.component';\nimport { NanomaterialentityRoutingModule } from './nanomaterialentity-routing.module';\n\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n\n@NgModule({\n    declarations: [NanomaterialentityComponent],\n    imports: [\n      CommonModule,\n      NanomaterialentityRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule,\n      FileModule\n    ]\n  })\nexport class NanomaterialentityModule { }\n"],"names":["EventEmitter","NanomaterialService","constructor","setComposingElementsArray","cea","composingElementsArray","getComposingElementsArray","setNewComposingElementShow","newComposingElementShowEmitter","emit","editComposingElementShowEmitter","setNewComposingElementHide","setEditComposingElementShow","setEditComposingElementHide","i","editComposingElementCancelEmitter","editComposingElement","element","editComposingElementIndexEmitter","getNanomaterialEditData","nanomaterialEditData","setNanomaterialEditData","nmsData","getNanomaterialSetupData","nanomaterialSetupData","setNanomaterialSetupData","getNanoMaterialSampleId","nanomaterialSampleId","setNanoMaterialSampleId","nmsId","getNanoMaterialDataId","nanomaterialDataId","setNanoMaterialDataId","nmdId","setNanoMaterialSampleDescription","nmsDec","nanomaterialDescription","getNanoMaterialSampleDescription","setNewNanomaterialType","type","sampleId","description","newNanomaterialType","newNanomaterialTypeEmitter","getsetNewNanomaterialType","factory","providedIn","RouterModule","NanomaterialentityComponent","routes","path","component","NanomaterialentityRoutingModule","forChild","imports","exports","Consts","Util","Properties","i0","ctx_r20","navigationService","router","route","apiService","nanomaterialService","HELP_URL_SAMPLE_COMPOSITION_NANOMATERIAL","ngOnInit","setCurrentSelectedItem","params","subscribe","dataId","doGet","QUERY_NANOMATERIAL_SETUP","data","setupData","SAMPLE_TOOLS","CURRENT_SAMPLE_ID","errors","QUERY_NANOMATERIAL_EDIT","dataTrailer","JSON","parse","stringify","setupNanomaterial","addInherentFunction","inherentFunctionIndex","inherentFunction","modality","setTimeout","document","getElementById","scrollIntoView","addComposingElement","composingElementIndex","composingElement","name","pubChemDataSourceName","valueUnit","molecularFormulaType","addOtherValue","field","currentValue","currentDropdownValues","cancelComposingElement","cancelInherentFunction","changeFile","newItem","convertDomainEntityFieldsToNullAndStrings","fieldsToIgnore","domainEntityKeys","Object","keys","forEach","item","domainEntity","indexOf","toString","convertToString","event","target","id","value","delete","confirm","doPost","QUERY_NANOMATERIAL_DELETE","navigate","error","deleteComposingElement","simpleCompBean","composingElements","splice","QUERY_REMOVE_COMPOSING_ELEMENT","setupDataTrailer","deleteInherentFunction","index","deepCopy","editInherentFunction","fIndex","iFunction","getError","readyToSubmit","submissionStatus","reset","resetStatus","saveComposingElement","SAVE_COMPOSING_ELEMENT","saveInherentFunction","push","inherentFunctionHasType","functionType","func","inherentFunctionDisplayString","saveOther","addDropdownItem","setValue","setupDomainEntity","sequence","branch","generation","averageDiameter","averageDiameterUnit","numberOfCarbon","isPolymerized","polymerName","isCrossLinked","initiator","crossLinkDegree","averageLength","diameter","averageLengthUnit","diameterUnit","chirality","wallType","files","submit","QUERY_NANOMATERIAL_UPDATE","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","OtherDropdownModule","FileModule","NanomaterialentityModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}