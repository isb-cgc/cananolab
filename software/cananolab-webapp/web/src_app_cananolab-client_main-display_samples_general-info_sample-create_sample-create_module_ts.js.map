{"version":3,"file":"src_app_cananolab-client_main-display_samples_general-info_sample-create_sample-create_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-create/sample-create.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleCreateComponent } from './sample-create.component';\nconst routes: Routes = [{ path: '', component: SampleCreateComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleCreateRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../../constants';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, Navigation } from '@angular/router';\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\nimport { Properties } from 'src/assets/properties';\n@Component( {\n    selector: 'canano-sample-create',\n    templateUrl: './sample-create.component.html',\n    styleUrls: ['./sample-create.component.scss']\n} )\nexport class SampleCreateComponent implements OnInit{\n    currentDropdownValues = {};\n    data;\n    dataTrailer;\n    special_message;\n    nav: Navigation;\n    errors = {};\n    helpUrl = Consts.HELP_URL_SAMPLE_CREATE;\n    pointOfContact;\n    pointOfContactIndex;\n    piiConfirmed = false;\n    constructor(private apiService: ApiService, private httpClient: HttpClient, private router: Router) {\n        // WJRL 12/7/22: Fixing #211. If we get here with extra state from the router, we have a message\n        // we need to display (that a sample was successfully deleted). We need to get the nav now, since\n        // it will return null state if we get it on init, when navigation is completed.\n        this.nav = this.router.getCurrentNavigation()\n    }\n\n    ngOnInit(): void{\n        this.piiConfirmed = false;\n        setTimeout(() => {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        // WJRL 12/7/22: Hard to know how this is getting called, so be super-cautious about what to expect:\n        if ((this.nav !== null) && (this.nav !== undefined)) {\n            if ((this.nav.extras !== null) && (this.nav.extras !== undefined)) {\n                if ((this.nav.extras.state !== null) && (this.nav.extras.state !== undefined)) {\n                    const state = this.nav.extras.state as { data: string };\n                    this.errors['error'] = [state['data']];\n                }\n            }\n        }\n        this.apiService.doGet(Consts.QUERY_SAMPLE_SUBMISSION_SETUP, '').subscribe(data => {\n            this.data = data;\n            this.data['sampleId'] = 0;\n            this.pointOfContact = {dirty: true, organization: {name: ''}, address: {}, role: ''};\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        },\n        errors => {\n            this.errors = errors;\n        })\n    }\n\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    };\n\n    addPointOfContact() {\n        this.pointOfContactIndex = -1;\n    }\n\n    reset() {\n        this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n        this.pointOfContact = {dirty: true, organization:{name: ''}, address: {}, role: ''};\n        this.errors = {};\n        this.piiConfirmed = false;\n    }\n\n    onSaveSample(){\n        this.data.pointOfContacts.push(this.pointOfContact);\n        this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_SAVE, this.data).subscribe(data=> {\n            if( data['errors'].length > 0 ){\n                this.errors['error'] = data['errors'];\n            }else{\n                this.router.navigate( ['home/samples/sample', data.sampleId] );\n            }\n        },\n        errors => {\n            this.errors = errors;\n        })\n    }\n\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'], newItem['value'])\n            this.setValue(newItem['field'], newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'], newItem['value']);\n        }\n    };\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"'Create Sample'\"\n>\n</canano-main-display-heading>\n<div class=\"mainSection\" *ngIf=\"data\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <form name=\"createSampleForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"sampleName\">\n                            Sample Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input [(ngModel)]=\"data.sampleName\" name=\"data.sampleName\" id=\"data.sampleName\" type=\"text\" size=\"100\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"pointOfContact\">\n                            Point of Contact*\n                        </label>\n                    </td>\n                    <td>\n                        <div class=\"mainBorder\" id=\"pocForm\">\n                            <table class=\"dataMain\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.organization.name\">\n                                            Organization Name*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('pointOfContact.organization.name',pointOfContact.organization.name)\" name=\"pointOfContact.organization.name\" id=\"pointOfContact.organization.name\" [(ngModel)]=\"pointOfContact.organization.name\">\n                                            <option [ngValue]=\"''\">--Select--</option>\n                                            <option *ngFor=\"let org of data.organizationNamesForUser\" [ngValue]=\"org\">\n                                                {{org}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"pointOfContact.organization.name ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Organization Name'\" [value]=\"currentDropdownValues['pointOfContact.organization.name']\" [field]=\"'pointOfContact.organization.name'\" [array]=\"'data.organizationNamesForUser'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.role\">\n                                            Role\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <select (ngModelChange)=\"addOtherValue('pointOfContact.role',pointOfContact.role)\" name=\"pointOfContact.role\" id=\"pointOfContact.role\" [(ngModel)]=\"pointOfContact['role']\">\n                                            <option [ngValue]=\"''\">--Select--</option>\n                                            <option *ngFor=\"let role of data.contactRoles\" [ngValue]=\"role\">\n                                                {{role}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"pointOfContact.role ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Role'\" [value]=\"currentDropdownValues['pointOfContact.role']\" [field]=\"'pointOfContact.role'\" [array]=\"'data.contactRoles'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.firstName\">\n                                            First Name\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.firstName\" id=\"pointOfContact.firstName\" [(ngModel)]=\"pointOfContact.firstName\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.middleInitial\">\n                                            Middle Initial\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.middleInitial\" id=\"pointOfContact.middleInitial\" [(ngModel)]=\"pointOfContact.middleInitial\" size=\"4\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.lastName\">\n                                            Last Name\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.lastName\" id=\"pointOfContact.lastName\" [(ngModel)]=\"pointOfContact.lastName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.phoneNumber\">\n                                            Phone Number\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.phoneNumber\" id=\"pointOfContact.phoneNumber\" [(ngModel)]=\"pointOfContact.phoneNumber\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.email\">\n                                            Email\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <input type=\"text\" name=\"pointOfContact.email\" id=\"pointOfContact.email\" [(ngModel)]=\"pointOfContact.email\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.line1\">\n                                            Address Line 1\n                                        </label>\n                                    </td>\n                                    <td colspan=\"5\">\n                                        <input type=\"text\" name=\"pointOfContact.address.line1\" id=\"pointOfContact.address.line1\" [(ngModel)]=\"pointOfContact.address.line1\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.line2\">\n                                            Address Line 2\n                                        </label>\n                                    </td>\n                                    <td colspan=\"5\">\n                                        <input type=\"text\" name=\"pointOfContact.address.line2\" id=\"pointOfContact.address.line2\" [(ngModel)]=\"pointOfContact.address.line2\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.city\">\n                                            City\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.address.city\" id=\"pointOfContact.address.city\" [(ngModel)]=\"pointOfContact.address.city\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.stateProvince\">\n                                            State\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.address.stateProvince\" id=\"pointOfContact.address.stateProvince\" [(ngModel)]=\"pointOfContact.address.stateProvince\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.zip\">\n                                            Zip/Postal Code\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"pointOfContact.address.zip\" id=\"pointOfContact.address.zip\" [(ngModel)]=\"pointOfContact.address.zip\" size=\"10\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"pointOfContact.address.country\">\n                                            Country\n                                        </label>\n                                    </td>\n                                    <td colspan=\"5\">\n                                        <input type=\"text\" name=\"pointOfContact.address.country\" id=\"pointOfContact.address.country\" [(ngModel)]=\"pointOfContact.address.country\">\n                                    </td>\n                                </tr>\n                            </table>\n                            <br>\n                             <div style=\"width:900px\">\n                                <div>\n                                    Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                                    points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                                </div>\n                                <br>\n                                <div>\n                                    <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                                    <b> * I have read and understood the message above.</b>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n\n            </table>\n        </div>\n        <br />\n        <div>\n            <table class=\"submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"data.sampleName==''||pointOfContact.name==''||pointOfContact.role==''||!piiConfirmed\" (click)=\"onSaveSample()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Save</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n\n<!-- <canano-point-of-contact-create\n    [poc]=pointOfContacts\n    [sampleData]=\"organizationNames\"\n    [sampleName]=\"sampleName\"\n></canano-point-of-contact-create> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleCreateComponent } from './sample-create.component';\nimport { SampleCreateRoutingModule } from './sample-create-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\n\n\n@NgModule({\n    declarations: [SampleCreateComponent],\n    imports: [\n      CommonModule,\n      SampleCreateRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule\n    ]\n  })\n  export class SampleCreateModule { }\n\n"],"names":["RouterModule","SampleCreateComponent","routes","path","component","SampleCreateRoutingModule","forChild","imports","exports","Consts","Properties","i0","constructor","apiService","httpClient","router","HELP_URL_SAMPLE_CREATE","nav","getCurrentNavigation","ngOnInit","piiConfirmed","setTimeout","SAMPLE_TOOLS","undefined","extras","state","errors","doGet","QUERY_SAMPLE_SUBMISSION_SETUP","subscribe","data","pointOfContact","dirty","organization","name","address","role","dataTrailer","JSON","parse","stringify","addOtherValue","field","currentValue","currentDropdownValues","addPointOfContact","pointOfContactIndex","reset","onSaveSample","pointOfContacts","push","doPost","QUERY_SAMPLE_POC_UPDATE_SAVE","length","navigate","sampleId","saveOther","newItem","addDropdownItem","setValue","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","OtherDropdownModule","SampleCreateModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}