{"version":3,"file":"src_app_cananolab-client_main-display_samples_synthesis_materials_materials_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/synthesis/materials/materials-routing.module.ts","./src/app/cananolab-client/main-display/samples/synthesis/materials/materials.component.ts","./src/app/cananolab-client/main-display/samples/synthesis/materials/materials.component.html","./src/app/cananolab-client/main-display/samples/synthesis/materials/materials.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialsComponent } from './materials.component';\nconst routes: Routes = [{ path: '', component: MaterialsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MaterialsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\n\n@Component({\n  selector: 'canano-materials',\n  templateUrl: './materials.component.html',\n  styleUrls: ['./materials.component.scss']\n})\nexport class MaterialsComponent implements OnInit {\n    materialElementIndex;\n    consts=Consts;\n    materialElement;\n    currentDropdownValues = {};\n    currentField;\n    data;\n    dataTrailer;\n    dataId;\n    errors = {};\n    helpUrl = Consts.HELP_URL_SAMPLE_SYNTHESIS;\n    inherentFunctionIndex;\n    inherentFunction;\n    resetStatus=false;\n    otherValue;\n    sampleId;\n    setupData;\n    toolHeadingNameManage = ' Sample Synthesis - Material';\n\n    constructor(\n        private apiService: ApiService,\n        private navigationService: NavigationService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) { }\n\n    ngOnInit(): void {\n        this.navigationService.setCurrentSelectedItem(4);\n        this.route.params.subscribe((params: Params) => {\n            this.sampleId = params['sampleId'];\n            this.dataId = params['dataId'];\n            this.apiService\n                .doGet(\n                    Consts.QUERY_SYNTHESIS_MATERIAL_SETUP,\n                    'sampleId=' + this.sampleId\n                )\n                .subscribe(\n                    (data) => {\n                        this.setupData = data;\n                        Properties.SAMPLE_TOOLS = true;\n                        Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                    },\n                    (errors) => {\n                        this.errors = errors;\n                    }\n                );\n\n            if (this.dataId) {\n                this.apiService\n                    .doGet(\n                        Consts.QUERY_SYNTHESIS_MATERIAL_EDIT,\n                        'sampleId=' + this.sampleId + '&synMaterialId=' + this.dataId\n                    )\n                    .subscribe(\n                        (data) => {\n                            this.data = data;\n                            this.errors = {};\n                        },\n                        (errors) => {\n                            this.errors = errors;\n                        }\n                    );\n            } else {\n                this.setupSynthesisMaterial();\n            }\n        });\n    }\n\n    setupSynthesisMaterial() {\n        this.data = {\n            description: '',\n            type: '',\n            sampleId: this.sampleId,\n            materialElements: [],\n            fileElements: [],\n            simpleProtocol: { displayName: '', domainFileId: '', domainFileUri: '', domainId: '' }\n        };\n        this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n    }\n\n    addInherentFunction() {\n        this.inherentFunctionIndex=-1;\n        this.inherentFunction={type:\"\",description:\"\"};\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n    addMaterialElement() {\n        this.materialElementIndex = -1;\n        this.materialElement = {\n            type: '',\n            chemicalName: '',\n            pubChemDataSource: '',\n            valueUnit: '',\n            molecularFormulaType: '',\n            supplier: { supplierName: '', lot: ''},\n            inherentFunctionList: [],\n        };\n        setTimeout(function () {\n            document.getElementById('materialElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    addFile() {\n        this.materialElementIndex = -1;\n        this.materialElement = {\n            type: '',\n            chemicalName: '',\n            pubChemDataSourceName: '',\n            valueUnit: '',\n            molecularFormulaType: '',\n            supplier: {},\n            inherentFunctionList: [],\n        };\n        setTimeout(function () {\n            document.getElementById('materialElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    }\n\n    cancelMaterialElement() {\n        this.materialElementIndex = null;\n        this.inherentFunctionIndex = null;\n    }\n\n    cancelInherentFunction() {\n        this.inherentFunctionIndex=null;\n    }\n\n    changeFile(newItem: Object) {\n        if (newItem['type'] == 'save' || newItem['type'] == 'delete') {\n            this.data = newItem['data'];\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        }\n    }\n\n    delete() {\n        if (confirm('Are you sure you wish to delete this material?')) {\n            setTimeout(() => {\n                this.apiService\n                    .doPost(Consts.QUERY_SYNTHESIS_MATERIAL_DELETE, this.data)\n                    .subscribe(\n                        (data) => {\n                            this.router.navigate([\n                                'home/samples/synthesis',\n                                this.sampleId,\n                            ]);\n                        },\n                        (error) => {\n                            this.errors = error;\n                        }\n                    );\n            }, 200);\n        }\n    }\n\n    saveMaterialElement() {\n        if (this.materialElementIndex == -1) {\n            this.data['materialElements'].push(this.materialElement);\n            this.data['materialElementBeingEdited'] = this.materialElement;\n        } else {\n            this.data['materialElements'][this.materialElementIndex] =\n                this.materialElement;\n            this.data['materialElementBeingEdited'] = this.materialElement;\n        }\n        this.materialElementIndex = null;\n    }\n\n    deleteMaterialElement() {\n        if (\n            confirm('Are you sure you wish to delete this material element?')\n        ) {\n            this.data.materialElementBeingEdited = this.materialElement;\n            this.data.materialElements.splice(\n                this.data.materialElements[this.materialElementIndex],\n                1\n            );\n            this.materialElementIndex = null;\n        }\n    }\n\n    deleteInherentFunction() {\n        if (confirm(\"Are you sure you wish to delete this inherent function?\")) {\n            this.materialElement.inherentFunctionList.splice(this.inherentFunctionIndex,1)\n        };\n        this.inherentFunctionIndex=null;\n    }\n\n    editMaterialElement(index, element) {\n        this.materialElement = JSON.parse(JSON.stringify(element));\n        this.materialElementIndex = index;\n        setTimeout(function () {\n            document.getElementById('materialElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    editInherentFunction(fIndex,iFunction) {\n        this.inherentFunctionIndex=fIndex;\n        this.inherentFunction=JSON.parse(JSON.stringify(iFunction));\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n    getError(error:Object) {\n        this.errors=error;\n    }\n\n    readyToSubmit() {\n        let submissionStatus = true;\n        // if (this.data.type == 'biopolymer') {\n        //     if (\n        //         this.data.domainEntity.name == '' ||\n        //         this.data.domainEntity.name == null\n        //     )\n        //         submissionStatus = false;\n        //     if (\n        //         this.data.domainEntity.type == '' ||\n        //         this.data.domainEntity.type == null\n        //     )\n        //         submissionStatus = false;\n        // }\n        if (this.data.simpleProtocol.displayName == '') submissionStatus = false;\n        return submissionStatus;\n    }\n\n    reset() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n        this.materialElementIndex=null;\n        this.inherentFunctionIndex=null;\n        this.resetStatus=true;\n    }\n\n    saveInherentFunction() {\n        if (this.inherentFunctionIndex==-1) {\n            if (!this.materialElement.inherentFunctionList) {\n                this.materialElement['inherentFunctionList']=[];\n            }\n            this.materialElement.inherentFunctionList.push(this.inherentFunction);\n        }\n        else {\n            this.materialElement.inherentFunctionList[this.inherentFunctionIndex]=this.inherentFunction;\n        }\n        this.inherentFunctionIndex=null;\n    }\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'], newItem['value']);\n            this.setValue(newItem['field'], newItem['value']);\n        } else {\n            this.setValue(newItem['field'], newItem['value']);\n        }\n    }\n\n    setupDataTrailer(data) {\n        this.dataTrailer = JSON.parse(JSON.stringify(data));\n    }\n\n    prepareSubmitData() {\n        if (this.data.simpleProtocol.displayName != '') {\n            this.data.simpleProtocol = this.setupData.protocolLookup.find(\n                e => e.displayName == this.data.simpleProtocol.displayName);\n        }\n    }\n\n    submit() {\n        this.prepareSubmitData();\n        this.apiService\n            .doPost(Consts.QUERY_SYNTHESIS_MATERIAL_UPDATE, this.data)\n            .subscribe(\n                (data) => {\n                    this.router.navigate([\n                        'home/samples/synthesis',\n                        this.sampleId,\n                    ]);\n                },\n                (errors) => {\n                    this.errors = errors;\n                }\n            );\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\">\n</canano-main-display-heading>\n\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <form name=\"materialForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"protocolType\">\n                            Protocol*\n                        </label>\n                    </td>\n                    <td>\n                        <div>\n                            <select name=\"protocolType\" id=\"protocolType\" [(ngModel)]=\"data.simpleProtocol.displayName\">\n                                <option [ngValue]=\"''\">--Select--</option>\n                                <option *ngFor=\"let protocol of setupData['protocolLookup']\" [ngValue]=\"protocol.displayName\">\n                                    {{protocol.displayName}}\n                                </option>\n                            </select>\n                       </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"description\">\n                            Description\n                        </label>\n                    </td>\n                    <td>\n                        <textarea name=\"description\" id=\"description\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.description\">\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <br>\n\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        Materials\n                    </td>\n                    <td>\n                        <button type=\"button\" (click)=\"addMaterialElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.materialElements.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable properties\" *ngFor=\"let cElement of data.materialElements;let cIndex=index\">\n                            <tr>\n                                <th colspan=\"2\">\n                                    {{cElement.type}} (name:{{cElement.chemicalName}})\n                                </th>\n                                <th></th>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    PubChem ID\n                                </td>\n                                <td>\n                                    {{cElement.pubChemId}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editMaterialElement(cIndex,cElement)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Molecular Formula\n                                </td>\n                                <td colspan=\"2\">\n                                    {{cElement.molecularFormula}} ({{cElement.molecularFormulaType}})\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Description\n                                </td>\n                                <td colspan=\"2\">\n                                    {{cElement.description}}\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"cElement.inherentFunctionList\">\n                                <td class=\"label\">\n                                    Function\n                                </td>\n                                <td colspan=\"2\">\n                                    <div *ngFor=\"let function of cElement.inherentFunctionList\">\n                                        {{function.type}}:{{function.description}}\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"materialElementIndex!=null\" id=\"materialElementForm\">\n                    <td></td>\n                    <td>\n                        <div class=\"mainBorder\" style=\"background-color: #d3e4de;\">\n                            <table class=\"dataMain\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cType\">\n                                            Material Type*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select id=\"cType\" name=\"cType\" [(ngModel)]=\"materialElement.type\">\n                                            <option [ngValue]=\"''\" [selected]=\"materialElement.type==''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.materialTypes\" [selected]=\"type==materialElement.type\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"cName*\">\n                                            Chemical Name*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"cName\" [(ngModel)]=\"materialElement.chemicalName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cPubchemDataSource\">\n                                            PubChem Data Source\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select id=\"cPubchemDataSource\" name=\"cPubchemDataSource\" [(ngModel)]=\"materialElement.pubChemDataSource\">\n                                            <option [ngValue]=\"''\" [selected]=\"materialElement.pubChemDataSource===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.pubChemDataSources\" [selected]=\"type==materialElement.pubChemDataSource\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pubchemid\">\n                                            PubChem ID\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" id=\"pubchemid\" name=\"pubChemId\" [(ngModel)]=\"materialElement.pubChemId\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"amount\">\n                                            Amount\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" name=\"amount\" id=\"amount\" [(ngModel)]=\"materialElement.value\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"amountunit\">\n                                            Amount Unit\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select name=\"valueUnit\" id=\"valueUnit\" [(ngModel)]=\"materialElement.valueUnit\">\n                                            <option [ngValue]=\"''\" [selected]=\"materialElement.valueUnit===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.amountUnits\n\" [selected]=\"materialElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormulaType\">\n                                            Molecular Formula Type\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select name=\"molecularFormulaType\" id=\"molecularFormulaType\" [(ngModel)]=\"materialElement.molecularFormulaType\">\n                                            <option [ngValue]=\"''\" [selected]=\"materialElement.molecularFormulaType===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.formulaTypes\" [selected]=\"materialElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormula\">\n                                            Molecular Formula\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <textarea name=\"molecularFormula\" id=\"molecularFormula\" rows=\"2\" cols=\"40\" [(ngModel)]=\"materialElement.molecularFormula\">\n                                            {{materialElement.molecularFormula}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"supplierName\">\n                                            Supplier Name\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('materialElement.supplier.supplierName',materialElement.supplier.supplierName)\" id=\"supplierName\" name=\"supplierName\" [(ngModel)]=\"materialElement.supplier.supplierName\">\n                                            <option [ngValue]=\"''\" [selected]=\"materialElement.supplier.supplierName==supplierName\">--Select--</option>\n                                            <option *ngFor=\"let supplierName of setupData.supplierNames\" [selected]=\"supplierName==materialElement.supplier.supplierName\">\n                                                {{supplierName}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"materialElement.supplier.supplierName ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['materialElement.supplier.supplierName']\" [field]=\"'materialElement.supplier.supplierName'\" [array]=\"'setupData.supplierNames'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"supplierLot\">\n                                            Lot\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <textarea name=\"supplierLot\" id=\"supplierLot\" rows=\"2\" cols=\"40\" [(ngModel)]=\"materialElement.supplier.lot\">\n                                            {{materialElement.supplier.lot}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cDescription\">\n                                            Material Description\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <textarea name=\"cDescription\" id=\"cDescription\" rows=\"3\" cols=\"65\" [(ngModel)]=\"materialElement.description\">\n                                            {{materialElement.description}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"inherentFunction\">\n                                            Inherent Functions\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <button type='button' (click)=\"addInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                    </td>\n                                </tr>\n                                <ng-container *ngIf=\"materialElement.inherentFunctionList\">\n                                    <tr *ngIf=\"materialElement.inherentFunctionList.length\">\n                                        <td></td>\n                                        <td colspan=\"3\">\n                                            <table class=\"dataTable\">\n                                                <tr>\n                                                    <th>Function Type</th>\n                                                    <th>Description</th>\n                                                    <th></th>\n                                                </tr>\n                                                <tr *ngFor=\"let iFunction of materialElement.inherentFunctionList;let fIndex=index\">\n                                                    <td>\n                                                        {{iFunction.type}}\n                                                    </td>\n                                                    <td>\n                                                        {{iFunction.description}}\n                                                    </td>\n                                                    <td>\n                                                        <button (click)=\"editInherentFunction(fIndex,iFunction)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <tr *ngIf=\"inherentFunctionIndex!=null\" id=\"inherentFunctionForm\">\n                                    <td>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <div class=\"mainBorder\">\n                                            <table class=\"dataMain\">\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"functionType\">\n                                                            Type\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <select name=\"type\" id=\"functionType\" [(ngModel)]=\"inherentFunction.type\">\n                                                            <option [ngValue]=\"''\" [selected]=\"inherentFunction.type===''\">--Select--</option>\n                                                            <option *ngFor=\"let type of setupData.inherentFunctionTypes\" [selected]=\"type==inherentFunction.type\">\n                                                                {{type}}\n                                                            </option>\n                                                        </select>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"inherentFunction.description\">\n                                                            Description\n                                                        </label>\n                                                    </td>\n                                                    <td colspan=\"3\">\n                                                        <textarea name=\"inherentFunction.description\" id=\"inherentFunction.description\" [(ngModel)]=\"inherentFunction.description\" rows=\"5\" cols=\"50\">\n                                                            {{inherentFunction.description}}\n                                                        </textarea>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <button *ngIf=\"inherentFunctionIndex!=-1\" (click)=\"deleteInherentFunction()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                    </td>\n                                                    <td colspan=\"3\" class=\"right\">\n                                                        <button [disabled]=\"inherentFunction.type==''\" (click)=\"saveInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                        <button (click)=\"cancelInherentFunction()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteMaterialElement()\" *ngIf=\"materialElementIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td></td>\n                                    <td></td>\n                                    <td class=\"right\">\n                                        <button [disabled]=\"materialElement.type==''||materialElement.chemicalName==''\" (click)=\"saveMaterialElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelMaterialElement()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        File\n                    </td>\n                    <td>\n                        <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\"  (changeFile)=\"changeFile($event)\" [nanomaterial]=\"false\" [saveUrl]=\"consts.QUERY_SYNTHESIS_MATERIAL_SAVE_FILE\" [deleteUrl]=\"consts.QUERY_SYNTHESIS_MATERIAL_REMOVE_FILE\" [sampleId]=\"sampleId\" [data]=\"data\" [fileVariable]=\"'fileBeingEdited'\" [fileArray]=\"'fileElements'\">\n                        </canano-file>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n       <!--  <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"otherSampleNames\">\n                            Copy to other samples with the same primary organization?\n                        </label>\n                    </td>\n                    <td>\n                        <select class=\"multiple\" name=\"otherSampleNames\" id=\"otherSampleNames\" multiple size=\"10\" [(ngModel)]=\"data.otherSampleNames\">\n                            <option *ngFor=\"let type of setupData['otherSampleNames']\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table> \n         </div><br /> -->\n        <div>\n            <table class=\"submit\">\n                <tr>\n                    <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                        <button (click)=\"delete()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"!readyToSubmit()\" (click)=\"submit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialsRoutingModule } from './materials-routing.module';\nimport { MaterialsComponent } from './materials.component';\n\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n\n@NgModule({\n  declarations: [MaterialsComponent],\n  imports: [\n    CommonModule,\n    MaterialsRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileModule\n  ]\n})\nexport class MaterialsModule { }\n"],"names":["RouterModule","MaterialsComponent","routes","path","component","MaterialsRoutingModule","forChild","imports","exports","Properties","Consts","i0","constructor","apiService","navigationService","router","route","HELP_URL_SAMPLE_SYNTHESIS","ngOnInit","setCurrentSelectedItem","params","subscribe","sampleId","dataId","doGet","QUERY_SYNTHESIS_MATERIAL_SETUP","data","setupData","SAMPLE_TOOLS","CURRENT_SAMPLE_ID","errors","QUERY_SYNTHESIS_MATERIAL_EDIT","setupSynthesisMaterial","description","type","materialElements","fileElements","simpleProtocol","displayName","domainFileId","domainFileUri","domainId","dataTrailer","JSON","parse","stringify","addInherentFunction","inherentFunctionIndex","inherentFunction","setTimeout","document","getElementById","scrollIntoView","addMaterialElement","materialElementIndex","materialElement","chemicalName","pubChemDataSource","valueUnit","molecularFormulaType","supplier","supplierName","lot","inherentFunctionList","addFile","pubChemDataSourceName","addOtherValue","field","currentValue","currentDropdownValues","cancelMaterialElement","cancelInherentFunction","changeFile","newItem","delete","confirm","doPost","QUERY_SYNTHESIS_MATERIAL_DELETE","navigate","error","saveMaterialElement","push","deleteMaterialElement","materialElementBeingEdited","splice","deleteInherentFunction","editMaterialElement","index","element","editInherentFunction","fIndex","iFunction","getError","readyToSubmit","submissionStatus","reset","resetStatus","saveInherentFunction","saveOther","addDropdownItem","setValue","setupDataTrailer","prepareSubmitData","protocolLookup","find","e","submit","QUERY_SYNTHESIS_MATERIAL_UPDATE","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","FileModule","MaterialsModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}