{"version":3,"file":"src_app_cananolab-client_main-display_samples_general-info_sample-copy_sample-copy_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-copy/sample-copy.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleCopyComponent } from './sample-copy.component';\nconst routes: Routes = [{ path: '', component: SampleCopyComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleCopyRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../../constants';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Properties } from 'src/assets/properties';\n@Component( {\n    selector: 'canano-sample-copy',\n    templateUrl: './sample-copy.component.html',\n    styleUrls: ['./sample-copy.component.scss']\n} )\nexport class SampleCopyComponent implements OnInit{\n\n    helpUrl = Consts.HELP_URL_SAMPLE_COPY;\n    toolHeadingNameSearchSample = 'Copy Sample';\n\n    sampleName = '';\n    sampleId;\n    newSampleName = '';\n    errors = {};\n    sampleNames;\n    copyingMessage: string = Consts.copyingMessage;\n    copying: boolean = false;\n    showNamesMenu = false;\n\n    constructor( private activatedRoute: ActivatedRoute, private apiService: ApiService, private router: Router) {\n    }\n\n    ngOnInit(): void{\n        setTimeout(() => {\n            Properties.SAMPLE_TOOLS = false;\n        })\n\n        this.activatedRoute.params.subscribe(data => {\n            this.sampleId = data['sampleId'];\n            if (this.sampleId) {\n                this.apiService.doGet(Consts.QUERY_SAMPLE_GET_SAMPLE_NAME, 'sampleId=' + this.sampleId).subscribe(data => {\n                    this.sampleName = data['sampleName']\n                })\n            }\n        })\n        this.init();\n    }\n\n    init(){\n        this.apiService.doGet( Consts.QUERY_SAMPLE_GET_NAMES, '' ).subscribe(\n            data => {\n                this.sampleNames = data;\n            },\n            ( err ) => {\n                console.log( 'ERROR SampleCopyComponent init QUERY_SAMPLE_GET_NAMES: ', err );\n            }\n        );\n    }\n\n    browseClicked(){\n        this.showNamesMenu = ! this.showNamesMenu;\n    }\n\n    navigateToSampleEdit( sampleId ){\n        this.router.navigate(['home/samples/sample', sampleId ]);  // @FIXME  Don't hard code these\n    }\n\n    selectSampleName( nm ){\n        this.sampleName = nm;\n    }\n\n    reset() {\n        this.sampleName = '';\n        this.newSampleName = '';\n    }\n\n    onSubmitCopyClicked(){\n        this.errors = {};\n        this.copying = true;\n        this.apiService.doPost( Consts.QUERY_SAMPLE_COPY, { 'newSampleName': this.newSampleName, 'sampleName': this.sampleName } ).subscribe(\n            data => {\n                this.copying = false;\n                this.router.navigate(['home/samples/sample', data.sampleId])\n            },\n            ( err ) => {\n                this.copying = false;\n                this.errors = err;\n            }\n        );\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameSearchSample\"\n>\n</canano-main-display-heading>\n<canano-loader [loading]=\"copying\" [message]=\"copyingMessage\"></canano-loader>\n<div class=\"mainSection\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <div class=\"mainBorder\">\n    <table class=\"dataMain copy\">\n        <tr>\n            <td class=\"label\">\n                <label for=\"sampleName\">\n                    Existing Sample*\n                </label>\n            </td>\n            <td>\n                <input type=\"text\" name=\"sampleName\" id=\"sampleName\" [(ngModel)]=\"sampleName\" size=\"60\">\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                <label for=\"newSampleName\">\n                    New Sample*\n                </label>\n            </td>\n            <td>\n                <input type=\"text\" name=\"newSampleName\" id=\"newSampleName\" [(ngModel)]=\"newSampleName\" size=\"60\">\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                <label for=\"existingSamples\">\n                    Existing Samples\n                </label>\n            </td>\n            <td id=\"existingSamples\">\n                <span>\n                    <select class=\"multiple\" name=\"nameMenu\" id=\"nameMenu\" size=\"10\" [(ngModel)]=\"sampleName\">\n                            <option [ngValue]=\"nm\" *ngFor=\"let nm of sampleNames\" (click)=\"selectSampleName(nm)\">\n                                {{nm}}\n                            </option>\n                    </select>\n                </span>\n            </td>\n        </tr>\n    </table>\n</div>\n<div>\n    <table class=\"dataMain submit\">\n        <tr>\n            <td>\n                <button [disabled]=\"copying\" (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                <button [disabled]=\"sampleName=='' || newSampleName=='' || copying\" (click)=\"onSubmitCopyClicked()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n            </td>\n        </tr>\n    </table>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleCopyComponent } from './sample-copy.component';\nimport { SampleCopyRoutingModule } from './sample-copy-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [SampleCopyComponent],\n    imports: [\n      CommonModule,\n      SampleCopyRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class SampleCopyModule { }\n\n"],"names":["RouterModule","SampleCopyComponent","routes","path","component","SampleCopyRoutingModule","forChild","imports","exports","Consts","Properties","i0","constructor","activatedRoute","apiService","router","HELP_URL_SAMPLE_COPY","copyingMessage","ngOnInit","setTimeout","SAMPLE_TOOLS","params","subscribe","data","sampleId","doGet","QUERY_SAMPLE_GET_SAMPLE_NAME","sampleName","init","QUERY_SAMPLE_GET_NAMES","sampleNames","err","console","log","browseClicked","showNamesMenu","navigateToSampleEdit","navigate","selectSampleName","nm","reset","newSampleName","onSubmitCopyClicked","errors","copying","doPost","QUERY_SAMPLE_COPY","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","SampleCopyModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}