{"version":3,"file":"src_app_cananolab-client_main-display_samples_synthesis_purification_purification_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/synthesis/purification/purification-routing.module.ts","./src/app/cananolab-client/main-display/samples/synthesis/purification/purification.component.ts","./src/app/cananolab-client/main-display/samples/synthesis/purification/purification.component.html","./src/app/cananolab-client/main-display/samples/synthesis/purification/purification.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PurificationComponent } from './purification.component';\nconst routes: Routes = [{ path: '', component: PurificationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PurificationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\n\n@Component({\n  selector: 'canano-purification',\n  templateUrl: './purification.component.html',\n  styleUrls: ['./purification.component.scss']\n})\nexport class PurificationComponent implements OnInit {\n    techniqueIndex;\n    consts=Consts;\n    technique;\n    currentDropdownValues = {};\n    currentField;\n    data;\n    dataTrailer;\n    dataId;\n    errors = {};\n    helpUrl = Consts.HELP_URL_SAMPLE_SYNTHESIS;\n    instrumentIndex;\n    instrument;\n    instrumentTypes;\n\n    columnHeader;\n    columnHeaderTrailer;\n    columnOrder;\n    columnHeaderIndex;\n\n    findingIndex;\n    currentFinding\n    importingCSV=false;\n    rowData;\n    csvColumnMaxCount = 25; // Maximum number of columns allowed\n    csvMaxNumberOfLines = 5000; // Maximum number of rows allowed\n    csvMaxLenOfEntry = 400;\n    runaway = 10240; // A counter used to prevent an endless loop if something goes wrong.  @TODO needs a better name\n    csvDataColCount = 0;\n    csvDataObj;\n    csvDataRowCount;\n    csvImportError = '';\n\n    resetStatus=false;\n    otherValue;\n    sampleId;\n    setupData;\n    toolHeadingNameManage = ' Sample Synthesis - Purification';\n\n    constructor(\n        private apiService: ApiService,\n        private navigationService: NavigationService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private ngxCsvParser: NgxCsvParser\n    ) { }\n\n    ngOnInit(): void {\n        this.navigationService.setCurrentSelectedItem(4);\n        this.route.params.subscribe((params: Params) => {\n            this.sampleId = params['sampleId'];\n            this.dataId = params['dataId'];\n            this.apiService\n                .doGet(\n                    Consts.QUERY_SYNTHESIS_PURIFICATION_SETUP,\n                    'sampleId=' + this.sampleId\n                )\n                .subscribe(\n                    (data) => {\n                        this.setupData = data;\n                        Properties.SAMPLE_TOOLS = true;\n                        Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                    },\n                    (errors) => {\n                        this.errors = errors;\n                    }\n                );\n\n            if (this.dataId) {\n                this.apiService\n                    .doGet(\n                        Consts.QUERY_SYNTHESIS_PURIFICATION_EDIT,\n                        'sampleId=' + this.sampleId + '&dataId=' + this.dataId\n                    )\n                    .subscribe(\n                        (data) => {\n                            this.data = data;\n                            this.errors = {};\n                        },\n                        (errors) => {\n                            this.errors = errors;\n                        }\n                    );\n            } else {\n                this.setupSynthesisPurification();\n            }\n        });\n    }\n\n    setupSynthesisPurification() {\n        this.data = {\n            yield: '',\n            type: '',\n            designMethodDescription: '',\n            analysis: '',\n            sampleId: this.sampleId,\n            simpleExperimentBeans: [],\n            fileElements: [],\n            purityBeans: [],\n            simpleProtocol: { displayName: '', domainFileId: '', domainFileUri: '', domainId: '' }\n        };\n        this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n    }\n\n    addInstrument() {\n        this.instrumentIndex=-1;\n        this.instrument={manufacturer:\"\", modelName: \"\", type:\"\"};\n        this.getInstrumentTypes();\n        setTimeout(function () {\n            document.getElementById('instrumentForm').scrollIntoView();\n        }, 100);\n    }\n\n    addTechnique() {\n        this.techniqueIndex = -1;\n        this.technique = {\n            techniqueType: '',\n            abbreviation: '',\n            description: '',\n            instruments: [],\n        };\n        setTimeout(function () {\n            document.getElementById('techniqueForm').scrollIntoView();\n        }, 100);\n    }\n\n    editColumnForm(column, index) {\n        this.columnHeaderIndex=index;\n        this.columnHeader=column;\n        this.columnHeaderTrailer=JSON.parse(JSON.stringify(this.columnHeader));\n\n        if (column.columnType) {\n            this.changeColumnType(column.columnType,false);\n            this.changeColumnName(column.name,false);\n        }\n        else {\n        }\n        this.columnHeader=JSON.parse(JSON.stringify(column));\n    };\n\n    changeColumnType(value,isDropdown) {\n        let url = this.apiService.doGet(Consts.QUERY_SYNTHESIS_GET_COLUMN_NAME_OPTIONS_BY_TYPE,'columnType='+value+'&charName='+this.data.name+'&assayType=');\n        url.subscribe(data=> {\n            this.errors={};\n            this.setupData.columnNameOptions=data;\n            if (isDropdown) {\n                this.columnHeader.name=null;\n            }\n        },\n        error=> {\n            this.errors=error;\n\n        })\n    };\n\n    changeColumnName(value, isDropdown) {\n        let url = this.apiService.doGet(Consts.QUERY_SYNTHESIS_GET_COLUMN_VALUE_UNIT_OPTIONS,'columnName='+value+'&conditionProperty=null');\n        url.subscribe(data=> {\n            this.errors={};\n            this.setupData.valueUnitOptions=data;\n            if (isDropdown) {\n                this.columnHeader.valueUnit=null;\n            }\n        },\n        error=> {\n            this.errors=error;\n        })\n    };\n\n    editColumnOrder() {\n        this.columnOrder=JSON.parse(JSON.stringify(this.currentFinding));\n    };\n\n    addFinding() {\n        this.findingIndex=-1;\n        setTimeout(function() {\n            document.getElementById('findingsEditForm').scrollIntoView();\n        },100);\n\n        this.currentFinding={\n            \"columnHeaders\":[],\n            \"dirty\":1,\n            \"numberOfColumns\":\"\",\n            \"numberOfRows\":\"\",\n            \"files\":[]\n        };\n    };\n\n    cancelColumnForm() {\n        this.columnHeaderIndex=null;\n    };\n\n    cancelColumnOrder() {\n        this.columnOrder=null;\n    }\n\n    cancelFinding() {\n        this.columnHeaderIndex=null;\n        this.findingIndex=null;\n        this.columnHeaderIndex=null;\n    };\n\n\n    deleteFinding() {\n        if (confirm('Are you sure you wish to delete this finding?')) {\n            this.columnHeaderIndex=null;\n            this.findingIndex=null;\n            let url = this.apiService.doPost(Consts.QUERY_SYNTHESIS_REMOVE_FINDING,this.currentFinding);\n            url.subscribe(data=> {\n                this.errors={};\n                this.data=data;\n                //???? this.setCharacterizationData();\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n    };\n\n    deleteFindingRow(index) {\n        if (confirm('Are you sure you wish to delete this finding row?')) {\n            this.currentFinding.rows.splice([index],1);\n        }\n    };\n\n    editFinding(index,finding) {\n        this.columnOrder=null;\n        this.currentFinding=JSON.parse(JSON.stringify(finding));\n        this.findingIndex=index;\n        setTimeout(function() {\n            document.getElementById('findingsEditForm').scrollIntoView();\n        },100);\n    };\n\n    importCSV(event) {\n        let csvFile = event.target.files.item(0);\n        this.ngxCsvParser.parse(csvFile, { header: false, delimiter: ',', encoding: 'utf8' })\n            .pipe().subscribe({\n                next: (result): void => {\n                    console.log('ngxCsvParser Result', result);\n                    this.csvDataObj = result;\n\n                    if (this.csvDataObj === null) {\n                        alert('CSV import parse error: ' + this.csvImportError);\n                        return;\n                    }\n\n                    this.csvDataColCount = 0;\n                    this.csvDataRowCount = this.csvDataObj.length;\n                    for (var y = 0; y < this.csvDataRowCount; y++) {\n                        if (this.csvDataObj[y].length > this.csvDataColCount) {\n                            this.csvDataColCount = this.csvDataObj[y].length;\n                        }\n                    }\n                    this.currentFinding.numberOfColumns = this.csvDataColCount;\n                    this.currentFinding.numberOfRows = this.csvDataRowCount;\n\n                    this.updateRowsColsForFinding();\n\n                },\n                error: (error: NgxCSVParserError): void => {\n                  console.log('ngxCsvParser Error', error);\n                }\n            });\n    }\n\n    createArray(len) {\n        let arr = new Array(len || 0),\n            i = len;\n        if (arguments.length > 1) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            while (i--) arr[len - 1 - i] = this.createArray.apply(this, args);\n        }\n        return arr;\n    }\n\n    validateFindingCellInput(colType, cellData) {\n        if ((colType === null) || (colType === undefined)) {\n            return false;\n        }\n        return (\n            (colType === 'datum') &&\n            (cellData !== null) && (isNaN(cellData.replace(/(d|f)$/, '')))\n        );\n    }\n\n    updateRowsColsForFinding = function () {\n        this.badFindingCell = this.createArray(this.csvDataColCount, this.csvDataRowCount);\n\n        let url = this.apiService.doPost(Consts.QUERY_SYNTHESIS_NEW_FINDING,this.currentFinding);\n        url.subscribe(data=> {\n                data = data;\n                if (data.rows[this.csvDataRowCount - 1] === undefined) {\n                    this.csvDataRowCount = data.numberOfRows;\n                }\n\n                for (var y = 0; y < this.csvDataRowCount; y++) {\n\n                    for (var x = 0; x < this.csvDataColCount; x++) {\n                        // If the user has reduced the number of columns, make sure we don't try to update columns that no longer exist.\n                        if ((data.rows[y].cells[x] !== null) && (data.rows[y].cells[x] !== undefined)) {\n                            data.rows[y].cells[x].value = Object(this.csvDataObj[y][x]);\n                            if (x < this.currentFinding.length) {\n                                data.rows[y].cells[x].datumOrCondition = this.currentFinding.columnHeaders[x].columnType;\n                            }\n                            // When the column type is set or reset, check all cell contents for valid entries for each column, one row at a time.\n                            if (x < this.currentFinding.columnHeaders.length) {\n                                this.badFindingCell[x][y] = this.validateFindingCellInput(this.currentFinding.columnHeaders[x].columnType,\n                                    data.rows[y].cells[x].value);\n\n                            }\n                            // If there are fewer column types/header set than there are columns.\n                            // Data put in a cell with a column that does not have it's type set is never considered invalid.\n                            else {\n                                this.badFindingCell[x][y] = false;\n                            }\n                        }\n                    }\n                }\n\n                // If there are already column headers set, preserve them.\n                for (var colX = 0; colX < this.csvDataColCount; colX++) {\n                    if ((this.currentFinding.columnHeaders[colX] !== null) && (this.currentFinding.columnHeaders[colX] !== undefined)) {\n                        data.columnHeaders[colX] = this.currentFinding.columnHeaders[colX];\n                    }\n                 }\n                this.currentFinding = data;\n                console.log('complete')\n\n        })\n    };\n\n    getMaxColumnCount(csvData) {\n        var columnCount = 0;\n        for (var row = 0; row < csvData.length; row++) {\n            if (columnCount < csvData[row].length) {\n                columnCount = csvData[row].length;\n            }\n        }\n        return columnCount;\n    }\n\n    resetColumnForm() {\n        this.columnHeader=JSON.parse(JSON.stringify(this.columnHeaderTrailer));\n    }\n\n    saveColumnForm() {\n        if (this.columnHeader['constantValue']!='') {\n            this.currentFinding['rows'].forEach(row=> {\n                row['cells'][this.columnHeaderIndex]['value']=this.columnHeader['constantValue'];\n                row['cells'][this.columnHeaderIndex]['datumOrCondition'] = this.columnHeader['columnType'];\n            });\n        }\n        this.currentFinding.columnHeaders[this.columnHeaderIndex]=this.columnHeader;\n        this.columnHeaderIndex=null;\n    };\n\n    saveColumnOrder() {\n        this.currentFinding=JSON.parse(JSON.stringify(this.columnOrder));\n        let url = this.apiService.doPost(Consts.QUERY_SYNTHESIS_SET_COLUMN_ORDER,this.columnOrder);\n        url.subscribe(data=> {\n            this.errors={};\n            this.currentFinding=data;\n        },\n        error=>{\n            this.errors=error;\n        })\n        this.columnOrder=null;\n\n    }\n\n    saveFinding() {\n        this.currentFinding.dirty=1;\n        if (this.findingIndex==-1) {\n            this.data['purityBeans'].push(this.currentFinding);\n        }\n        else {\n            this.data['purityBeans'][this.findingIndex]=JSON.parse(JSON.stringify(this.currentFinding));\n        }\n\n        var haveDatum = false;\n        for (var i0 = 0; i0 < this.data.purityBeans.length; i0++) {\n            for (var i1 = 0; i1 < this.data.purityBeans[i0].columnHeaders.length; i1++) {\n                if (this.data.purityBeans[i0].columnHeaders[i1].columnType === 'datum') {\n                    haveDatum = true;\n                    break;\n                }\n            }\n            if (haveDatum) {\n                break;\n            }\n        }\n\n        // Warn user if there is no datum column\n        if (!haveDatum) {\n            alert(\"At least one column must be of type Datum.\");\n            return;\n        }\n\n        var purityUrl = \"\";\n        if (this.findingIndex==-1) {\n            purityUrl = Consts.QUERY_SYNTHESIS_SAVE_FINDING;\n        } else {\n            purityUrl = Consts.QUERY_SYNTHESIS_UPDATE_FINDING;\n        }\n\n        let url = this.apiService.doPost(purityUrl,this.data);\n        url.subscribe(data=> {\n            this.errors={};\n\n            this.data=data;\n            //??? this.setCharacterizationData();\n        },\n        error=> {\n            this.errors=error;\n        })\n\n        this.columnHeaderIndex=null;\n        this.findingIndex=null;\n    };\n\n    addFile() {\n        this.techniqueIndex = -1;\n        this.technique = {\n            techniqueType: '',\n            abbreviation: '',\n            description: '',\n            instruments: [],\n        };\n        setTimeout(function () {\n            document.getElementById('techniqueForm').scrollIntoView();\n        }, 100);\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    }\n\n    cancelTechnique() {\n        this.techniqueIndex = null;\n        this.instrumentIndex = null;\n    }\n\n    cancelInstrument() {\n        this.instrumentIndex=null;\n    }\n\n    changeFile(newItem: Object) {\n        if (newItem['type'] == 'save' || newItem['type'] == 'delete') {\n            this.data = newItem['data'];\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        }\n    }\n\n    delete() {\n        if (confirm('Are you sure you wish to delete this purification?')) {\n            setTimeout(() => {\n                this.apiService\n                    .doPost(Consts.QUERY_SYNTHESIS_PURIFICATION_DELETE, this.data)\n                    .subscribe(\n                        (data) => {\n                            this.router.navigate([\n                                'home/samples/synthesis',\n                                this.sampleId,\n                            ]);\n                        },\n                        (error) => {\n                            this.errors = error;\n                        }\n                    );\n            }, 200);\n        }\n    }\n\n    saveTechnique() {\n        if (this.techniqueIndex == -1) {\n            this.data['simpleExperimentBeans'].push(this.technique);\n            // this.data['purityBeingEdited'] = this.technique;\n        } else {\n            this.data['simpleExperimentBeans'][this.techniqueIndex] =\n                this.technique;\n            // this.data['purityBeingEdited'] = this.technique;\n        }\n        this.techniqueIndex = null;\n    }\n\n    deleteTechnique() {\n        if (\n            confirm('Are you sure you wish to delete this purification element?')\n        ) {\n            // this.data.purityBeingEdited = this.technique;\n            this.data.simpleExperimentBeans.splice(\n                this.data.simpleExperimentBeans[this.techniqueIndex],\n                1\n            );\n            this.techniqueIndex = null;\n        }\n    }\n\n    deleteInstrument() {\n        if (confirm(\"Are you sure you wish to delete this inherent function?\")) {\n            this.technique.instruments.splice(this.instrumentIndex,1)\n        };\n        this.instrumentIndex=null;\n    }\n\n    editTechnique(index, element) {\n        this.technique = JSON.parse(JSON.stringify(element));\n        this.techniqueIndex = index;\n        setTimeout(function () {\n            document.getElementById('techniqueForm').scrollIntoView();\n        }, 100);\n    }\n\n    editInstrument(fIndex,iFunction) {\n        this.instrumentIndex=fIndex;\n        this.instrument=JSON.parse(JSON.stringify(iFunction));\n        this.getInstrumentTypes();\n        setTimeout(function () {\n            document.getElementById('instrumentForm').scrollIntoView();\n        }, 100);\n    }\n\n    getInstrumentTypes() {\n        if(!this.technique || !this.technique.techniqueType) {\n          this.instrumentTypes = [];\n          return;\n        }\n\n        this.apiService\n            .doGet(\n                Consts.QUERY_SYNTHESIS_PURIFICATION_INSTRUMENT_TYPES,\n                'techniqueType=' + this.technique.techniqueType\n            )\n            .subscribe(\n                (data) => {\n                    this.instrumentTypes = data;\n                },\n                (errors) => {\n                    this.errors = errors;\n                }\n            );\n    }\n\n    getError(error:Object) {\n        this.errors=error;\n    }\n\n    readyToSubmit() {\n        let submissionStatus = true;\n        // if (this.data.type == 'biopolymer') {\n        //     if (\n        //         this.data.domainEntity.name == '' ||\n        //         this.data.domainEntity.name == null\n        //     )\n        //         submissionStatus = false;\n        //     if (\n        //         this.data.domainEntity.type == '' ||\n        //         this.data.domainEntity.type == null\n        //     )\n        //         submissionStatus = false;\n        // }\n        if (this.data.simpleProtocol.displayName == '') submissionStatus = false;\n        if (this.data.type == '') submissionStatus = false;\n        if (this.data.yield == '') submissionStatus = false;\n        return submissionStatus;\n    }\n\n    reset() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n        this.techniqueIndex=null;\n        this.instrumentIndex=null;\n        this.resetStatus=true;\n    }\n\n    saveInstrument() {\n        if (this.instrumentIndex==-1) {\n            if (!this.technique.instruments) {\n                this.technique['instruments']=[];\n            }\n            this.technique.instruments.push(this.instrument);\n        }\n        else {\n            this.technique.instruments[this.instrumentIndex]=this.instrument;\n        }\n        this.instrumentIndex=null;\n    }\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'], newItem['value']);\n            this.setValue(newItem['field'], newItem['value']);\n        } else {\n            this.setValue(newItem['field'], newItem['value']);\n        }\n    }\n\n    setupDataTrailer(data) {\n        this.dataTrailer = JSON.parse(JSON.stringify(data));\n    }\n\n    prepareSubmitData() {\n        if (this.data.simpleProtocol.displayName != '') {\n            this.data.simpleProtocol = this.setupData.protocolLookup.find(\n                e => e.displayName == this.data.simpleProtocol.displayName);\n        }\n    }\n\n    submit() {\n        this.prepareSubmitData();\n        this.apiService\n            .doPost(Consts.QUERY_SYNTHESIS_PURIFICATION_UPDATE, this.data)\n            .subscribe(\n                (data) => {\n                    this.router.navigate([\n                        'home/samples/synthesis',\n                        this.sampleId,\n                    ]);\n                },\n                (errors) => {\n                    this.errors = errors;\n                }\n            );\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\">\n</canano-main-display-heading>\n\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <form name=\"purificationForm\">\n    \t<!-- Purification type, protocol, yield -->\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"purificationType\">\n                            Purification Type*\n                        </label>\n                    </td>\n                    <td>\n                        <div>\n                            <select name=\"purificationType\" id=\"purificationType\" [(ngModel)]=\"data.type\">\n                                <option [ngValue]=\"''\" [selected]=\"data.type===''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['purificationTypes']\" [ngValue]=\"type\" [selected]=\"type==data.type\">\n                                    {{type}}\n                                </option>\n                            </select>\n                       </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"protocolType\">\n                            Protocol*\n                        </label>\n                    </td>\n                    <td>\n                        <div>\n                            <select name=\"protocolType\" id=\"protocolType\" [(ngModel)]=\"data.simpleProtocol.displayName\">\n                                <option [ngValue]=\"''\">--Select--</option>\n                                <option *ngFor=\"let protocol of setupData['protocolLookup']\" [ngValue]=\"protocol.displayName\">\n                                    {{protocol.displayName}}\n                                </option>\n                            </select>\n                       </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"yield\">\n                            Yield*\n                        </label>\n                    </td>\n                    <td>\n                    \t<input type=\"number\" name=\"yield\" id=\"yield\" [(ngModel)]=\"data.yield\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <br>\n\n    \t<!-- Design and Methods Description -->\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n\t\t\t\t<tr>\n\t\t\t\t    <td class=\"label\">\n\t\t\t\t    \t<label for=\"designMethodDescription\">\n\t\t\t\t        \tDesign and Methods Description\n\t\t\t\t    \t</label>\n\t\t\t\t    </td>\n\t\t\t\t    <td>\n\t\t\t\t        <textarea name=\"designMethodDescription\" id=\"designMethodDescription\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.designMethodDescription\">\n                        </textarea>\n\t\t\t\t    </td>\n\t\t\t\t</tr>\n            </table>\n        </div>\n        <br>\n\n\t\t<!-- Technique and instruments-->\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        Technique and Instruments\n                    </td>\n                    <td>\n                        <button type=\"button\" (click)=\"addTechnique()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.simpleExperimentBeans.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable properties\" *ngFor=\"let cElement of data.simpleExperimentBeans;let cIndex=index\">\n                            <tr>\n                                <td class=\"label\">\n                                    Technique Type\n                                </td>\n                                <td>\n                                    {{cElement.techniqueType}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editTechnique(cIndex,cElement)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"techniqueIndex!=null\" id=\"techniqueForm\">\n                    <td></td>\n                    <td>\n                        <div class=\"mainBorder\" style=\"background-color: #d3e4de;\" >\n                            <table class=\"dataMain\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cType\">\n                                            Technique*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select id=\"cType\" name=\"cType\" [(ngModel)]=\"technique.techniqueType\">\n                                            <option [ngValue]=\"''\" [selected]=\"technique.techniqueType==''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.techniques\" [selected]=\"type==technique.techniqueType\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cAbbreviation\">\n                                    \t\tAbbreviation\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" id=\"cAbbreviation\" name=\"cAbbreviation\" [(ngModel)]=\"technique.abbreviation\">\n                                    </td>\n                                </tr>\n                               \n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cDescription\">\n                                            Description\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <textarea name=\"cDescription\" id=\"cDescription\" rows=\"3\" cols=\"65\" [(ngModel)]=\"technique.description\">\n                                            {{technique.description}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"instrument\">\n                                            Instruments\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <button type='button' (click)=\"addInstrument()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                    </td>\n                                </tr>\n\n                                <ng-container *ngIf=\"technique.instruments\">\n                                    <tr *ngIf=\"technique.instruments.length\">\n                                        <td></td>\n                                        <td colspan=\"3\">\n                                            <table class=\"dataTable\">\n                                                <tr *ngFor=\"let iInstrument of technique.instruments;let fIndex=index\">\n                                                    <td>\n                                                        <b>Type</b>\n                                                    </td>\n                                                    <td>\n                                                        {{iInstrument.type}}\n                                                    </td>\n                                                    <td>\n                                                        <button (click)=\"editInstrument(fIndex,iInstrument)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n\n                                <tr *ngIf=\"instrumentIndex!=null\" id=\"instrumentForm\">\n                                    <td>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <div class=\"mainBorder\">\n                                            <table class=\"dataMain\">\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"manufacturer\">\n                                                            Manufacturer\n                                                    </label>\n                                                    </td>\n                                                    <td>\n                                                        <select name=\"manufacturer\" id=\"manufacturer\" [(ngModel)]=\"instrument.manufacturer\">\n                                                            <option [ngValue]=\"''\" [selected]=\"instrument.manufacturer===''\">--Select--</option>\n                                                            <option *ngFor=\"let manu of setupData.manufacturers\" [selected]=\"manu==instrument.manufacturer\">\n                                                                {{manu}}\n                                                            </option>\n                                                        </select>\n                                                    </td>\n                                                </tr>\n\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"cModelName\">\n                                                            ModelName\n                                                        </label>\n                                                    </td>\n                                                    <td>\n\t\t\t\t                                        <input type=\"text\" id=\"cModelName\" name=\"cModelName\" [(ngModel)]=\"instrument.modelName\">\n\t\t\t\t                                    </td>\n                                                </tr>\n\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"type\">\n                                                            Type\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <select name=\"type\" id=\"type\" [(ngModel)]=\"instrument.type\">\n                                                            <option [ngValue]=\"''\" [selected]=\"instrument.type===''\">--Select--</option>\n                                                            <option *ngFor=\"let type of instrumentTypes\" [selected]=\"type==instrument.type\">\n                                                                {{type}}\n                                                            </option>\n                                                        </select>\n                                                    </td>\n                                                </tr>\n                                                \n                                                <tr>\n                                                    <td>\n                                                        <button *ngIf=\"instrumentIndex!=-1\" (click)=\"deleteInstrument()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                    </td>\n                                                    <td colspan=\"3\" class=\"right\">\n                                                        <button [disabled]=\"instrument.type==''\" (click)=\"saveInstrument()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                        <button (click)=\"cancelInstrument()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteTechnique()\" *ngIf=\"techniqueIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td></td>\n                                    <td></td>\n                                    <td class=\"right\">\n                                        <button [disabled]=\"technique.techniqueType==''\" (click)=\"saveTechnique()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelTechnique()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n\t    <br />\n\n\t\t<!-- Finding -->\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"finding\">\n                            Finding\n                        </label>\n                    </td>\n                    <td>\n                        <button (click)=\"addFinding()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>\n                        <ng-container *ngFor=\"let finding of data.purityBeans; let fIndex=index\">\n                            <div *ngIf=\"finding.rows.length||finding.files.length\" class=\"mainBorder\">\n                                <div class=\"dataConditions\">\n                                \t<B>Data and Conditions</B>\n                                    <button  (click)=\"editFinding(fIndex, finding)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </div>\n                                <table class=\"dataTable\">\n                                    <tr>\n                                        <th *ngFor=\"let header of finding.columnHeaders\">\n                                            {{header.name}}\n                                        </th>\n                                    </tr>\n                                    <tr *ngFor=\"let row of finding.rows; let rowIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                        <td [ngStyle]=\"{'width':85/row.cells.length+'%'}\" *ngFor=\"let column of row.cells\">\n                                            <span *ngIf=\"column.operand!='='\">\n                                                {{column.operand}}\n                                            </span>\n                                            {{column.value}}\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div><br />\n                        </ng-container>\n                        <div class=\"mainBorder\" *ngIf=\"findingIndex!=null\" style=\"background-color: #d3e4de;\">\n                            <table id=\"findingsEditForm\" class=\"dataMain\">\n                                <tr>\n                                    <td colspan=\"2\">\n                                        <table class=\"dataMain\">\n                                            <tr>\n                                                <td class=\"columnUpdate\">\n                                                    <label for=\"finding.columns\">\n                                                        Columns\n                                                    </label>\n                                                    <input type=\"number\" name=\"columns\" id=\"finding.columns\" [(ngModel)]=\"currentFinding.numberOfColumns\">\n                                                    <label for=\"finding.rows\">\n                                                        &nbsp;Rows\n                                                    </label>\n                                                    <input type=\"number\" name=\"rows\" id=\"finding.rows\" [(ngModel)]=\"currentFinding.numberOfRows\"><br />\n                                                    <button (click)=\"updateRowsColsForFinding()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Update</button>\n                                                    <button *ngIf=\"findingIndex!=-1\" (click)=\"editColumnOrder()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Set Column Order</button>\n                                                    <label class=\"btn-canano btn-canano-primary btn-canano-xs\">\n                                                        Import csv\n                                                        <input type=\"file\" id=\"csvFile\" style=\"display: none\" (change)=\"importCSV($event)\">\n                                                    </label>\n\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"columnOrder!=null\">\n                                                <td>\n                                                    <div class=\"mainBorder\">\n                                                        <h5>Column Order</h5>\n                                                            <table class=\"dataTable\">\n                                                                <tr>\n                                                                    <th *ngFor=\"let columnHeader of columnOrder.columnHeaders\">\n                                                                        {{columnHeader.name}}\n                                                                    </th>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td *ngFor=\"let columnHeader of columnOrder.columnHeaders; let cIndex=index\">\n                                                                        <input type=\"number\" [(ngModel)]=\"columnHeader.columnOrder\" [name]=\"'c'+cIndex+'.columnOrder'\">\n                                                                    </td>\n                                                                </tr>\n\n                                                            </table><br />\n                                                            <button (click)=\"saveColumnOrder()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                            <button (click)=\"cancelColumnOrder()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"label\">\n                                                    Data and Conditions\n                                                </td>\n                                            </tr>\n                                            <tr *ngIf=\"columnHeaderIndex!=null\">\n                                                <td>\n                                                    <div class=\"mainBorder\">\n                                                        <table class=\"columnHeaderDefinitions\">\n                                                            <tr>\n                                                                <td colspan=\"2\">\n                                                                    <h5>Column Definitions</h5>\n                                                                    <br />\n                                                                    At least one column must be of type Datum.\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.columnType\">\n                                                                        Column Type*\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"changeColumnType($event,true)\" name=\"columnHeader.columnType\" [(ngModel)]=\"columnHeader.columnType\">\n                                                                        <option [selected]=\"columnHeader.columnType===null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option [selected]=\"columnHeader.columnType==='datum'\">datum</option>\n                                                                        <option [selected]=\"columnHeader.columnType==='condition'\">condition</option>\n                                                                    </select>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.name\">\n                                                                        Column Name*\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('columnHeader.name',columnHeader.name);changeColumnName($event,true)\" name=\"columnHeader.name\" [disabled]=\"columnHeader.columnType==null\" [(ngModel)]=\"columnHeader.name\">\n                                                                        <option [selected]=\"columnHeader.name===null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option *ngFor=\"let name of setupData.columnNameOptions\" [selected]=\"columnHeader.name==name\">\n                                                                            {{name}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"columnHeader.name ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Name'\" [value]=\"currentDropdownValues['columnHeader.name']\" [field]=\"'columnHeader.name'\" [array]=\"'setupData.columnNameOptions'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div>\n                                                                    <br />\n                                                                    <i>Combination of column name and column value type must be unique.</i>\n\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.valueType\">\n                                                                        Column Value Type\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('columnHeader.valueType',columnHeader.valueType)\" name=\"columnHeader.valueType\" [disabled]=\"columnHeader.columnType==null || columnHeader.name==null\" [(ngModel)]=\"columnHeader.valueType\">\n                                                                        <option [selected]=\"columnHeader.valueType===null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option *ngFor=\"let name of data.datumConditionValueTypeLookup\" [selected]=\"columnHeader.valueType==name\">\n                                                                            {{name}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"columnHeader.valueType ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Value Type'\" [value]=\"currentDropdownValues['columnHeader.valueType']\" [field]=\"'columnHeader.valueType'\" [array]=\"'data.datumConditionValueTypeLookup'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div><br />\n                                                                    <i>Combination of column name and column value type must be unique.</i>\n\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.valueUnit\">\n                                                                        Column Value Unit\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <select (ngModelChange)=\"addOtherValue('columnHeader.valueUnit',columnHeader.valueUnit)\" name=\"columnHeader.valueUnit\" id=\"columnHeader.valueUnit\" [(ngModel)]=\"columnHeader.valueUnit\">\n                                                                        <option [selected]=\"columnHeader.valueUnit==null\" [ngValue]=\"null\">--Select--</option>\n                                                                        <option *ngFor=\"let type of setupData.valueUnitOptions\" [selected]=\"columnHeader.valueUnit===type\" value=\"{{type}}\">\n                                                                            {{type}}\n                                                                        </option>\n                                                                    </select>\n                                                                    <div *ngIf=\"columnHeader.valueUnit ==='other'\">\n                                                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Value Unit'\" [value]=\"currentDropdownValues['columnHeader.valueUnit']\" [field]=\"'columnHeader.valueUnit'\" [array]=\"'setupData.valueUnitOptions'\">\n\n                                                                        </canano-other-dropdown>\n                                                                    </div>\n\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"label\">\n                                                                    <label for=\"columnHeader.constantValue\">\n                                                                        Constant Value\n                                                                    </label>\n                                                                </td>\n                                                                <td>\n                                                                    <input type=\"text\" name=\"columnHeader.constantValue\" id=\"columnHeader.constantValue\" [(ngModel)]=\"columnHeader.constantValue\">\n                                                                    <br />\n                                                                    <i>For boolean column value type, please enter 1 for true, 0 for false\n                                                                    </i>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>\n                                                                    <button (click)=\"resetColumnForm()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Reset</button>\n\n                                                                </td>\n                                                                <td>\n                                                                    <button (click)=\"saveColumnForm()\" [disabled]=\"columnHeader.columnType==null||columnHeader.name==null\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                                    <button (click)=\"cancelColumnForm()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                                </td>\n                                                            </tr>\n                                                        </table>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <table class=\"dataTable\">\n                                                        <tr>\n                                                            <td [colSpan]=\"currentFinding.numberOfColumns+1\">\n                                                                <h5>Column Data</h5><br />\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <th *ngFor=\"let columnHeader of currentFinding.columnHeaders; let columnHeaderIndex=index\">\n                                                                <a [routerLink]=\"[]\" (click)=\"editColumnForm(columnHeader, columnHeaderIndex)\">\n                                                                    {{columnHeader.name}}\n                                                                </a>\n                                                            </th>\n                                                            <th></th>\n                                                        </tr>\n                                                        <ng-container *ngFor=\"let row of currentFinding.rows;let rIndex=index; let odd=odd; let last=last\">\n                                                            <tr [ngClass]=\"{'rowOdd':odd}\">\n                                                                <td *ngFor=\"let column of row.cells; let cIndex=index;\">\n                                                                    <select [name]=\"'column.operand'+rIndex+cIndex\" [(ngModel)]=\"column.operand\">\n                                                                        <option *ngFor=\"let modifier of setupData.datumNumberModifier\" [selected]=\"column.operand===modifier\" [ngValue]=\"modifier\">{{modifier}}</option>\n                                                                    </select>\n                                                                    <input type=\"number\" *ngIf=\"currentFinding.columnHeaders[cIndex]['columnType']=='datum'\" [name]=\"'column.value'+rIndex+cIndex\" [(ngModel)]=\"column.value\" size=\"10\">\n                                                                    <input type=\"text\" *ngIf=\"currentFinding.columnHeaders[cIndex]['columnType']=='condition'||currentFinding.columnHeaders[cIndex]['columnType']==null\" [name]=\"'column.value'+rIndex+cIndex\" [(ngModel)]=\"column.value\" size=\"10\">\n                                                                </td>\n                                                                <td>\n                                                                    <button (click)=\"deleteFindingRow(rIndex)\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                                </td>\n                                                            </tr>\n                                                        </ng-container>\n                                                    </table>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteFinding()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td class=\"submit\">\n                                        <button (click)=\"saveFinding()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelFinding()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n\n\t\t<br />\n\n\t\t<!-- Analysis and Conclusion -->\n \t\t<div class=\"mainBorder\">\n            <table class=\"dataMain\">\n\t\t\t\t<tr>\n\t\t\t\t    <td class=\"label\">\n\t\t\t\t    \t<label for=\"analysis\">\n\t\t\t\t        \tAnalysis and Conclusion\n\t\t\t\t    \t</label>\n\t\t\t\t    </td>\n\t\t\t\t    <td>\n\t\t\t\t        <textarea name=\"analysis\" id=\"analysis\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.analysis\">\n                        </textarea>\n\t\t\t\t    </td>\n\t\t\t\t</tr>\n            </table>\n        </div>\n\n        <br />\n\n\t\t<!-- Files -->\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        Files\n                    </td>\n                    <td>\n                        <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\"  (changeFile)=\"changeFile($event)\" [nanopurification]=\"false\" [saveUrl]=\"consts.QUERY_SYNTHESIS_PURIFICATION_SAVE_FILE\" [deleteUrl]=\"consts.QUERY_SYNTHESIS_PURIFICATION_REMOVE_FILE\" [sampleId]=\"sampleId\" [data]=\"data\" [fileVariable]=\"'fileBeingEdited'\" [fileArray]=\"'fileElements'\">\n                        </canano-file>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n       <!--  <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"otherSampleNames\">\n                            Copy to other samples with the same primary organization?\n                        </label>\n                    </td>\n                    <td>\n                        <select class=\"multiple\" name=\"otherSampleNames\" id=\"otherSampleNames\" multiple size=\"10\" [(ngModel)]=\"data.otherSampleNames\">\n                            <option *ngFor=\"let type of setupData['otherSampleNames']\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table> \n         </div><br /> -->\n        <div>\n            <table class=\"submit\">\n                <tr>\n                    <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                        <button (click)=\"delete()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"!readyToSubmit()\" (click)=\"submit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PurificationRoutingModule } from './purification-routing.module';\nimport { PurificationComponent } from './purification.component';\n\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n\n@NgModule({\n  declarations: [PurificationComponent],\n  imports: [\n    CommonModule,\n    PurificationRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileModule\n  ]\n})\nexport class PurificationModule { }\n"],"names":["RouterModule","PurificationComponent","routes","path","component","PurificationRoutingModule","forChild","imports","exports","Properties","Consts","i0","ctx_r102","constructor","apiService","navigationService","router","route","ngxCsvParser","HELP_URL_SAMPLE_SYNTHESIS","badFindingCell","createArray","csvDataColCount","csvDataRowCount","url","doPost","QUERY_SYNTHESIS_NEW_FINDING","currentFinding","subscribe","data","rows","undefined","numberOfRows","y","x","cells","value","Object","csvDataObj","length","datumOrCondition","columnHeaders","columnType","validateFindingCellInput","colX","console","log","ngOnInit","setCurrentSelectedItem","params","sampleId","dataId","doGet","QUERY_SYNTHESIS_PURIFICATION_SETUP","setupData","SAMPLE_TOOLS","CURRENT_SAMPLE_ID","errors","QUERY_SYNTHESIS_PURIFICATION_EDIT","setupSynthesisPurification","yield","type","designMethodDescription","analysis","simpleExperimentBeans","fileElements","purityBeans","simpleProtocol","displayName","domainFileId","domainFileUri","domainId","dataTrailer","JSON","parse","stringify","addInstrument","instrumentIndex","instrument","manufacturer","modelName","getInstrumentTypes","setTimeout","document","getElementById","scrollIntoView","addTechnique","techniqueIndex","technique","techniqueType","abbreviation","description","instruments","editColumnForm","column","index","columnHeaderIndex","columnHeader","columnHeaderTrailer","changeColumnType","changeColumnName","name","isDropdown","QUERY_SYNTHESIS_GET_COLUMN_NAME_OPTIONS_BY_TYPE","columnNameOptions","error","QUERY_SYNTHESIS_GET_COLUMN_VALUE_UNIT_OPTIONS","valueUnitOptions","valueUnit","editColumnOrder","columnOrder","addFinding","findingIndex","cancelColumnForm","cancelColumnOrder","cancelFinding","deleteFinding","confirm","QUERY_SYNTHESIS_REMOVE_FINDING","deleteFindingRow","splice","editFinding","finding","importCSV","event","csvFile","target","files","item","header","delimiter","encoding","pipe","next","result","alert","csvImportError","numberOfColumns","updateRowsColsForFinding","len","arr","Array","i","arguments","args","prototype","slice","call","apply","colType","cellData","isNaN","replace","getMaxColumnCount","csvData","columnCount","row","resetColumnForm","saveColumnForm","forEach","saveColumnOrder","QUERY_SYNTHESIS_SET_COLUMN_ORDER","saveFinding","dirty","push","haveDatum","i1","purityUrl","QUERY_SYNTHESIS_SAVE_FINDING","QUERY_SYNTHESIS_UPDATE_FINDING","addFile","addOtherValue","field","currentValue","currentDropdownValues","cancelTechnique","cancelInstrument","changeFile","newItem","delete","QUERY_SYNTHESIS_PURIFICATION_DELETE","navigate","saveTechnique","deleteTechnique","deleteInstrument","editTechnique","element","editInstrument","fIndex","iFunction","instrumentTypes","QUERY_SYNTHESIS_PURIFICATION_INSTRUMENT_TYPES","getError","readyToSubmit","submissionStatus","reset","resetStatus","saveInstrument","saveOther","addDropdownItem","setValue","setupDataTrailer","prepareSubmitData","protocolLookup","find","e","submit","QUERY_SYNTHESIS_PURIFICATION_UPDATE","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","FileModule","PurificationModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}