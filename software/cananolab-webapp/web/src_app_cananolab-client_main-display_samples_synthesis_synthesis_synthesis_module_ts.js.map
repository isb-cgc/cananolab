{"version":3,"file":"src_app_cananolab-client_main-display_samples_synthesis_synthesis_synthesis_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/synthesis/synthesis/synthesis-routing.module.ts","./src/app/cananolab-client/main-display/samples/synthesis/synthesis/synthesis.component.ts","./src/app/cananolab-client/main-display/samples/synthesis/synthesis/synthesis.component.html","./src/app/cananolab-client/main-display/samples/synthesis/synthesis/synthesis.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SynthesisComponent } from './synthesis.component';\n\nconst routes: Routes = [{ path: '', component: SynthesisComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SynthesisRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport {StatusDisplayService } from '../../../../status-display/status-display.service';\n@Component( {\n    selector: 'canano-synthesis',\n    templateUrl: './synthesis.component.html',\n    styleUrls: ['./synthesis.component.scss']\n} )\nexport class SynthesisComponent implements OnInit{\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleName = Properties.CURRENT_SAMPLE_NAME;\n    helpUrl =  Consts.HELP_URL_SAMPLE_SYNTHESIS;\n    toolHeadingNameManage;\n    data;\n    editUrl=false;\n    sectionToShow='all';\n    \n    constructor(\n        private statusDisplayService:StatusDisplayService,\n        private apiService:ApiService,\n        private navigationService:NavigationService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) { }\n\n    ngOnInit(): void{\n        this.editUrl=this.statusDisplayService.isEditUrl();\n        this.navigationService.setCurrentSelectedItem(1);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                setTimeout(()=> {\n                    Properties.SAMPLE_TOOLS = true;\n\n                },200)\n                this.sampleId = params['sampleId'];\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                };\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data=>this.toolHeadingNameManage='Sample ' +data['sampleName'] + ' Synthesis'\n                )\n                this.data = this.getSynthesisEditData().subscribe(\n                    data => {\n                        this.data = data;\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                    } );\n            }\n        );\n    }\n\n    checkNull(field) {\n      if(!field) {\n        return \"N/A\"\n      } else {\n        return field;\n      }\n    }\n\n    convertTitlesToRealWords(title) {\n        const wordRegex = /[A-Z]?[a-z]+|[0-9]+|[A-Z]+(?![a-z])/g;\n        const result = title.match(wordRegex);\n        return result.join(' ')\n    }\n\n    getSynthesisEditData(){\n        let getUrl = Consts.QUERY_SYNTHESIS_SUMMARY_VIEW;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n            console.log( curl );\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl,'sampleId=' + this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n\n    }\n\n    onPurificationClick(dataId){\n        if (dataId==-1){\n            this.router.navigate( ['home/samples/synthesis/purification', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/synthesis/purification', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n    \n    onFunctionalizationClick(dataId){\n        if (dataId==-1){\n            this.router.navigate( ['home/samples/synthesis/functionalization', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/synthesis/functionalization', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n\n    onMaterialsClick(dataId){\n        if (dataId==-1) {\n            this.router.navigate( ['home/samples/synthesis/materials', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/synthesis/materials', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n\n    propertyCheck(entry) {\n        if (entry['Properties']) {\n            let keys=Object.keys(entry['Properties']);\n            let displayableItems=[];\n            keys.forEach(item=> {\n                if (entry.Properties[item]&&entry.Properties[item]!='') {\n                    displayableItems.push(item);\n                };\n            });\n            if (displayableItems.length) {\n                return true\n            };\n        }\n\n\n        return false\n    }\n\n    showSection(value) {\n        this.sectionToShow=value;\n    }\n\n    splitKeywordString(keyword) {\n        return keyword.split('\\n')\n    }\n\n\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\" [print]=\"true\" [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'SYNTHESIS']\">\n\n<ng-template #none_content><td>N/A</td></ng-template>\n\n</canano-main-display-heading>\n    <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" id=\"materials-tab\" data-toggle=\"tab\" (click)=\"showSection('materials')\">Materials</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"functionalization-tab\" data-toggle=\"tab\" (click)=\"showSection('functionalization')\">Functionalization</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"purification-tab\" data-toggle=\"tab\" (click)=\"showSection('purification')\">Purification</a>\n          </li>\n    </ul>\n<div class=\"mainSection\" *ngIf=\"data&&(sectionToShow=='all'||sectionToShow=='materials')\">\n    <div id=\"materials\" class=\"header\" *ngIf=\"sectionToShow=='all'||sectionToShow=='materials'\">\n        Materials <button *ngIf=\"editUrl\" (click)=\"onMaterialsClick(-1)\" class=\"btn btn-primary btn-sm\">Add</button>\n    </div>\n    <span *ngFor=\"let material of data['synthesisMaterials'] | keyvalue; let index = index;\">\n        <div class=\"blueHeader\">Material {{index+1}}</div><br />\n    \t<div class=\"mainBorder\">\n\n\t        <div class=\"editButton\" *ngIf=\"editUrl\">\n\t            <button class=\"btn btn-primary btn-sm\" (click)=\"onMaterialsClick(material.value['dataId'] )\">\n\t                Edit\n\t            </button>\n\t        </div>\n\n\t        <div>\n\t            <table class=\"dataMain\">\n\t                <tr>\n\t                    <td class=\"label\">Description</td>\n\t                    <td *ngIf=\"material.value.Description; else none_content\">\n\t                        {{material.value.Description}}\n\t                    </td>\n\t                </tr>\n\t                <tr>\n\t                    <td class=\"label\">Protocol</td>\n\t                    <td *ngIf=\"material.value.Protocol; else none_content\">\n\t                        {{material.value.Protocol}}\n\t                    </td>\n\t                </tr>\n\t                 <tr *ngIf=\"material.value.MaterialElements.length\">\n\t                    <td class=\"label\">Material Elements</td>\n\t                    <td>\n\t                        <div *ngFor=\"let me of material.value.MaterialElements; let last=last\">\n\t                            <table class=\"dataTable\" border=\"0\" [ngClass]=\"{'last':last}\">\n\t                            \t <tr>\n                                        <th class=\"label\" colspan=\"2\">\n                                           {{me.DisplayName}}\n                                        </th>\n                                    </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Matarial Type\n\t                                    </td>\n\t                                    <td *ngIf=\"me.Type; else none_content\">\n\t                                        {{me.Type}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Chemical Name\n\t                                    </td>\n\t                                    <td *ngIf=\"me.ChemicalName; else none_content\">\n\t                                        {{me.ChemicalName}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        PubChem Data Source\n\t                                    </td>\n\t                                    <td *ngIf=\"me.PubChemDataSourceName; else none_content\">\n\t                                        {{me.PubChemDataSourceName}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        PubChem Id\n\t                                    </td>\n\t                                    <td *ngIf=\"me.PubChemId; else none_content\">\n\t                                        {{me.PubChemId}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        PubChem Link\n\t                                    </td>\n\t                                    <td *ngIf=\"me.PubChemLink; else none_content\">\n\t                                        {{me.PubChemLink}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Amount (and units)\n\t                                    </td>\n\t                                    <td *ngIf=\"me.Amount && me.ValueUnit; else none_content\">\n\t                                        {{me.Amount}} ({{me.ValueUnit}})\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Molecular Formula\n\t                                    </td>\n\t                                    <td *ngIf=\"me.MolecularFormula; else none_content\">\n\t                                        {{me.MolecularFormula}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Molecular Formula Type\n\t                                    </td>\n\t                                    <td *ngIf=\"me.MolecularFormulaType; else none_content\">\n\t                                        {{me.MolecularFormulaType}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Material Description\n\t                                    </td>\n\t                                    <td *ngIf=\"me.Description; else none_content\">\n\t                                        {{me.Description}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Supplier\n\t                                    </td>\n\t                                    <td *ngIf=\"me.Supplier && me.Supplier.supplierName; else none_content\">\n\t                                        {{me.Supplier.supplierName}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Lot or Batch Number\n\t                                    </td>\n\t                                    <td *ngIf=\"me.Supplier && me.Supplier.lot; else none_content\">\n\t                                        {{me.Supplier.lot}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Inherent Functions\n\t                                    </td>\n\t                                    <td *ngIf=\"me.InherentFunctions.length; else none_content\">\n\t                                    \t<ul>\n\t\t                                    \t <div *ngFor=\"let iFun of me.InherentFunctions; let last=last\">\n\t\t                                    \t \t<li>\n\t\t                                    \t \t\t{{iFun.FunctionDisplayName}}\n\t\t                                    \t \t</li>\n\t\t                                    \t </div>\n\t                                    \t</ul>\n\t                                    </td>\n\t                                </tr>\n\t                            </table>\n\t                        </div>\n\t                    </td>\n\t                </tr>\n\t            </table>\n\t        </div>\n    \t</div>\n    </span>\n</div>\n\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='functionalization'\">\n    <div id=\"functionalization\" class=\"header\">\n        Functionalization <button *ngIf=\"editUrl\" class=\"btn btn-primary btn-sm\"\n            (click)=\"onFunctionalizationClick(-1)\">Add</button>\n    </div>\n    <span *ngFor=\"let func of data['synthesisFunctionalization'] | keyvalue; let index = index;\">\n        <div class=\"blueHeader\">Functionalization {{index+1}}</div><br />\n    \t<div class=\"mainBorder\">\n\n\t        <div class=\"editButton\" *ngIf=\"editUrl\">\n\t            <button class=\"btn btn-primary btn-sm\" (click)=\"onFunctionalizationClick(func.value['dataId'] )\">\n\t                Edit\n\t            </button>\n\t        </div>\n\n\t        <div>\n\t            <table class=\"dataMain\">\n\t                <tr>\n\t                    <td class=\"label\">Description</td>\n\t                    <td *ngIf=\"func.value.Description; else none_content\">\n\t                        {{func.value.Description}}\n\t                    </td>\n\t                </tr>\n\t                <tr>\n\t                    <td class=\"label\">Source</td>\n\t                    <td *ngIf=\"func.value.source; else none_content\">\n\t                        {{func.value.source}}\n\t                    </td>\n\t                </tr>\n\t                 <tr *ngIf=\"func.value.FunctionalizationElements.length\">\n\t                    <td class=\"label\">Functionalization Elements</td>\n\t                    <td>\n\t                        <div *ngFor=\"let fe of func.value.FunctionalizationElements; let last=last\">\n\t                            <table class=\"dataTable\" border=\"0\" [ngClass]=\"{'last':last}\">\n\t                            \t <tr>\n                                        <th class=\"label\" colspan=\"2\">\n                                           {{fe.DisplayName}}\n                                        </th>\n                                    </tr>\n                                    <tr>\n\t                                    <td class=\"label\">\n\t                                        Chemical Name\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.ChemicalName; else none_content\">\n\t                                        {{fe.ChemicalName}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Type\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.type; else none_content\">\n\t                                        {{fe.type}}\n\t                                    </td>\n\t                                </tr>\n\t                                 <tr>\n\t                                    <td class=\"label\">\n\t                                        Description\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.Description; else none_content\">\n\t                                        {{fe.Description}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        PubChem Data Source\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.pubChemDataSourceName; else none_content\">\n\t                                        {{fe.pubChemDataSourceName}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        PubChem Id\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.pubChemID; else none_content\">\n\t                                        {{fe.pubChemID}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        PubChem Link\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.pubChemLink; else none_content\">\n\t                                        {{fe.pubChemLink}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Amount (and units)\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.Amount && fe.AmountUnit; else none_content\">\n\t                                        {{fe.Amount}} ({{fe.AmountUnit}})\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Molecular Formula\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.MolecularFormula; else none_content\">\n\t                                        {{fe.MolecularFormula}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Molecular Formula Type\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.MolecularFormulaType; else none_content\">\n\t                                        {{fe.MolecularFormulaType}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Activation Method\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.activationMethod; else none_content\">\n\t                                        {{fe.activationMethod}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Activation Effect\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.activationMethod; else none_content\">\n\t                                        {{fe.activationEffect}}\n\t                                    </td>\n\t                                </tr>\n\t                                <tr>\n\t                                    <td class=\"label\">\n\t                                        Inherent Functions\n\t                                    </td>\n\t                                    <td *ngIf=\"fe.InherentFunctions.length; else none_content\">\n\t                                    \t<ul>\n\t                                            <div *ngFor=\"let iFun of fe.InherentFunctions; let last=last\">\n\t\t                                    \t \t<li>\n\t\t                                    \t \t{{iFun.FunctionDisplayName}}\n\t\t                                    \t \t</li>\n\t\t                                    \t</div>\n                                            </ul>\n\t                                    </td>\n\t                                </tr>\n\t                            </table>\n\t                        </div>\n\t                    </td>\n\t                </tr>\n\t            </table>\n\t        </div>\n    \t</div>\n    </span>\n</div>\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='purification'\">\n    <div id=\"purification\" class=\"header\">\n        Purification <button *ngIf=\"editUrl\" class=\"btn btn-primary btn-sm\"\n            (click)=\"onPurificationClick(-1)\">Add</button>\n    </div>\n    <span *ngFor=\"let puri of data['synthesisPurification'] | keyvalue; let index = index;\">\n        <div class=\"blueHeader\">Purification {{index+1}}</div><br />\n    \t<div class=\"mainBorder\">\n\n\t        <div class=\"editButton\" *ngIf=\"editUrl\">\n\t            <button class=\"btn btn-primary btn-sm\" (click)=\"onPurificationClick(puri.value['dataId'] )\">\n\t                Edit\n\t            </button>\n\t        </div>\n\n\t        <div>\n\t            <table class=\"dataMain\">\n\t                <tr>\n\t                    <td class=\"label\">Protocol Name</td>\n\t                    <td *ngIf=\"puri.value.Protocol; else none_content\">\n\t                        {{puri.value.Protocol}}\n\t                    </td>\n\t                </tr>\n\t                <tr>\n\t                    <td class=\"label\">Type</td>\n\t                    <td *ngIf=\"puri.value.Type; else none_content\">\n\t                        {{puri.value.Type}}\n\t                    </td>\n\t                </tr>\n\t                <tr>\n\t                    <td class=\"label\">Characterization Source/Date</td>\n\t                    <td *ngIf=\"puri.value.Source && puri.value.Date; else none_content\">\n\t                        {{puri.value.Source}}/{{puri.value.Date}}\n\t                    </td>\n\t                </tr>\n\t                <tr>\n\t                    <td class=\"label\">Description</td>\n\t                    <td *ngIf=\"puri.value.Description; else none_content\">\n\t                        {{puri.value.Description}}\n\t                    </td>\n\t                </tr>\n\t                <tr>\n\t                    <td class=\"label\">Yield</td>\n\t                    <td *ngIf=\"puri.value.Yield; else none_content\">\n\t                        {{puri.value.Yield}}\n\t                    </td>\n\t                </tr>\n\t                <tr>\n\t                    <td class=\"label\">Analysis</td>\n\t                    <td *ngIf=\"puri.value.Analysis; else none_content\">\n\t                        {{puri.value.Analysis}}\n\t                    </td>\n\t                </tr>\n\t                 <tr>\n\t                    <td class=\"label\">Purification Elements</td>\n\t                    <td *ngIf=\"puri.value.purificationElements.length; else none_content\">\n\t                        <div *ngFor=\"let pe of puri.value.purificationElements; let last=last\">\n\t                        \t<div *ngIf=\"pe['Data and Conditions']; else N/A\">\n\t\t                        \t<b>Data and Conditions</b>\n\t                                <table class=\"dataTable\" border=\"0\" [ngClass]=\"{'last':last}\">\n\t                                    <tr *ngFor=\"let row of pe['Data and Conditions']\">\n\t                                    \t<ng-container *ngIf=\"row.name=='colTitles'\">\n                                    \t\t\t<th *ngFor=\"let colHead of row.value\">\n                                    \t\t\t\t{{colHead}} \n                                    \t\t\t</th>\n\t                                    \t</ng-container>\n\t                                    \t<ng-container *ngIf=\"row.name=='colValues'\">\n                                    \t\t\t<td *ngFor=\"let colVal of row.value\">\n                                    \t\t\t\t{{colVal}} \n                                    \t\t\t</td>\n\t                                    \t</ng-container>\n\t                        \t\t\t</tr>\n\t                        \t\t</table>\n\t                        \t\t<br>\n\t                        \t</div>\n\t                        </div>\n\t                    </td>\n\t                </tr>\n\t            </table>\n\t        </div>\n    \t</div>\n    </span>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SynthesisRoutingModule } from './synthesis-routing.module';\nimport { SynthesisComponent } from './synthesis.component';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [SynthesisComponent],\n  imports: [\n    CommonModule,\n    SynthesisRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SynthesisModule { }\n"],"names":["RouterModule","SynthesisComponent","routes","path","component","SynthesisRoutingModule","forChild","imports","exports","Properties","Consts","HttpHeaders","timeout","i0","constructor","statusDisplayService","apiService","navigationService","router","route","CURRENT_SAMPLE_ID","CURRENT_SAMPLE_NAME","HELP_URL_SAMPLE_SYNTHESIS","ngOnInit","editUrl","isEditUrl","setCurrentSelectedItem","params","subscribe","setTimeout","SAMPLE_TOOLS","sampleId","getSampleName","data","toolHeadingNameManage","getSynthesisEditData","checkNull","field","convertTitlesToRealWords","title","wordRegex","result","match","join","getUrl","QUERY_SYNTHESIS_SUMMARY_VIEW","DEBUG_CURL","curl","console","log","headers","options","method","results","doGet","pipe","HTTP_TIMEOUT","e","error","onPurificationClick","dataId","navigate","onFunctionalizationClick","onMaterialsClick","propertyCheck","entry","keys","Object","displayableItems","forEach","item","push","length","showSection","value","sectionToShow","splitKeywordString","keyword","split","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","SynthesisModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}