{"version":3,"sources":["./src/app/cananolab-client/main-display/protocols/protocols-routing.module.ts","./src/app/cananolab-client/main-display/protocols/protocols.component.ts","./src/app/cananolab-client/main-display/protocols/protocols.component.html","./src/app/cananolab-client/main-display/protocols/protocols.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACI;;;AAC3D,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAkB,EAAE,CAAC,CAAC;AAM9D,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cAJlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACO;;;;;;ICiBnC,wEACI;IAAA,uEAAqD;IAAA,gFAAqB;IAAA,4DAAI;IAAA,gEAClF;IAAA,4FAAgC;IAAA,gEAAI;IAAA,gEACpC;IAAA,qEAAe;;ADdxB,MAAM,kBAAkB;IAK7B;QAHE,oBAAe,GAAG,kBAAkB,CAAC;QACrC,YAAO,GAAG,iDAAM,CAAC,wBAAwB,CAAC;QAC1C,eAAU,GAAC,gEAAU,CAAC;IACP,CAAC;IAElB,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,gEAAU,CAAC;IACzB,CAAC;;oFATU,kBAAkB;kGAAlB,kBAAkB;QCR/B,4FAI8B;QAE9B,yEACI;QAAA,yEACI;QAAA,oEACI;QAAA,gaACJ;QAAA,4DAAI;QACJ,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAC3B,4DAAO;QAEX,4DAAM;QACN,0EACI;QAAA,kIAGe;QAEf,wEAAsD;QAAA,qFAAyB;QAAA,4DAAI;QAAA,iEACnF;QAAA,kIAAqE;QAAA,iEAAI;QAAA,iEAC7E;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA5BF,gFAAmB;QAkBQ,2DAA0B;QAA1B,0FAA0B;;6FDX5C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACY;AACS;AACe;AACjB;;AAYzD,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBARjB;YACP,4DAAY;YACZ,gFAAsB;YACtB,2FAAY;YACZ,0DAAW;YACX,kEAAmB;SACpB;mIAEU,eAAe,mBATX,uEAAkB,aAE/B,4DAAY;QACZ,gFAAsB;QACtB,2FAAY;QACZ,0DAAW;QACX,kEAAmB;6FAGV,eAAe;cAV7B,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,uEAAkB,CAAC;gBAClC,OAAO,EAAE;oBACP,4DAAY;oBACZ,gFAAsB;oBACtB,2FAAY;oBACZ,0DAAW;oBACX,kEAAmB;iBACpB;aACF","file":"cananolab-client-main-display-protocols-protocols-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProtocolsComponent } from './protocols.component';\nconst routes: Routes = [{ path: '', component: ProtocolsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProtocolsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../constants';\nimport { Properties } from 'src/assets/properties';\n@Component({\n  selector: 'canano-protocols',\n  templateUrl: './protocols.component.html',\n  styleUrls: ['./protocols.component.scss']\n})\nexport class ProtocolsComponent implements OnInit {\n\n    toolHeadingName = 'Manage Protocols';\n    helpUrl = Consts.HELP_URL_PROTOCOL_MANAGE;\n    properties=Properties;\n  constructor( ) { }\n\n  ngOnInit(): void {\n    console.log(Properties)\n  }\n\n\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingName\"\n>\n</canano-main-display-heading>\n\n<div class=\"mainSection\">\n    <div class=\"mainBorder\">\n        <P>\n            This is the manage protocols section. A protocol is a predefined procedural method used in the design and implementation of assays. For example, a protocol could describe the steps a laboratory used for characterizing nanomaterials. In this section, depending on your authorization level, you may submit a new protocol, or search for an existing protocol.\n        </P>\n        <div class=\"links-panel card ml-1 mt-2\">\n            <div  class=\"card-header mb-0 pb-0\">\n                <span class=\"card-title unselectable m-0 p-0\">\n                    <h5>Protocol Links</h5>\n                </span>\n\n            </div>\n            <div class=\"card-body\">\n                <ng-container *ngIf=\"properties.LOGGED_IN\">\n                    <a class=\"link-clicker\" routerLink=\"protocol-create\">Create a New Protocol</a><br>\n                Select to create a new protocol.<br><br>\n                </ng-container>\n\n                <a  class=\"link-clicker\" routerLink=\"protocol-search\">Search Existing Protocols</a><br>\n                Enter search criteria to obtain information on protocols of interest.<br><br>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProtocolsComponent } from './protocols.component';\nimport { ProtocolsRoutingModule } from './protocols-routing.module';\nimport { SharedModule } from '../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [ProtocolsComponent],\n    imports: [\n      CommonModule,\n      ProtocolsRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class ProtocolsModule { }\n\n"],"sourceRoot":"webpack:///"}