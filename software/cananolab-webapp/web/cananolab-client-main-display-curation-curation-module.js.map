{"version":3,"sources":["./src/app/cananolab-client/main-display/curation/curation-routing.module.ts","./src/app/cananolab-client/main-display/curation/curation.component.ts","./src/app/cananolab-client/main-display/curation/curation.component.html","./src/app/cananolab-client/main-display/curation/curation.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-curation-curation-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CurationComponent } from './curation.component';\nconst routes: Routes = [{ path: '', component: CurationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CurationRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Consts } from 'src/app/constants';\nimport { ApiService } from '../../common/services/api.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'canano-curation',\n  templateUrl: './curation.component.html',\n  styleUrls: ['./curation.component.scss']\n})\nexport class CurationComponent implements OnInit {\n    data;\n    errors={};\n    message='';\n    currationResults;\n    currentUrl = 'curation';\n    generateOptions={option:\"\"};\n    helpUrl='https://wiki.nci.nih.gov/display/caNanoLab/Managing+Data+Curation';\n    toolHeadingNameManage = 'Manage Curation';\n    constructor(private activatedRoute:ActivatedRoute,private apiService:ApiService,private router:Router) { }\n\n    ngOnInit(): void {\n        if (this.router.url.includes('manage-availability')) {\n            this.currentUrl = 'manage-availability';\n            this.helpUrl='https://wiki.nci.nih.gov/display/caNanoLab/Managing+Data+Curation#ManagingDataCuration-ManageBatch';\n            this.toolHeadingNameManage='Manage Batch Data Availability';\n        }\n        if (this.router.url.includes('review-data')) {\n            this.currentUrl = 'review-data';\n            this.helpUrl='https://wiki.nci.nih.gov/display/caNanoLab/Managing+Data+Curation#ManagingDataCuration-ReviewBatchResults';\n            this.toolHeadingNameManage='Review By Curator';\n        }\n        let reviewDataUrl=this.apiService.doGet(Consts.QUERY_CURATION_REVIEW_DATA,'');\n        if (this.currentUrl=='review-data') {\n            reviewDataUrl.subscribe(data=> {\n                this.data=data;\n                this.errors={};\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n\n        if (this.router.url.includes('results')) {\n            this.currentUrl = 'results';\n            this.helpUrl='https://wiki.nci.nih.gov/display/caNanoLab/Managing+Data+Curation';\n            this.toolHeadingNameManage='Long Running Processes';\n            this.getCurationResults();\n        }\n\n        let generateUrl=this.apiService.doPost(Consts.QUERY_CURATION_GENERATE_BATCH_AVAILABILITY,this.generateOptions);\n\n\n    }\n\n    edit(record) {\n        if (record.dataType=='sample') {\n            this.router.navigate(['/home/samples/sample',record.dataId]);\n        };\n        if (record.dataType=='protocol') {\n            this.router.navigate(['/home/protocols/edit-protocol',record.dataId]);\n        };\n        if (record.dataType=='publication') {\n            this.router.navigate(['/home/samples/publications/publication',record.dataId]);\n        };\n    };\n\n    resetGenerateOptions() {\n        this.generateOptions={option:\"\"}\n    }\n\n    submitGenerateOptions() {\n        let url = this.apiService.doPost(Consts.QUERY_CURATION_GENERATE_BATCH_AVAILABILITY,this.generateOptions);\n        url.subscribe(data=> {\n            this.message=data;\n        })\n    }\n\n    getCurationResults() {\n        this.apiService.doGet(Consts.QUERY_CURATION_RESULTS,'').subscribe(data=> {\n            this.currationResults=data;\n        })\n    }\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\"\n[toolHeadingName]=\"toolHeadingNameManage\">\n\n</canano-main-display-heading>\n\n<div class=\"mainSection\">\n    <div class=\"mainBorder\" *ngIf=\"currentUrl=='curation'\">\n        This is the manage curation section. In this section, curators can view a list of samples, publications, and protocols pending public review, select an item from the pending list, review the item, and make the item accessible to public. Curators can also generate, regenerate and delete data availability metrics in batch.\n\n\n        <div class=\"links-panel card ml-1 mt-2\">\n            <div  class=\"card-header mb-0 pb-0\">\n                <span class=\"card-title unselectable m-0 p-0\">\n                    <h5>Curation Links</h5>\n                </span>\n\n            </div>\n            <div class=\"card-body\">\n                <a class=\"link-clicker\" routerLink=\"/home/curation/review-data\">Review Data Pending Release to Public</a><br />\n                Review samples, publications and protocols submitted by researchers and assign them to be readable by Public when appropriate.<br><br>\n\n                <a  class=\"link-clicker\" routerLink=\"/home/curation/manage-availability\">Manage Batch Data Availability</a><br>\n                Manage Data Availability for submitted samples in a batch.\n            </div>\n        </div>\n    </div>\n    <div class=\"mainBorder\" *ngIf=\"data && currentUrl=='review-data'\">\n        <h5>Data Pending Review</h5>\n        <div *ngIf=\"!data.length\">\n            There is no data pending review.\n        </div>\n        <table class=\"dataTable\" *ngIf=\"data.length\">\n            <tr>\n                <th>Data Type</th>\n                <th>Data Name</th>\n                <th></th>\n            </tr>\n            <tr *ngFor=\"let record of data;let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                <td class=\"actions\">\n                    {{record.dataType}}\n                </td>\n                <td>\n                    {{record.dataName}}\n                </td>\n                <td>\n                    <a (click)=\"edit(record)\">\n                        Edit\n                    </a>\n                </td>\n            </tr>\n        </table>\n    </div>\n\n    <ng-container *ngIf=\"currentUrl=='manage-availability'\">\n        <div class=\"message\" *ngIf=\"message!=''\">\n            {{message}}\n        </div>\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"option\">\n                            Please select an option:\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <input type=\"radio\" [value]=\"'generate all'\" [(ngModel)]=\"generateOptions.option\">\n                        <label for=\"options.generate\" class=\"right\">\n                            Generate data availability for all samples\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <input type=\"radio\" [value]=\"'regenerate old'\" [(ngModel)]=\"generateOptions.option\">\n                        <label for=\"options.generate\" class=\"right\">\n                            Regenerate data availability for samples with existing data availability\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <input type=\"radio\" [value]=\"'delete all'\" [(ngModel)]=\"generateOptions.option\">\n                        <label for=\"options.generate\" class=\"right\">\n                            Delete existing data availability\n                        </label>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div>\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button (click)=\"resetGenerateOptions()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button (click)=\"submitGenerateOptions()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"currentUrl=='results'\">\n        <div class=\"message\" *ngIf=\"message!=''\">\n            {{message}}\n        </div>\n        <div class=\"mainBorder\">\n            <table class=\"dataTable\" *ngIf=\"currationResults\">\n                <tr>\n                    <th>Process Type</th>\n                    <th>Process Status</th>\n                </tr>\n                <tr *ngFor=\"let result of currationResults\">\n                    <td>\n                        {{result.processType}}\n                    </td>\n                    <td>\n                        {{result.statusMessage}}\n                    </td>\n                </tr>\n            </table>\n            <span *ngIf=\"!currationResults\">\n                There are currently no pending long running processes or pending results to view.\n            </span>\n        </div>\n    </ng-container>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CurationComponent } from './curation.component';\nimport { CurationRoutingModule } from './curation-routing.module';\nimport { SharedModule } from '../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n    declarations: [CurationComponent],\n    imports: [\n      CommonModule,\n      CurationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class CurationModule { }\n"],"sourceRoot":"webpack:///"}