{"version":3,"file":"src_app_cananolab-client_main-display_samples_composition_chemicalassociation_chemicalassocia-29db06.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation-routing.module.ts","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.component.ts","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.component.html","./src/app/cananolab-client/main-display/samples/composition/chemicalassociation/chemicalassociation.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChemicalassociationComponent } from './chemicalassociation.component';\nconst routes: Routes = [{ path: '', component: ChemicalassociationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChemicalassociationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\n\n@Component({\n  selector: 'canano-chemicalassociation',\n  templateUrl: './chemicalassociation.component.html',\n  styleUrls: ['../../../../../btn-bravo-canano.scss', './chemicalassociation.component.scss']\n})\nexport class ChemicalassociationComponent implements OnInit {\n  sampleId = Properties.CURRENT_SAMPLE_ID;\n  consts = Consts;\n  dataId;\n  sampleName = Properties.CURRENT_SAMPLE_NAME;\n  helpUrl =  Consts.HELP_URL_SAMPLE_COMPOSITION_CHEMICAL_ASSOCIATION;\n  toolHeadingNameManage = 'Sample Composition';\n  data;\n  dataTrailer;\n  errors = {};\n  fileIndex;\n  message;\n  nanomaterialEntityOptions;\n  functionalizingEntityOptions;\n  composingElementOptionsA;\n  composingElementOptionsB;\n  dataLoaded;\n  entityOptionsA;\n  entityOptionsB;\n  resetStatus = false;\n  setupData;\n  currentDropdownValues;\n  currentField;\n\n  constructor( private apiService: ApiService, private navigationService: NavigationService,\n               private router: Router, private route: ActivatedRoute ) {\n  }\n\n  ngOnInit(): void {\n        this.navigationService.setCurrentSelectedItem(1);\n        this.currentDropdownValues = {};\n        this.entityOptionsA = [];\n        this.entityOptionsB = [];\n        this.composingElementOptionsA = [];\n        this.composingElementOptionsB = [];\n        this.nanomaterialEntityOptions = [];\n        this.functionalizingEntityOptions = [];\n\n        this.data = this.setDefaultDataSet();\n        this.dataTrailer = this.setDefaultDataSet();\n\n        this.route.params.subscribe(( params: Params ) => {\n            this.sampleId = params['sampleId'];\n            this.dataId = params['dataId'];\n\n            if (this.sampleId <= 0 ) {\n                this.sampleId = Properties.CURRENT_SAMPLE_ID;\n            } else {\n                Properties.CURRENT_SAMPLE_ID = this.sampleId;\n            }\n\n            this.apiService.getSampleName(this.sampleId).subscribe(data =>\n                this.toolHeadingNameManage = 'Edit ' + data['sampleName'] + ' Chemical Association')\n\n            if (this.dataId) {\n                this.data = this.getdata().subscribe(data => {\n                        console.log('Properties.SAMPLE_TOOLS is ' + Properties.SAMPLE_TOOLS);\n                        Properties.SAMPLE_TOOLS = true;\n                        console.log('Properties.SAMPLE_TOOLS is ' + Properties.SAMPLE_TOOLS);\n                        this.data = data;\n                        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                        this.loadSetupData();\n                        this.errors = {};\n                        console.log('No more errors!' + this.errors);\n                    },\n                    error => {\n                        Properties.SAMPLE_TOOLS = true;\n                        this.errors = error;\n                    }\n                );\n            } else {\n                this.loadSetupData();\n                Properties.SAMPLE_TOOLS = true;\n            }\n        });\n  }\n\n  getError(error: Object) {\n    // This is not getting called when we have a file save error...\n    console.log('I got an error ' + error);\n    this.errors = error;\n}\n\n  getdata(){\n    let getUrl = Consts.QUERY_CHEMICAL_ASSOCIATION_EDIT;\n\n    if( Properties.DEBUG_CURL ){\n        let curl = 'curl  -k \\'' + getUrl + '\\'';\n    }\n\n    let headers = new HttpHeaders( {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    } );\n\n    let options = {\n        headers: headers,\n        method: 'get',\n    };\n\n    let results;\n    try{\n        results = this.apiService.doGet(getUrl, 'sampleId=' + this.sampleId + '&dataId=' + this.dataId);\n    }catch( e ){\n        // TODO react to error.\n        this.errors=e;\n        console.error( 'doGet Exception: ' + e );\n    }\n    return results;\n\n}\n\nisSubmissionValid() {\n    if (this.data.type == '') {\n        return true\n    }\n    if (this.data.type == 'attachment' && this.data.bondType == '') {\n        return true\n    }\n    let AKeys = Object.keys(this.data['associatedElementA']);\n    let BKeys = Object.keys(this.data['associatedElementB']);\n    let ACount = [];\n    let BCount = [];\n\n    AKeys.forEach(item => {\n        if (this.data['associatedElementA'][item] == '') {\n            ACount.push(item)\n        }\n        if (this.data['associatedElementA']['compositionType'] == 'nanomaterial entity') {\n            if (this.data['associatedElementA']['composingElement']['id'] == '') {\n                ACount.push(item)\n            }\n        }\n    })\n    BKeys.forEach(item => {\n        if (this.data['associatedElementB'][item] == '') {\n            BCount.push(item)\n        }\n        if (this.data['associatedElementB']['compositionType'] == 'nanomaterial entity') {\n            if (this.data['associatedElementB']['composingElement']['id'] == '') {\n                BCount.push(item)\n            }\n        }\n    })\n    if (ACount.length || BCount.length) {\n        return true\n    }\n    return false\n}\nsetDefaultDataSet() {\n    return {\n        'sampleId': this.sampleId,\n        'type': '',\n        'bondType': '',\n        'description': '',\n        'files': [],\n        'associatedElementA': {\n            'compositionType': '',\n            'entityId': '',\n            'entityDisplayName': '',\n            'composingElement': {\n                'id': ''\n            }\n        },\n        'associatedElementB': {\n            'compositionType': '',\n            'entityId': '',\n            'entityDisplayName': '',\n            'composingElement': {\n                'id': ''\n            }\n        }\n    }\n};\n\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    };\n\n// save other value //\nsaveOther(newItem: Object) {\n    if (newItem['change'] && newItem['value']) {\n        this.addDropdownItem(newItem['array'], newItem['value']);\n        this.setValue(newItem['field'], newItem['value']);\n    }\n    else {\n        this.setValue(newItem['field'], newItem['value']);\n    }\n};\n\nchangeEntityId(compositionType, entity, val) {\n    // no need to do anything if functionalizing entity //\n    if (entity == 'nanomaterial entity') {\n        if (compositionType === 'compositionTypeA') {\n            this.data.assoentityDisplayName;\n            let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_COMPOSING_ELEMENTS_BY_NANO_ID + '?id=' + val, {});\n            url.subscribe( data => {\n                this.composingElementOptionsA = data;\n                this.errors = {};\n            },\n            err => {\n                this.errors = err;\n            });\n        }\n        else {\n            let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_COMPOSING_ELEMENTS_BY_NANO_ID + '?id=' + val, {});\n            url.subscribe( data => {\n                this.composingElementOptionsB = data;\n                this.errors = {};\n            },\n            err => {\n                this.errors = err;\n            });\n        }\n    };\n\n    if (compositionType == 'compositionTypeA') {\n        this.entityOptionsA.forEach(element => {\n            if (element.domainId == val) {\n                this.data.associatedElementA.entityDisplayName = element.displayName;\n            }\n        });\n    }\n    else {\n        this.entityOptionsB.forEach(element => {\n            if (element.domainId == val) {\n                this.data.associatedElementB.entityDisplayName = element.displayName;\n            }\n        });\n    }\n}\n\nchangeCompositionType(compositionType, val, edit) {\n\n    if (compositionType === 'compositionTypeA') {\n        this.entityOptionsA = val == 'nanomaterial entity' ? this.nanomaterialEntityOptions:this.functionalizingEntityOptions;\n        if (!edit) {\n            this.data['associatedElementA']['entityId'] = ''\n            this.data['associatedElementA']['entityDisplayName'] = ''\n            this.data['associatedElementA']['composingElement'] = {'id': ''}\n        }\n\n    }\n    else {\n        this.entityOptionsB = val == 'nanomaterial entity' ? this.nanomaterialEntityOptions: this.functionalizingEntityOptions;\n        if (!edit) {\n            this.data['associatedElementB']['entityId'] = ''\n            this.data['associatedElementB']['entityDisplayName'] = ''\n            this.data['associatedElementB']['composingElement'] = {'id': ''}\n        }\n\n    }\n}\n\ndeleteChemicalAssociation() {\n    if (confirm('Are you sure you want to delete this functionalizing entity?')) {\n        let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_DELETE, this.data);\n        url.subscribe( data => {\n            this.router.navigate( ['home/samples/composition', this.sampleId] );\n            this.errors = {};\n        },\n        err => {\n            this.errors = err;\n        });\n    }\n}\n\nresetChemicalAssociation() {\n    this.resetStatus = true;\n    this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n}\n\nsubmitChemicalAssociation() {\n    let url = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_SAVE, this.data);\n    url.subscribe( data => {\n        this.router.navigate( ['home/samples/composition', this.sampleId] );\n        this.errors = {};\n    },\n    err => {\n        console.log('I have an error: ' + err);\n        this.errors = err;\n    });\n}\n\nselectAssociatedElement(entityId, domainId) {\n    return entityId == domainId ? true : false;\n}\n\nloadDropdowns() {\n    this.changeEntityId('compositionTypeA', this.data.associatedElementA.compositionType,this.data.associatedElementA.entityId)\n    this.changeEntityId('compositionTypeB', this.data.associatedElementB.compositionType,this.data.associatedElementB.entityId)\n    this.changeCompositionType('compositionTypeA', this.data.associatedElementA.compositionType,true)\n    this.changeCompositionType('compositionTypeB', this.data.associatedElementB.compositionType,true)\n\n}\n\nloadSetupData() {\n    let getUrl = this.apiService.doGet(Consts.QUERY_CHEMICAL_ASSOCIATION_SETUP, 'sampleId=' + this.sampleId);\n    getUrl.subscribe( data => {\n        this.setupData = data;\n        let nanoUrl = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_ASSOCIATED_ELEMENT_OPTIONS + '?compositionType=nanomaterial entity',{});\n        nanoUrl.subscribe( data => {\n            let functionalizingUrl = this.apiService.doPost(Consts.QUERY_CHEMICAL_ASSOCIATION_GET_ASSOCIATED_ELEMENT_OPTIONS + '?compositionType=functionalizing entity',{});\n            this.nanomaterialEntityOptions = data;\n            functionalizingUrl.subscribe( data => {\n                this.errors = {};\n                console.log('LSD: No more errors!');\n                this.functionalizingEntityOptions = data;\n                if (this.dataId) {\n                    this.loadDropdowns();\n                }\n                Properties.SAMPLE_TOOLS = true;\n\n            },\n            err => {\n                this.errors = err;\n            });\n        },\n        err => {\n            this.errors = err;\n        });\n    },\n    err => {\n        this.errors = err;\n    });\n}\n\nchangeFile(newItem: Object) {\n    if (newItem['type'] == 'save' || newItem['type'] == 'delete') {\n        this.data = newItem['data'];\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n    }\n}\n\n\n\n\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\" [toolHeadingName]=\"toolHeadingNameManage\">\n\n</canano-main-display-heading>\n<div class=\"error\" *ngIf=\"errors['error']\">\n    {{errors['error']}}\n</div>\n<div class=\"error\" *ngIf=\"message\">\n    {{message}}\n</div>\n<div class=\"mainSection\" *ngIf=\"setupData\">\n    <form action=\"\" method=\"get\">\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr *ngIf=\"!dataId\">\n                <td class=\"label\">\n                    <label for=\"associationType\">Association Type*</label>\n                </td>\n                <td>\n                    <select (ngModelChange)=\"addOtherValue('type',data.type)\" id=\"associationType\" [(ngModel)]=\"data.type\" name=\"associationType\">\n                        <option value=\"\" [selected]=\"data.type===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['chemicalAssociationTypes']\" [selected]=\"data.type===type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                        <option value=\"[other]\">[other]</option>\n\n                    </select>\n                    <div *ngIf=\"data.type ==='[other]'\">\n                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Association Type'\" [value]=\"currentDropdownValues['type']\" [field]=\"'data.type'\" [array]=\"'setupData.chemicalAssociationTypes'\">\n\n                        </canano-other-dropdown>\n                    </div>\n                </td>\n            </tr>\n            <tr *ngIf=\"data.type==='attachment'\">\n                <td class=\"label\">\n                    <label for=\"bondType\">Bond Type*</label>\n                </td>\n                <td>\n                    <select id=\"associationType\" [(ngModel)]=\"data.bondType\" name=\"bondType\">\n                        <option value=\"\" [selected]=\"data.bondType===''\">--Select--</option>\n                        <option *ngFor=\"let type of setupData['bondTypes']\" [selected]=\"data.bondType===type\" value=\"{{type}}\">\n                            {{type}}\n                        </option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"description\">Description</label>\n                </td>\n                <td>\n                    <textarea id=\"description\" name=\"description\" [(ngModel)]=\"data.description\" rows=\"3\" cols=\"65\">\n                        {{data.description}}\n                    </textarea>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    <label for=\"compositionTypeA\">Element*</label>\n                </td>\n                <td>\n                    <img src=\"assets/images/arrow_left_right_gray.gif\">\n                </td>\n                <td class=\"label\">\n                    <label for=\"compositionTypeB\">Element*</label>\n                </td>\n            </tr>\n            <tr *ngIf=\"nanomaterialEntityOptions.length && functionalizingEntityOptions.length\">\n                <td>\n                    <ng-container *ngIf=\"data['associatedElementA']\">\n                    <div>\n                        <select (ngModelChange)=\"changeCompositionType('compositionTypeA',$event,false)\" id=\"compositionTypeA\" [(ngModel)]=\"data.associatedElementA.compositionType\" name=\"compositionTypeA\">\n                            <option value=\"\" [selected]=\"data.associatedElementA.compositionType===''\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['associationCompositionTypes']\" [selected]=\"data.associatedElementA.compositionType===type\" value=\"{{type}}\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"element\" *ngIf=\"entityOptionsA.length && data.associatedElementA.compositionType\">\n                        <select (ngModelChange)=\"changeEntityId('compositionTypeA',data.associatedElementA.compositionType,$event)\" id=\"entityIdA\" name=\"entityIdA\" [(ngModel)]=\"data.associatedElementA.entityId\">\n                            <option value=\"\" [selected]=\"data.associatedElementA.entityId===''\">--Select--</option>\n                            <option *ngFor=\"let type of entityOptionsA\" [ngValue]=\"type.domainId\" [selected]=\"type.domainId==data.associatedElementA.entityId\">\n                                    {{type.type}}\n                                    <ng-container *ngIf=\"data.associatedElementA.compositionType=='functionalizing entity'\">\n                                        {{type.displayName}}\n                                    </ng-container>\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"element\" *ngIf=\"data.associatedElementA.compositionType && data.associatedElementA.compositionType=='nanomaterial entity' && data.associatedElementA.entityId\">\n\n                        <select id=\"composingElementIdA\" name=\"composingElementIdA\" [(ngModel)]=\"data.associatedElementA.composingElement.id\">\n                            <option value=\"\" [selected]=\"data.associatedElementA.composingElement.id===''\">--Select--</option>\n                            <option *ngFor=\"let type of composingElementOptionsA\" [ngValue]=\"type.id\">\n                                {{type.type}} (name:{{type.name}})\n                            </option>\n                        </select>\n                    </div>\n                    </ng-container>\n                </td>\n                <td>associated with</td>\n                <td>\n                    <ng-container *ngIf=\"data['associatedElementB']\">\n                        <div>\n                            <select (ngModelChange)=\"changeCompositionType('compositionTypeB',$event,false)\" id=\"compositionTypeB\" [(ngModel)]=\"data.associatedElementB.compositionType\" name=\"compositionTypeB\">\n                                <option value=\"\" [selected]=\"data.associatedElementB.compositionType===''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['associationCompositionTypes']\" [selected]=\"data.associatedElementB.compositionType===type\" value=\"{{type}}\">\n                                    {{type}}\n                                </option>\n                            </select>\n                        </div>\n                        <div class=\"element\" *ngIf=\"entityOptionsB.length && data.associatedElementB.compositionType\">\n                            <select (ngModelChange)=\"changeEntityId('compositionTypeB',data.associatedElementB.compositionType,$event)\" id=\"entityIdB\" name=\"entityIdB\" [(ngModel)]=\"data.associatedElementB.entityId\">\n                                <option value=\"\" [selected]=\"data.associatedElementB.entityId===''\">--Select--</option>\n                                <option *ngFor=\"let type of entityOptionsB\" [ngValue]=\"type.domainId\" [selected]=\"type.domainId==data.associatedElementB.entityId\">\n                                        {{type.type}}\n                                        <ng-container *ngIf=\"data.associatedElementB.compositionType=='functionalizing entity'\">\n                                            {{type.displayName}}\n                                        </ng-container>\n                                </option>\n                            </select>\n                        </div>\n                        <div class=\"element\" *ngIf=\"data.associatedElementB.compositionType && data.associatedElementB.compositionType=='nanomaterial entity' && data.associatedElementB.entityId\">\n\n                            <select id=\"composingElementIdB\" name=\"composingElementIdB\" [(ngModel)]=\"data.associatedElementB.composingElement.id\">\n                                <option value=\"\" [selected]=\"data.associatedElementB.composingElement.id===''\">--Select--</option>\n                                <option *ngFor=\"let type of composingElementOptionsB\" [ngValue]=\"type.id\">\n                                    {{type.type}} (name:{{type.name}})\n                                </option>\n                            </select>\n                        </div>\n                        </ng-container>\n\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    File\n                </td>\n                <td>\n                    <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\" (changeFile)=\"changeFile($event)\" [saveUrl]=\"consts.QUERY_CHEMICAL_ASSOCIATION_SAVE_FILE\" [deleteUrl]=\"consts.QUERY_CHEMICAL_ASSOCIATION_REMOVE_FILE\" [fileVariable]=\"'simpleFile'\" [sampleId]=\"sampleId\" [data]=\"data\" [fileArray]=\"'files'\">\n\n                    </canano-file>\n                </td>\n            </tr>\n        </table>\n    </div><br />\n    <div>\n        <table class=\"dataMain submit\">\n            <tr>\n                <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                    <button (click)=\"deleteChemicalAssociation()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                </td>\n                <td>\n                    <button (click)=\"resetChemicalAssociation()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                    <button [disabled]=\"isSubmissionValid()\" (click)=\"submitChemicalAssociation()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChemicalassociationComponent } from './chemicalassociation.component';\nimport { ChemicalassociationRoutingModule } from './chemicalassociation-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n\n\n@NgModule({\n    declarations: [ChemicalassociationComponent],\n    imports: [\n      CommonModule,\n      ChemicalassociationRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule,\n      FileModule\n    ]\n  })\nexport class ChemicalassociationModule { }\n\n"],"names":["RouterModule","ChemicalassociationComponent","routes","path","component","ChemicalassociationRoutingModule","forChild","imports","exports","Properties","Consts","HttpHeaders","i0","constructor","apiService","navigationService","router","route","CURRENT_SAMPLE_ID","CURRENT_SAMPLE_NAME","HELP_URL_SAMPLE_COMPOSITION_CHEMICAL_ASSOCIATION","ngOnInit","setCurrentSelectedItem","currentDropdownValues","entityOptionsA","entityOptionsB","composingElementOptionsA","composingElementOptionsB","nanomaterialEntityOptions","functionalizingEntityOptions","data","setDefaultDataSet","dataTrailer","params","subscribe","sampleId","dataId","getSampleName","toolHeadingNameManage","getdata","console","log","SAMPLE_TOOLS","JSON","parse","stringify","loadSetupData","errors","error","getError","getUrl","QUERY_CHEMICAL_ASSOCIATION_EDIT","DEBUG_CURL","curl","headers","options","method","results","doGet","e","isSubmissionValid","type","bondType","AKeys","Object","keys","BKeys","ACount","BCount","forEach","item","push","length","addOtherValue","field","currentValue","saveOther","newItem","addDropdownItem","setValue","changeEntityId","compositionType","entity","val","assoentityDisplayName","url","doPost","QUERY_CHEMICAL_ASSOCIATION_GET_COMPOSING_ELEMENTS_BY_NANO_ID","err","element","domainId","associatedElementA","entityDisplayName","displayName","associatedElementB","changeCompositionType","edit","deleteChemicalAssociation","confirm","QUERY_CHEMICAL_ASSOCIATION_DELETE","navigate","resetChemicalAssociation","resetStatus","submitChemicalAssociation","QUERY_CHEMICAL_ASSOCIATION_SAVE","selectAssociatedElement","entityId","loadDropdowns","QUERY_CHEMICAL_ASSOCIATION_SETUP","setupData","nanoUrl","QUERY_CHEMICAL_ASSOCIATION_GET_ASSOCIATED_ELEMENT_OPTIONS","functionalizingUrl","changeFile","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","OtherDropdownModule","FileModule","ChemicalassociationModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}