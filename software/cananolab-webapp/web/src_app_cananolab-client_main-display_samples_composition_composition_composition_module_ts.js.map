{"version":3,"file":"src_app_cananolab-client_main-display_samples_composition_composition_composition_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/composition/composition/composition-routing.module.ts","./src/app/cananolab-client/main-display/samples/composition/composition/composition.component.ts","./src/app/cananolab-client/main-display/samples/composition/composition/composition.component.html","./src/app/cananolab-client/main-display/samples/composition/composition/composition.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompositionComponent } from './composition.component';\nconst routes: Routes = [{ path: '', component: CompositionComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompositionRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport {StatusDisplayService } from '../../../../status-display/status-display.service';\n@Component( {\n    selector: 'canano-composition',\n    templateUrl: './composition.component.html',\n    styleUrls: ['./composition.component.scss']\n} )\nexport class CompositionComponent implements OnInit{\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleName = Properties.CURRENT_SAMPLE_NAME;\n    helpUrl =  Consts.HELP_URL_SAMPLE_COMPOSITION;\n    toolHeadingNameManage;\n    data;\n    errors = {};\n    message = '';\n    editUrl = false;\n    sectionToShow = 'all';\n    constructor( private statusDisplayService: StatusDisplayService, private apiService: ApiService, private navigationService: NavigationService, private router: Router, private route: ActivatedRoute ){\n    }\n\n    ngOnInit(): void{\n        this.editUrl = this.statusDisplayService.isEditUrl();\n        this.navigationService.setCurrentSelectedItem(1);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                setTimeout(() => {\n                    Properties.SAMPLE_TOOLS = true;\n\n                }, 200)\n                this.sampleId = params['sampleId'];\n                if (this.sampleId <= 0) {\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                } else {\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                }\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data => this.toolHeadingNameManage = 'Sample ' + data['sampleName'] + ' Composition'\n                )\n                this.data = this.getCompositionEditData().subscribe(\n                    data => {\n                        this.errors = {};\n                        this.data = data;\n                        console.log(data.status);\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                    },\n                    error => {\n                        this.errors = error;\n                        console.log(error);\n                    });\n            }\n        );\n    }\n\n    convertTitlesToRealWords(title) {\n        const wordRegex = /[A-Z]?[a-z]+|[0-9]+|[A-Z]+(?![a-z])/g;\n        const result = title.match(wordRegex);\n        return result.join(' ')\n    }\n\n    getCompositionEditData(){\n        let getUrl = Consts.QUERY_COMPOSITION_SUMMARY_VIEW;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n            console.log( curl );\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl, 'sampleId=' + this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n\n    }\n    onChemicalAssociationClick(dataId){\n        if (dataId == -1){\n            this.router.navigate( ['home/samples/composition/chemical-association', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/chemical-association', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n    onFunctionalizingEntityClick(dataId){\n        if (dataId == -1){\n            this.router.navigate( ['home/samples/composition/functionalizing-entity', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/functionalizing-entity', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n\n    onNanomaterialEntityClick(dataId){\n        if (dataId == -1) {\n            this.router.navigate( ['home/samples/composition/nanomaterial-entity', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/nanomaterial-entity', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n    onCompositionFileClick(dataId){\n        if (dataId == -1){\n            this.router.navigate( ['home/samples/composition/composition-file', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/composition-file', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n\n    propertyCheck(entry) {\n        if (entry['Properties']) {\n            let keys = Object.keys(entry['Properties']);\n            let displayableItems = [];\n            keys.forEach(item => {\n                if (entry.Properties[item] && entry.Properties[item] != '') {\n                    displayableItems.push(item);\n                }\n            });\n            if (displayableItems.length) {\n                return true\n            }\n        }\n\n\n        return false\n    }\n\n    showSection(value) {\n        this.sectionToShow = value;\n    }\n\n    splitKeywordString(keyword) {\n        return keyword.split('\\n')\n    }\n\n\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\" [print]=\"true\" [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'COMPOSITION']\">\n\n</canano-main-display-heading>\n\n<!-- This same page is used for both \"view\" and \"edit\" modes. Add and -->\n<!-- Edit buttons are shown in the latter case. Note that this behavior -->\n<!-- is driven by \"view\" being in the page URL-->\n<div class=\"error\" *ngIf=\"errors['error']\">\n    {{errors['error']}}\n</div>\n<div class=\"error\" *ngIf=\"message\">\n    {{message}}\n</div>\n    <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" id=\"nano-tab\" data-toggle=\"tab\" (click)=\"showSection('nanomaterialentity')\">Nanomaterial Entity</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"functionalizing-tab\" data-toggle=\"tab\" (click)=\"showSection('functionalizingentity')\">Functionalizing Entity</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"chemical-tab\" data-toggle=\"tab\" (click)=\"showSection('chemicalassociation')\">Chemical Association</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"file-tab\" data-toggle=\"tab\" (click)=\"showSection('compositionfile')\">Composition File</a>\n          </li>\n    </ul>\n<div class=\"mainSection\" *ngIf=\"data&&(sectionToShow=='all'||sectionToShow=='nanomaterialentity')\">\n    <div id=\"nanomaterialEntity\" class=\"header\" *ngIf=\"sectionToShow=='all'||sectionToShow=='nanomaterialentity'\">\n        Nanomaterial Entity <button *ngIf=\"editUrl\" (click)=\"onNanomaterialEntityClick(-1)\" class=\"btn btn-primary btn-sm\">Add</button>\n    </div>\n    <span *ngFor=\"let nanomaterial of data['nanomaterialentity'] | keyvalue; let index = index\">\n        <div class=\"blueHeader\">{{nanomaterial.key}}</div><br />\n        <div class=\"mainBorder\" *ngFor=\"let entry of nanomaterial.value\">\n            <div class=\"editButton\" *ngIf=\"editUrl\">\n                <button class=\"btn btn-primary btn-sm\" (click)=\"onNanomaterialEntityClick(entry['dataId'] )\">\n                    Edit\n                </button>\n            </div>\n\n            <div>\n                <table class=\"dataMain\">\n                    <tr *ngIf=\"entry.Description\">\n                        <td class=\"label\">Description</td>\n                        <td [innerHtml]=\"entry.Description\"></td>\n                    </tr>\n                    <tr *ngIf=\"entry['isWithProperties'] && propertyCheck(entry)\">\n                        <td class=\"label\">Properties</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th *ngFor=\"let property of entry['Properties'] | keyvalue\">\n                                        <span [innerHtml]=\"convertTitlesToRealWords(property.key)\"></span>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <td *ngFor=\"let property of entry['Properties'] | keyvalue\">\n                                        <span [innerHtml]=\"property.value\"></span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['ComposingElements'].length\">\n                        <td class=\"label\">Composing Elements</td>\n                        <td>\n\n                            <div *ngFor=\"let ce of entry['ComposingElements']; let last=last\">\n                                <table class=\"dataTable\" [ngClass]=\"{'last':last}\">\n                                    <tr>\n                                        <th class=\"label\" colspan=\"2\" [innerHtml]=\"ce.DisplayName\"></th>\n                                    </tr>\n                                    <tr *ngIf=\"ce.PubChemId!=''\">\n                                        <td class=\"label\">\n                                            PubChem ID\n                                        </td>\n                                        <td [innerHtml]=\"ce.PubChemId\"></td>\n                                    </tr>\n                                    <tr *ngIf=\"ce.MolecularFormulaDisplayName!=''\">\n                                        <td class=\"label\">\n                                            Molecular Formula\n                                        </td>\n                                        <td [innerHtml]=\"ce.MolecularFormulaDisplayName\"></td>\n                                    </tr>\n                                    <tr *ngIf=\"ce.Description!=''\">\n                                        <td class=\"label\">\n                                            Description\n                                        </td>\n                                        <td span [innerHtml]=\"ce.Description\"></td>\n                                    </tr>\n                                    <tr *ngIf=\"ce.Function\">\n                                        <td class=\"label\">\n                                            Function\n                                        </td>\n                                        <td>\n                                            <ul>\n                                                <li *ngFor=\"let inherentfunction of ce.Function\">\n                                                    <span [innerHtml]=\"inherentfunction\"></span>\n                                                </li>\n                                            </ul>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['Files'].length\">\n                        <td class=\"label\">Files</td>\n                        <td>\n                                <table class=\"dataTable\">\n                                    <tr>\n                                        <th>File Title and Download Link</th>\n                                        <th>Keywords</th>\n                                        <th>Description</th>\n                                    </tr>\n                                    <tr *ngFor=\"let file of entry['Files']; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                        <td class=\"label\">\n                                            <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                                                <a href=\"{{file.URI}}\" target=\"blank\">{{file.Title}}</a>\n                                            </span>\n                                            <ng-template #elseBlock>\n                                                <span *ngIf=\"file.isImage; else elseBlock\">{{file.Title}}<br />\n                                                    <img src=\"/rest/sample/downloadImage?sampleId={{sampleId}}&fileId={{file.fileId}}\"\n                                                        border=\"0\" width=\"150\" alt=\"uploaded image\">\n                                                </span>\n                                                <ng-template #elseBlock>\n                                                    <a href=\"/rest/sample/download?sampleId={{sampleId}}&fileId={{file.fileId}}\"\n                                                        target=\"blank\" [innerHtml]=\"file.Title\"></a>\n                                                </ng-template>\n                                            </ng-template>\n                                        </td>\n                                        <td>\n                                            <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                                                <span [innerHtml]=\"keyword\"></span>\n                                            </div>\n                                        </td>\n                                        <td [innerHtml]=\"file.Description\"></td>\n                                    </tr>\n                                </table>\n                        </td>\n                    </tr>\n\n                </table>\n            </div>\n        </div>\n    </span>\n</div>\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='functionalizingentity'\">\n    <div id=\"functionalizingEntity\" class=\"header\">\n        Functionalizing Entity <button *ngIf=\"editUrl\" class=\"btn btn-primary btn-sm\"\n            (click)=\"onFunctionalizingEntityClick(-1)\">Add</button>\n    </div>\n    <span *ngFor=\"let functionalizingentity of data['functionalizingentity'] | keyvalue; let index = index\">\n\n        <div class=\"blueHeader\">{{functionalizingentity.key}}</div><br />\n        <div class=\"mainBorder\" [ngClass]=\"{'last':last}\"\n            *ngFor=\"let entry of functionalizingentity.value;let last=last\">\n            <div class=\"editButton\" *ngIf=\"editUrl\"><button class=\"btn btn-primary btn-sm\"\n                    (click)=\"onFunctionalizingEntityClick(entry.dataId)\">Edit</button></div>\n            <div>\n                <table class=\"dataMain\">\n                    <tr *ngIf=\"entry.Name\">\n                        <td class=\"label\">Name</td>\n                        <td [innerHtml]=\"entry.Name\"></td>\n                    </tr>\n                    <tr *ngIf=\"entry.pubChemLink\">\n                        <td class=\"label\">PubChem ID</td>\n                        <td><a [href]=\"entry.pubChemLink\" target=\"blank\" [innerHtml]=\"entry.pubChemID\"></a></td>\n                    </tr>\n                    <tr *ngIf=\"entry.value\">\n                        <td class=\"label\">Amount</td>\n                        <td>{{entry.value}} {{entry.valueUnit}}</td>\n                    </tr>\n                    <tr *ngIf=\"entry.MolecularFormulaDisplayName\">\n                        <td class=\"label\">Molecular Formula</td>\n                        <td [innerHtml]=\"entry.MolecularFormulaDisplayName\"></td>\n                    </tr>\n                    <tr *ngIf=\"propertyCheck(entry)\">\n                        <td class=\"label\">Properties</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th *ngFor=\"let property of entry['Properties'] | keyvalue\">\n                                        <span [innerHtml]=\"convertTitlesToRealWords(property.key)\"></span>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <td *ngFor=\"let property of entry['Properties'] | keyvalue\">\n                                        <span [innerHtml]=\"property.value\"></span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['Functions'].length\">\n                        <td class=\"label\">Function(s)</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Type</th>\n                                    <th>Image Modality</th>\n                                    <th>Description</th>\n                                </tr>\n                                <tr *ngFor=\"let func of entry.Functions; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td [innerHtml]=\"func.Type\"></td>\n                                    <td [innerHtml]=\"func.Modality\"></td>\n                                    <td [innerHtml]=\"func.FunctionDescription\"></td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry.ActivationMethod\">\n                        <td class=\"label\">Activation Method</td>\n                        <td>{{entry.ActivationMethod}}</td>\n                    </tr>\n                    <tr *ngIf=\"entry.Desc\">\n                        <td class=\"label\">Description</td>\n                        <td [innerHtml]=\"entry.Desc\"></td>\n                    </tr>\n                    <tr *ngIf=\"entry['Files'].length\">\n                        <td class=\"label\">Files</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Title and Download Link</th>\n                                    <th>Keywords</th>\n                                    <th>Description</th>\n                                </tr>\n                                <tr *ngFor=\"let file of entry['Files']; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>\n                                        <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                                            <a href=\"{{file.URI}}\" target=\"blank\" [innerHtml]=\"file.Title\"></a>\n                                        </span>\n                                        <ng-template #elseBlock>\n                                            <span *ngIf=\"file.isImage; else elseBlock\"><span [innerHTML]=\"file.Title\"></span><br/>\n                                                <img src=\"/rest/sample/downloadImage?sampleId={{sampleId}}&fileId={{file.fileId}}\"\n                                                    border=\"0\" width=\"150\" alt=\"uploaded image\">\n                                            </span>\n                                            <ng-template #elseBlock>\n                                                <a href=\"/rest/sample/download?sampleId={{sampleId}}&fileId={{file.fileId}}\"\n                                                    target=\"blank\" [innerHtml]=\"file.Title\"></a>\n                                            </ng-template>\n                                        </ng-template>\n                                    </td>\n                                    <td>\n                                        <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                                            <span [innerHtml]=\"keyword\"></span>\n                                        </div>\n                                    </td>\n                                    <td [innerHtml]=\"file.Description\"></td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </span>\n</div>\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='chemicalassociation'\">\n    <div id=\"chemicalAssociation\" class=\"header\">\n        Chemical Association<button *ngIf=\"editUrl\" (click)=\"onChemicalAssociationClick(-1)\"\n            class=\"btn btn-primary btn-sm\">Add</button>\n    </div>\n    <span *ngFor=\"let chemicalassociation of data['chemicalassociation'] | keyvalue; let index = index\">\n        <div class=\"blueHeader\">{{chemicalassociation.key}}</div><br />\n        <div class=\"mainBorder\" *ngFor=\"let entry of chemicalassociation.value;let last=last\" [ngClass]=\"{'last':last}\">\n            <div class=\"editButton\" *ngIf=\"editUrl\"><button class=\"btn btn-primary btn-sm\"\n                    (click)=\"onChemicalAssociationClick(entry.dataId)\">Edit</button></div>\n            <div>\n                <table class=\"dataMain\">\n                    <tr *ngIf=\"entry.BondType\">\n                        <td class=\"label\">Bond Type</td>\n                         <td [innerHtml]=\"entry.BondType\"></td>\n                    </tr>\n                    <tr *ngIf=\"entry.Description\">\n                        <td class=\"label\">Description</td>\n                        <td [innerHtml]=\"entry.Description\"></td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">Associated Elements</td>\n                        <td>\n                            <table class=\"properties\">\n                                <tr>\n                                    <td>{{entry.AssocitedElements.CompositiontypeA}}\n                                        {{entry.AssocitedElements.EntityDisplayNameA}} composing element of type\n                                        {{entry.AssocitedElements.ComposingElementTypeA}}\n                                        (name:{{entry.AssocitedElements.DomainElementNameA}})\n                                    </td>\n                                    <td style=\"text-align:center\">associated with\n                                        <img src=\"assets/images/arrow_left_right_gray.gif\" alt=\"Double ended arrow\">\n                                    </td>\n                                    <td>\n                                        {{entry.AssocitedElements.CompositiontypeB}}\n                                        {{entry.AssocitedElements.EntityDisplayNameB}} (name:\n                                        {{entry.AssocitedElements.DomainElementNameB}})\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['Files']\">\n                        <td class=\"label\">Files</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Title and Download Link</th>\n                                    <th>Keywords</th>\n                                    <th>Description</th>\n                                </tr>\n                                <tr *ngFor=\"let file of entry['Files']; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>\n                                        <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                                            <a href=\"{{file.URI}}\" target=\"blank\">{{file.Title}}</a>\n                                        </span>\n                                        <ng-template #elseBlock>\n                                            <span *ngIf=\"file.isImage; else elseBlock\">{{file.Title}}<br />\n                                                <img src=\"/rest/sample/downloadImage?sampleId={{sampleId}}&fileId={{file.fileId}}\"\n                                                    border=\"0\" width=\"150\" alt=\"uploaded image\">\n                                            </span>\n                                            <ng-template #elseBlock>\n                                                <a href=\"/rest/sample/download?sampleId={{sampleId}}&fileId={{file.fileId}}\"\n                                                    target=\"blank\" [innerHtml]=\"file.Title\"></a>\n                                            </ng-template>\n                                        </ng-template>\n                                    </td>\n                                    <td>\n                                        <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                                            <span [innerHtml]=\"keyword\"></span>\n                                        </div>\n                                    </td>\n                                    <td [innerHtml]=\"file.Description\"></td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </span>\n</div>\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='compositionfile'\">\n    <div id=\"compositionFile\" class=\"header\">\n        Composition File <button *ngIf=\"editUrl\" (click)=\"onCompositionFileClick(-1)\"\n            class=\"btn btn-primary btn-sm\">Add</button>\n    </div>\n    <ng-container *ngFor=\"let compositionfile of data['compositionfile'] | keyvalue; let index = index\">\n        <div class=\"blueHeader\">{{compositionfile.key}}</div><br/>\n        <div class=\"mainBorder\" [ngClass]=\"mainBorder\">\n            <table class=\"dataTable\">\n                <tr>\n                    <th>Title and Download Link</th>\n                    <th>Keywords</th>\n                    <th>Description</th>\n                    <th *ngIf=\"editUrl\"></th>\n                </tr>\n                <tr *ngFor=\"let file of compositionfile.value; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                    <td>\n                        <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                            <a href=\"{{file.URI}}\" target=\"blank\" [innerHTML]=\"file.Title\"></a>\n                        </span>\n                        <ng-template #elseBlock>\n                            <span *ngIf=\"file.isImage; else elseBlock\">{{file.Title}}<br />\n                                <img src=\"/rest/sample/downloadImage?sampleId={{sampleId}}&fileId={{file.fileId}}\" border=\"0\"\n                                    width=\"150\" alt=\"uploaded image\">\n                            </span>\n                            <ng-template #elseBlock>\n                                <a href=\"/rest/sample/download?sampleId={{sampleId}}&fileId={{file.fileId}}\" target=\"blank\" [innerHTML]=\"file.Title\"></a>\n                            </ng-template>\n                        </ng-template>\n                    </td>\n                    <td>\n                        <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                            <span [innerHtml]=\"keyword\"></span>\n                        </div>\n                    </td>\n                    <td [innerHtml]=\"file.Description\"></td>\n                    <td *ngIf=\"editUrl\">\n                        <button class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\"\n                            (click)=\"onCompositionFileClick(file.dataId)\">Edit</button>\n                    </td>\n                </tr>\n            </table><br />\n        </div>\n    </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositionComponent } from './composition.component';\nimport { CompositionRoutingModule } from './composition-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [CompositionComponent],\n    imports: [\n      CommonModule,\n      CompositionRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class CompositionModule { }\n"],"names":["RouterModule","CompositionComponent","routes","path","component","CompositionRoutingModule","forChild","imports","exports","Properties","Consts","HttpHeaders","timeout","i0","constructor","statusDisplayService","apiService","navigationService","router","route","CURRENT_SAMPLE_ID","CURRENT_SAMPLE_NAME","HELP_URL_SAMPLE_COMPOSITION","ngOnInit","editUrl","isEditUrl","setCurrentSelectedItem","params","subscribe","setTimeout","SAMPLE_TOOLS","sampleId","getSampleName","data","toolHeadingNameManage","getCompositionEditData","errors","console","log","status","error","convertTitlesToRealWords","title","wordRegex","result","match","join","getUrl","QUERY_COMPOSITION_SUMMARY_VIEW","DEBUG_CURL","curl","headers","options","method","results","doGet","pipe","HTTP_TIMEOUT","e","onChemicalAssociationClick","dataId","navigate","onFunctionalizingEntityClick","onNanomaterialEntityClick","onCompositionFileClick","propertyCheck","entry","keys","Object","displayableItems","forEach","item","push","length","showSection","value","sectionToShow","splitKeywordString","keyword","split","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","CompositionModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}