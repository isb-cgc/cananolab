{"version":3,"file":"src_app_cananolab-client_main-display_samples_synthesis_functionalization_functionalization_m-1aab63.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/synthesis/functionalization/functionalization-routing.module.ts","./src/app/cananolab-client/main-display/samples/synthesis/functionalization/functionalization.component.ts","./src/app/cananolab-client/main-display/samples/synthesis/functionalization/functionalization.component.html","./src/app/cananolab-client/main-display/samples/synthesis/functionalization/functionalization.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FunctionalizationComponent } from './functionalization.component';\nconst routes: Routes = [{ path: '', component: FunctionalizationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FunctionalizationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\n\n@Component({\n  selector: 'canano-materials',\n  templateUrl: './functionalization.component.html',\n  styleUrls: ['./functionalization.component.scss']\n})\nexport class FunctionalizationComponent implements OnInit {\n    functionalizationElementIndex;\n    consts=Consts;\n    functionalizationElement;\n    currentDropdownValues = {};\n    currentField;\n    data;\n    dataTrailer;\n    dataId;\n    errors = {};\n    helpUrl = Consts.HELP_URL_SAMPLE_SYNTHESIS;\n    inherentFunctionIndex;\n    inherentFunction;\n    resetStatus=false;\n    otherValue;\n    sampleId;\n    setupData;\n    toolHeadingNameManage = ' Sample Synthesis - Functionalization';\n\n    constructor(\n        private apiService: ApiService,\n        private navigationService: NavigationService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) { }\n\n    ngOnInit(): void {\n        this.navigationService.setCurrentSelectedItem(4);\n        this.route.params.subscribe((params: Params) => {\n            this.sampleId = params['sampleId'];\n            this.dataId = params['dataId'];\n            this.apiService\n                .doGet(\n                    Consts.QUERY_SYNTHESIS_FUNCTIONALIZATION_SETUP,\n                    'sampleId=' + this.sampleId\n                )\n                .subscribe(\n                    (data) => {\n                        this.setupData = data;\n                        Properties.SAMPLE_TOOLS = true;\n                        Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                    },\n                    (errors) => {\n                        this.errors = errors;\n                    }\n                );\n\n            if (this.dataId) {\n                this.apiService\n                    .doGet(\n                        Consts.QUERY_SYNTHESIS_FUNCTIONALIZATION_EDIT,\n                        'sampleId=' + this.sampleId + '&dataId=' + this.dataId\n                    )\n                    .subscribe(\n                        (data) => {\n                            this.data = data;\n                            // this.dataTrailer = JSON.parse(JSON.stringify(data));\n                            this.errors = {};\n                        },\n                        (errors) => {\n                            this.errors = errors;\n                        }\n                    );\n            } else {\n                this.setupSynthesisFunctionalization();\n            }\n        });\n    }\n\n    setupSynthesisFunctionalization() {\n        this.data = {\n            description: '',\n            type: '',\n            sampleId: this.sampleId,\n            functionalizationElements: [],\n            fileElements: [],\n            simpleProtocol: { displayName: '', domainFileId: '', domainFileUri: '', domainId: '' }\n        };\n        this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n    }\n\n    addInherentFunction() {\n        this.inherentFunctionIndex=-1;\n        this.inherentFunction={type:\"\",description:\"\"};\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n    addFunctionalizationElement() {\n        this.functionalizationElementIndex = -1;\n        this.functionalizationElement = {\n            type: '',\n            chemicalName: '',\n            pubChemDataSource: '',\n            activationMethod:'',\n            valueUnit: '',\n            molecularFormulaType: '',\n            inherentFunctionList: [],\n        };\n        setTimeout(function () {\n            document.getElementById('functionalizationElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    addFile() {\n        this.functionalizationElementIndex = -1;\n        this.functionalizationElement = {\n            type: '',\n            chemicalName: '',\n            pubChemDataSource: '',\n            activationMethod: '',\n            valueUnit: '',\n            molecularFormulaType: '',\n            inherentFunctionList: [],\n        };\n        setTimeout(function () {\n            document.getElementById('functionalizationElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    }\n\n    cancelFunctionalizationElement() {\n        this.functionalizationElementIndex = null;\n        this.inherentFunctionIndex = null;\n    }\n\n    cancelInherentFunction() {\n        this.inherentFunctionIndex=null;\n    }\n\n    changeFile(newItem: Object) {\n        if (newItem['type'] == 'save' || newItem['type'] == 'delete') {\n            this.data = newItem['data'];\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        }\n    }\n\n    delete() {\n        if (confirm('Are you sure you wish to delete this functionalization?')) {\n            setTimeout(() => {\n                this.apiService\n                    .doPost(Consts.QUERY_SYNTHESIS_FUNCTIONALIZATION_DELETE, this.data)\n                    .subscribe(\n                        (data) => {\n                            this.router.navigate([\n                                'home/samples/synthesis',\n                                this.sampleId,\n                            ]);\n                        },\n                        (error) => {\n                            this.errors = error;\n                        }\n                    );\n            }, 200);\n        }\n    }\n\n    deleteFunctionalizationElement() {\n        if (\n            confirm('Are you sure you wish to delete this functionalization element?')\n        ) {\n            this.data.functionalizationElementBeingEdited = this.functionalizationElement;\n            this.data.functionalizationElements.splice(\n                this.data.functionalizationElements[this.functionalizationElementIndex],\n                1\n            );\n            this.functionalizationElementIndex = null;\n        }\n    }\n\n    deleteInherentFunction() {\n        if (confirm(\"Are you sure you wish to delete this inherent function?\")) {\n            this.functionalizationElement.inherentFunctionList.splice(this.inherentFunctionIndex,1)\n        };\n        this.inherentFunctionIndex=null;\n    }\n\n    editFunctionalizationElement(index, element) {\n        this.functionalizationElement = JSON.parse(JSON.stringify(element));\n        this.functionalizationElementIndex = index;\n        setTimeout(function () {\n            document.getElementById('functionalizationElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    editInherentFunction(fIndex,iFunction) {\n        this.inherentFunctionIndex=fIndex;\n        this.inherentFunction=JSON.parse(JSON.stringify(iFunction));\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n    getError(error:Object) {\n        this.errors=error;\n    }\n\n    readyToSubmit() {\n        let submissionStatus = true;\n        // if (this.data.type == 'biopolymer') {\n        //     if (\n        //         this.data.domainEntity.name == '' ||\n        //         this.data.domainEntity.name == null\n        //     )\n        //         submissionStatus = false;\n        //     if (\n        //         this.data.domainEntity.type == '' ||\n        //         this.data.domainEntity.type == null\n        //     )\n        //         submissionStatus = false;\n        // }\n        if (this.data.simpleProtocol.displayName == '') submissionStatus = false;\n        return submissionStatus;\n    }\n\n    reset() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n        this.functionalizationElementIndex=null;\n        this.inherentFunctionIndex=null;\n        this.resetStatus=true;\n    }\n\n    saveFunctionalizationElement() {\n        if (this.functionalizationElementIndex == -1) {\n            this.data['functionalizationElements'].push(this.functionalizationElement);\n            this.data['functionalizationElementBeingEdited'] = this.functionalizationElement;\n        } else {\n            this.data['functionalizationElements'][this.functionalizationElementIndex] =\n                this.functionalizationElement;\n            this.data['functionalizationElementBeingEdited'] = this.functionalizationElement;\n        }\n        this.functionalizationElementIndex = null;\n    }\n\n    saveInherentFunction() {\n        if (this.inherentFunctionIndex==-1) {\n            if (!this.functionalizationElement.inherentFunctionList) {\n                this.functionalizationElement['inherentFunctionList']=[];\n            }\n            this.functionalizationElement.inherentFunctionList.push(this.inherentFunction);\n        }\n        else {\n            this.functionalizationElement.inherentFunctionList[this.inherentFunctionIndex]=this.inherentFunction;\n        }\n        this.inherentFunctionIndex=null;\n    }\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'], newItem['value']);\n            this.setValue(newItem['field'], newItem['value']);\n        } else {\n            this.setValue(newItem['field'], newItem['value']);\n        }\n    }\n\n    setupDataTrailer(data) {\n        this.dataTrailer = JSON.parse(JSON.stringify(data));\n    }\n\n    prepareSubmitData() {\n        if (this.data.simpleProtocol.displayName != '') {\n            this.data.simpleProtocol = this.setupData.protocolLookup.find(\n                e => e.displayName == this.data.simpleProtocol.displayName);\n        }\n    }\n\n    submit() {\n        this.prepareSubmitData();\n        this.apiService\n            .doPost(Consts.QUERY_SYNTHESIS_FUNCTIONALIZATION_UPDATE, this.data)\n            .subscribe(\n                (data) => {\n                    this.router.navigate([\n                        'home/samples/synthesis',\n                        this.sampleId,\n                    ]);\n                },\n                (errors) => {\n                    this.errors = errors;\n                }\n            );\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\">\n</canano-main-display-heading>\n\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <form name=\"functionalizationForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"protocolType\">\n                            Protocol*\n                        </label>\n                    </td>\n                    <td>\n                        <div>\n                            <select name=\"protocolType\" id=\"protocolType\" [(ngModel)]=\"data.simpleProtocol.displayName\">\n                                <option [ngValue]=\"''\">--Select--</option>\n                                <option *ngFor=\"let protocol of setupData['protocolLookup']\" [ngValue]=\"protocol.displayName\">\n                                    {{protocol.displayName}}\n                                </option>\n                            </select>\n                       </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"description\">\n                            Description\n                        </label>\n                    </td>\n                    <td>\n                        <textarea name=\"description\" id=\"description\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.description\">\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <br>\n\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        Functionalization Materials\n                    </td>\n                    <td>\n                        <button type=\"button\" (click)=\"addFunctionalizationElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.functionalizationElements.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable properties\" *ngFor=\"let cElement of data.functionalizationElements;let cIndex=index\">\n                            <tr>\n                                <th colspan=\"2\">\n                                    {{cElement.type}} (name:{{cElement.chemicalName}})\n                                </th>\n                                <th></th>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    PubChem ID\n                                </td>\n                                <td>\n                                    {{cElement.pubChemID}}\n                                </td>\n                                <td>\n                                    <button type=\"button\" (click)=\"editFunctionalizationElement(cIndex,cElement)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Molecular Formula\n                                </td>\n                                <td colspan=\"2\">\n                                    {{cElement.molecularFormula}} ({{cElement.molecularFormulaType}})\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Description\n                                </td>\n                                <td colspan=\"2\">\n                                    {{cElement.description}}\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"cElement.inherentFunctionList\">\n                                <td class=\"label\">\n                                    Function\n                                </td>\n                                <td colspan=\"2\">\n                                    <div *ngFor=\"let function of cElement.inherentFunctionList\">\n                                        {{function.type}}:{{function.description}}\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"functionalizationElementIndex!=null\" id=\"functionalizationElementForm\">\n                    <td></td>\n                    <td>\n                        <div class=\"mainBorder\" style=\"background-color: #d3e4de;\">\n                            <table class=\"dataMain\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cType\">\n                                            Functionalization Type*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select id=\"cType\" name=\"cType\" [(ngModel)]=\"functionalizationElement.type\">\n                                            <option [ngValue]=\"''\" [selected]=\"functionalizationElement.type==type\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.materialTypes\" [selected]=\"type==functionalizationElement.type\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"cName*\">\n                                            Chemical Name*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"cName\" [(ngModel)]=\"functionalizationElement.chemicalName\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cPubchemDataSource\">\n                                            PubChem Data Source\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select id=\"cPubchemDataSource\" name=\"cPubchemDataSource\" [(ngModel)]=\"functionalizationElement.pubChemDataSource\">\n                                            <option [ngValue]=\"''\" [selected]=\"functionalizationElement.pubChemDataSource===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.pubChemDataSources\" [selected]=\"type==functionalizationElement.pubChemDataSource\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pubChemId\">\n                                            PubChem Data ID\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" id=\"pubChemId\" name=\"pubChemId\" [(ngModel)]=\"functionalizationElement.pubChemID\">\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cPubchemDataSource\">\n                                            Activation Method\n                                        </label>\n                                    </td>\n                                    <td>\n                                         <select name=\"activationMethod\" id=\"activationMethod\" [(ngModel)]=\"functionalizationElement.activationMethod\">\n                                            <option [ngValue]=\"''\" [selected]=\"functionalizationElement.activationMethod===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.activationMethods\" [selected]=\"functionalizationElement.activationMethod==type\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"activationEffect\">\n                                            Activation Effect\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"activationEffect\" [(ngModel)]=\"functionalizationElement.activationEffect\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"amount\">\n                                            Amount\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" name=\"amount\" id=\"amount\" [(ngModel)]=\"functionalizationElement.value\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"amountunit\">\n                                            Amount Unit\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select name=\"valueUnit\" id=\"valueUnit\" [(ngModel)]=\"functionalizationElement.valueUnit\">\n                                            <option [ngValue]=\"''\" [selected]=\"functionalizationElement.valueUnit===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.amountUnits\n\" [selected]=\"functionalizationElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormulaType\">\n                                            Molecular Formula Type\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select name=\"molecularFormulaType\" id=\"molecularFormulaType\" [(ngModel)]=\"functionalizationElement.molecularFormulaType\">\n                                            <option [ngValue]=\"''\" [selected]=\"functionalizationElement.molecularFormulaType===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.formulaTypes\" [selected]=\"functionalizationElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormula\">\n                                            Molecular Formula\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <textarea name=\"molecularFormula\" id=\"molecularFormula\" rows=\"2\" cols=\"40\" [(ngModel)]=\"functionalizationElement.molecularFormula\">\n                                            {{functionalizationElement.molecularFormula}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cDescription\">\n                                            Functionalization Description\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <textarea name=\"cDescription\" id=\"cDescription\" rows=\"3\" cols=\"65\" [(ngModel)]=\"functionalizationElement.description\">\n                                            {{functionalizationElement.description}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"inherentFunction\">\n                                            Inherent Functions\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <button type='button' (click)=\"addInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                    </td>\n                                </tr>\n                                <ng-container *ngIf=\"functionalizationElement.inherentFunctionList\">\n                                    <tr *ngIf=\"functionalizationElement.inherentFunctionList.length\">\n                                        <td></td>\n                                        <td colspan=\"3\">\n                                            <table class=\"dataTable\">\n                                                <tr>\n                                                    <th>Function Type</th>\n                                                    <th>Description</th>\n                                                    <th></th>\n                                                </tr>\n                                                <tr *ngFor=\"let iFunction of functionalizationElement.inherentFunctionList;let fIndex=index\">\n                                                    <td>\n                                                        {{iFunction.type}}\n                                                    </td>\n                                                    <td>\n                                                        {{iFunction.description}}\n                                                    </td>\n                                                    <td>\n                                                        <button (click)=\"editInherentFunction(fIndex,iFunction)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <tr *ngIf=\"inherentFunctionIndex!=null\" id=\"inherentFunctionForm\">\n                                    <td>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <div class=\"mainBorder\">\n                                            <table class=\"dataMain\">\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"functionType\">\n                                                            Type\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <select name=\"type\" id=\"functionType\" [(ngModel)]=\"inherentFunction.type\">\n                                                            <option [ngValue]=\"''\" [selected]=\"inherentFunction.type===''\">--Select--</option>\n                                                            <option *ngFor=\"let type of setupData.inherentFunctionTypes\" [selected]=\"type==inherentFunction.type\">\n                                                                {{type}}\n                                                            </option>\n                                                        </select>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"inherentFunction.description\">\n                                                            Description\n                                                        </label>\n                                                    </td>\n                                                    <td colspan=\"3\">\n                                                        <textarea name=\"inherentFunction.description\" id=\"inherentFunction.description\" [(ngModel)]=\"inherentFunction.description\" rows=\"5\" cols=\"50\">\n                                                            {{inherentFunction.description}}\n                                                        </textarea>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <button *ngIf=\"inherentFunctionIndex!=-1\" (click)=\"deleteInherentFunction()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                    </td>\n                                                    <td colspan=\"3\" class=\"right\">\n                                                        <button [disabled]=\"inherentFunction.type==''\" (click)=\"saveInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                        <button (click)=\"cancelInherentFunction()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteFunctionalizationElement()\" *ngIf=\"functionalizationElementIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td></td>\n                                    <td></td>\n                                    <td class=\"right\">\n                                        <button [disabled]=\"functionalizationElement.type==''||functionalizationElement.name==''\" (click)=\"saveFunctionalizationElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelFunctionalizationElement()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        File\n                    </td>\n                    <td>\n                        <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\"  (changeFile)=\"changeFile($event)\" [nanomaterial]=\"false\" [saveUrl]=\"consts.QUERY_SYNTHESIS_FUNCTIONALIZATION_SAVE_FILE\" [deleteUrl]=\"consts.QUERY_SYNTHESIS_FUNCTIONALIZATION_REMOVE_FILE\" [sampleId]=\"sampleId\" [data]=\"data\" [fileVariable]=\"'fileBeingEdited'\" [fileArray]=\"'fileElements'\">\n                        </canano-file>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div>\n            <table class=\"submit\">\n                <tr>\n                    <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                        <button (click)=\"delete()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"!readyToSubmit()\" (click)=\"submit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FunctionalizationRoutingModule } from './functionalization-routing.module';\nimport { FunctionalizationComponent } from './functionalization.component';\n\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n\n@NgModule({\n  declarations: [FunctionalizationComponent],\n  imports: [\n    CommonModule,\n    FunctionalizationRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileModule\n  ]\n})\nexport class FunctionalizationModule { }\n"],"names":["RouterModule","FunctionalizationComponent","routes","path","component","FunctionalizationRoutingModule","forChild","imports","exports","Properties","Consts","i0","constructor","apiService","navigationService","router","route","HELP_URL_SAMPLE_SYNTHESIS","ngOnInit","setCurrentSelectedItem","params","subscribe","sampleId","dataId","doGet","QUERY_SYNTHESIS_FUNCTIONALIZATION_SETUP","data","setupData","SAMPLE_TOOLS","CURRENT_SAMPLE_ID","errors","QUERY_SYNTHESIS_FUNCTIONALIZATION_EDIT","setupSynthesisFunctionalization","description","type","functionalizationElements","fileElements","simpleProtocol","displayName","domainFileId","domainFileUri","domainId","dataTrailer","JSON","parse","stringify","addInherentFunction","inherentFunctionIndex","inherentFunction","setTimeout","document","getElementById","scrollIntoView","addFunctionalizationElement","functionalizationElementIndex","functionalizationElement","chemicalName","pubChemDataSource","activationMethod","valueUnit","molecularFormulaType","inherentFunctionList","addFile","addOtherValue","field","currentValue","currentDropdownValues","cancelFunctionalizationElement","cancelInherentFunction","changeFile","newItem","delete","confirm","doPost","QUERY_SYNTHESIS_FUNCTIONALIZATION_DELETE","navigate","error","deleteFunctionalizationElement","functionalizationElementBeingEdited","splice","deleteInherentFunction","editFunctionalizationElement","index","element","editInherentFunction","fIndex","iFunction","getError","readyToSubmit","submissionStatus","reset","resetStatus","saveFunctionalizationElement","push","saveInherentFunction","saveOther","addDropdownItem","setValue","setupDataTrailer","prepareSubmitData","protocolLookup","find","e","submit","QUERY_SYNTHESIS_FUNCTIONALIZATION_UPDATE","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","FileModule","FunctionalizationModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}