{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-edit-sample-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SampleEditComponent } from './sample-edit.component';\r\nimport { SampleEditRoutingModule } from './sample-edit-routing.module';\r\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [SampleEditComponent],\r\n    imports: [\r\n      CommonModule,\r\n      SampleEditRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      OtherDropdownModule\r\n    ]\r\n  })\r\n  export class SampleEditModule { }\r\n\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Consts } from '../../../../../constants';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Properties } from '../../../../../../assets/properties';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { ApiService } from '../../../../common/services/api.service';\r\nimport { NavigationService } from '../../../../common/services/navigation.service';\r\nimport { SampleAvailabilityDisplayService } from '../sample-search/sample-search-results/sample-availability-display/sample-availability-display.service';\r\nimport { Router} from '@angular/router';\r\n\r\n@Component( {\r\n    selector: 'canano-sample-edit',\r\n    templateUrl: './sample-edit.component.html',\r\n    styleUrls: ['./sample-edit.component.scss']\r\n} )\r\nexport class SampleEditComponent implements OnInit, OnDestroy{\r\n    availabilityEditIndex;\r\n    currentDropdownValues;\r\n    data;\r\n    dataAvailability;\r\n    dataTrailer;\r\n    errors;\r\n    loading;\r\n    userGroups;\r\n    sampleIds;\r\n    users;\r\n    theAccess;\r\n    theAccessIndex;\r\n    helpUrl = Consts.HELP_URL_SAMPLE_EDIT;\r\n    message;\r\n    pointOfContact;\r\n    pointOfContactIndex;\r\n    sampleId = -1;\r\n    toolHeadingNameSearchSample = 'Update Sample';\r\n    submitReviewButton=true;\r\n\r\n\r\n    constructor( private router:Router,private navigationService: NavigationService, private route: ActivatedRoute, private httpClient: HttpClient,\r\n                 private apiService: ApiService,\r\n                 private sampleAvailabilityDisplayService: SampleAvailabilityDisplayService){\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        this.navigationService.setCurrentSelectedItem(0);\r\n        this.currentDropdownValues = {};\r\n        this.errors={};\r\n        this.route.params.subscribe(\r\n            ( params: Params ) => {\r\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' );\r\n                if(\r\n                    this.sampleId <= 0 ){\r\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\r\n                }else{\r\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\r\n                }\r\n\r\n                this.getSampleEditData().subscribe(\r\n                    data => {\r\n                        Properties.SAMPLE_TOOLS = true;\r\n                        this.data = data;\r\n                        //console.log(data)\r\n                        this.data.keywords=this.joinKeywords(this.data.keywords);\r\n                        this.dataTrailer=JSON.parse(JSON.stringify(this.data))\r\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\r\n                    } );\r\n            } );\r\n    }\r\n\r\n    addAccess() {\r\n        this.theAccessIndex=-1;\r\n        this.theAccess={\r\n            accessType: \"\",\r\n            recipient: \"\",\r\n            recipientDisplayName: \"\",\r\n            roleName: \"\",\r\n        }\r\n\r\n        setTimeout(function () {\r\n            document.getElementById('accessForm').scrollIntoView();\r\n        }, 100);\r\n        this.getUserGroups();\r\n        this.getUsers();\r\n\r\n    }\r\n\r\n    saveAccess() {\r\n        this.data.theAccess=this.theAccess;\r\n        this.data['keywords']=this.data['keywords'].split('\\n');\r\n        this.apiService.doPost(Consts.QUERY_SAMPLE_SAVE_ACCESS,this.data).subscribe(data=> {\r\n            this.data=data;\r\n            this.data['keywords']=this.joinKeywords(this.data['keywords']);\r\n            this.dataTrailer=JSON.parse(JSON.stringify(this.data));\r\n            this.theAccessIndex=null;\r\n        })\r\n    }\r\n\r\n    changeAccessType(event) {\r\n        this.theAccess.recipient=\"\";\r\n        this.theAccess.roleName=\"\";\r\n        if (event=='role') {\r\n            this.theAccess['recipient']='ROLE_ANONYMOUS';\r\n            this.theAccess['recipientDisplayName']='Public';\r\n        }\r\n    }\r\n\r\n    cancelAccess() {\r\n        this.theAccessIndex=null;\r\n    }\r\n    deleteAccess() {\r\n        if (confirm(\"Are you sure you wish to delete this access?\")) {\r\n            this.theAccessIndex=null;\r\n            this.data['theAccess']=this.theAccess;\r\n            this.data['keywords'] = this.data['keywords'].split('\\n');\r\n            this.apiService.doPost(Consts.QUERY_SAMPLE_DELETE_ACCESS,this.data).subscribe(data=> {\r\n                this.data=data;\r\n                this.data.keywords=this.joinKeywords(this.data['keywords']);\r\n                this.dataTrailer=JSON.parse(JSON.stringify(this.data));\r\n            })\r\n        }\r\n    }\r\n\r\n    delete() {\r\n        if (confirm(\"Are you sure you wish to delete this sample?\")) {\r\n            this.apiService.doGet(Consts.QUERY_SAMPLE_DELETE,'sampleId='+this.sampleId,'text').subscribe(data=> {\r\n                this.router.navigate(['home/samples/deleted'])\r\n            },\r\n            error=> {\r\n                console.log(error)\r\n                this.errors=error;\r\n            })\r\n        }\r\n    }\r\n\r\n    editAccess(index,access) {\r\n        this.theAccessIndex=index;\r\n        this.theAccess=access;\r\n        setTimeout(function () {\r\n            document.getElementById('accessForm').scrollIntoView();\r\n        }, 100);\r\n        this.getUserGroups();\r\n        this.getUsers();\r\n\r\n    }\r\n    // set pointer fields to old values when adding other //\r\n    addOtherValue(field,currentValue) {\r\n        this.currentDropdownValues[field]=currentValue;\r\n    };\r\n\r\n    // save other value //\r\n    saveOther(newItem: Object) {\r\n        if (newItem['change'] && newItem['value']) {\r\n            this.addDropdownItem(newItem['array'],newItem['value'])\r\n            this.setValue(newItem['field'],newItem['value']);\r\n        }\r\n        else {\r\n            this.setValue(newItem['field'],newItem['value']);\r\n        }\r\n    };\r\n\r\n    deleteKeyword(index) {\r\n        console.log(index)\r\n    }\r\n\r\n    addPointOfContact() {\r\n        this.pointOfContact={organization:{name:\"\"},address:{},role:\"\"};\r\n        this.pointOfContactIndex=-1;\r\n        setTimeout(function () {\r\n            document.getElementById('pocForm').scrollIntoView();\r\n        }, 100);\r\n    }\r\n\r\n    cancelPointOfContact() {\r\n        this.pointOfContactIndex=null;\r\n    }\r\n\r\n    deletePointOfContact() {\r\n        if (confirm(\"Are you sure you wish to delete this point of contact?\")) {\r\n            this.pointOfContact['sampleId']=this.sampleId;\r\n            this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_DELETE,this.pointOfContact).subscribe(data=> {\r\n                this.errors={};\r\n                this.data=data;\r\n                this.data.keywords=this.joinKeywords(this.data.keywords);\r\n                this.dataTrailer=JSON.stringify(JSON.parse(this.data));\r\n                this.pointOfContactIndex=null;\r\n            },\r\n            errors=> {\r\n                this.errors=errors;\r\n            })\r\n        }\r\n    }\r\n\r\n    editPointOfContact(index,poc) {\r\n        this.pointOfContact = JSON.parse(JSON.stringify(poc));\r\n        this.pointOfContactIndex=index;\r\n        setTimeout(function () {\r\n            document.getElementById('pocForm').scrollIntoView();\r\n        }, 100);\r\n    }\r\n\r\n    savePointOfContact() {\r\n        this.pointOfContact['dirty']=true;\r\n        if (this.pointOfContactIndex==-1) {\r\n            this.data.pointOfContacts.push(this.pointOfContact)\r\n            console.log(this.data)\r\n        }\r\n        else {\r\n            this.data['pointOfContacts'][this.pointOfContactIndex]=this.pointOfContact;\r\n        }\r\n        this.data['keywords'] = this.data['keywords'].split('\\n');\r\n\r\n        this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_SAVE,this.data).subscribe(data=> {\r\n            data['keywords']=this.joinKeywords(this.data['keywords'])\r\n            this.data=data;\r\n            this.dataTrailer=JSON.parse(JSON.stringify(data));\r\n            this.pointOfContactIndex=null;\r\n        })\r\n    }\r\n\r\n    joinKeywords(keywords) {\r\n        if (keywords) {\r\n            return keywords.join('\\n')\r\n\r\n        }\r\n        console.log(keywords)\r\n    }\r\n\r\n\r\n    downloadReady(event) {\r\n        if (event==true) {\r\n            this.loading=null;\r\n        }\r\n        if (event==false) {\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    onSampleDeleteClick(){\r\n        console.log( 'onSampleDeleteClick' );\r\n    }\r\n\r\n    onSampleCopyClick(){\r\n        this.router.navigate(['home/samples/sample-copy',this.sampleId])\r\n    }\r\n\r\n    onSampleResetClick(){\r\n       this.data=JSON.parse(JSON.stringify(this.dataTrailer));\r\n       this.data.keywords=this.joinKeywords(this.data.keywords);\r\n    }\r\n\r\n    onSampleUpdateClick(){\r\n        console.log( 'onSampleUpdateClick sampleName: ', this.data['sampleName'] );\r\n        console.log( 'onSampleUpdateClick sampleId: ', this.data['sampleId'] );\r\n        console.log( 'onSampleUpdateClick keywords: ', this.data['keywords'] );\r\n        this.updateSample();\r\n    }\r\n\r\n    updateSample(){\r\n        let su = {};\r\n        su['sampleName'] = this.data['sampleName'];\r\n        su['sampleId'] = this.data['sampleId'];\r\n        su['keywords'] = this.data['keywords'].split('\\n');\r\n\r\n        this.apiService.doPost( Consts.QUERY_SAMPLE_UPDATE, su ).subscribe(\r\n            data => {\r\n                this.data=data;\r\n                this.data.keywords=this.joinKeywords(this.data.keywords);\r\n                this.dataTrailer=JSON.parse(JSON.stringify(this.data));\r\n                this.message='Sample Updated'\r\n            },\r\n            ( err ) => {\r\n                console.log( 'ERROR QUERY_SAMPLE_UPDATE: ', err );\r\n            } );\r\n\r\n    }\r\n\r\n    getUsers() {\r\n        this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr').subscribe(data=> {\r\n            this.users=data;\r\n        })\r\n\r\n    }\r\n\r\n    getUserGroups() {\r\n        this.apiService.doGet(Consts.QUERY_GET_USER_GROUPS,'searchStr').subscribe(data=> {\r\n            this.userGroups=data;\r\n        })\r\n    }\r\n\r\n    getSampleEditData(){\r\n        let getUrl = Consts.QUERY_SAMPLE_EDIT;\r\n\r\n        if( Properties.DEBUG_CURL ){\r\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\r\n            console.log( curl );\r\n        }\r\n\r\n        let headers = new HttpHeaders( {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        } );\r\n\r\n        let options = {\r\n            headers: headers,\r\n            method: 'get',\r\n        };\r\n\r\n        let results;\r\n        try{\r\n            results = this.apiService.doGet(getUrl,'sampleId=' + this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\r\n        }catch( e ){\r\n            // TODO react to error.\r\n            console.error( 'doGet Exception: ' + e );\r\n        }\r\n        return results;\r\n\r\n    }\r\n\r\n\r\n    onAvailabilityClick( ){\r\n        this.apiService.doGet( Consts.QUERY_SAMPLE_AVAILABILITY, 'sampleId=' + this.sampleId).subscribe(\r\n            data => {\r\n                this.sampleAvailabilityDisplayService.displayStuff( data );\r\n                this.data=data;\r\n                this.data['keywords']=this.joinKeywords(this.data['keywords']);\r\n                this.dataTrailer=JSON.parse(JSON.stringify(this.data));\r\n            },\r\n            ( err ) => {\r\n                console.log( 'ERROR QUERY_SAMPLE_AVAILABILITY: ', err );\r\n            } );\r\n    }\r\n\r\n\r\n    onAvailabilityDeleteClick( ){\r\n        if (confirm(\"Are you sure you wish to delete the data availability metric?\")) {\r\n            this.data['keywords'] = this.data['keywords'].split('\\n');\r\n\r\n            this.apiService.doPost( Consts.QUERY_SAMPLE_DELETE_AVAILABILITY, this.data).subscribe(\r\n                data => {\r\n                    this.data=data;\r\n                    this.data['keywords']=this.joinKeywords(this.data['keywords']);\r\n                    this.dataTrailer=JSON.parse(JSON.stringify(this.data));\r\n                },\r\n                ( err ) => {\r\n                    console.log( 'ERROR QUERY_SAMPLE_AVAILABILITY: ', err );\r\n                } );\r\n        }\r\n\r\n    }\r\n\r\n    onAvailabilityEdit(event) {\r\n        this.availabilityEditIndex=1;\r\n        this.apiService.doGet(Consts.QUERY_SAMPLE_VIEW_AVAILABILITY,'sampleId='+this.sampleId).subscribe(data=> {\r\n            this.dataAvailability=data;\r\n        },\r\n        errors=> {\r\n            this.errors=errors;\r\n        })\r\n    }\r\n\r\n    ngOnDestroy(): void{\r\n    }\r\n\r\n    submitForReview() {\r\n        let url = this.apiService.doPost(Consts.QUERY_SAMPLE_SUBMIT_REVIEW,{dataId:this.data.sampleId,dataName:this.data.sampleName,dataType:\"sample\"},'text');\r\n        url.subscribe(data=> {\r\n            this.submitReviewButton=false;\r\n        })\r\n    }\r\n\r\n}\r\n","<canano-main-display-heading\r\n    [helpUrl]=\"helpUrl\"\r\n    [toolHeadingName]=\"toolHeadingNameSearchSample\" [exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"[sampleId]\" (downloadReady)=\"downloadReady($event)\" [backUrl]=\"'home/samples/sample-search'\">\r\n</canano-main-display-heading>\r\n<div class=\"mainSection\" *ngIf=\"data\">\r\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\r\n\r\n    </canano-loader>\r\n    <div class=\"error\" *ngIf=\"errors['error']\">\r\n        {{errors['error']}}\r\n    </div>\r\n    <div class=\"error\" *ngIf=\"message\">\r\n        {{message}}\r\n    </div>\r\n    <div class=\"mainBorder\">\r\n        <table class=\"dataMain\">\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"data.sampleName\">\r\n                        Sample Name\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" name=\"data.sampleName\" id=\"data.sampleName\" [(ngModel)]=\"data['sampleName']\" size=\"100\">\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"data.pointOfContact\">\r\n                        Point of Contact*\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                <button class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" (click)=\"addPointOfContact()\">Add</button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td>\r\n                    <table class=\"dataTable\">\r\n                        <tr>\r\n                            <th>Primary Contact?</th>\r\n                            <th>Contact Person</th>\r\n                            <th>Organization</th>\r\n                            <th>Role</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        <tr *ngFor=\"let contact of data.pointOfContacts; let odd=odd; let pocIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\r\n                            <td>\r\n                                <ng-container *ngIf=\"contact.primaryContact\">\r\n                                    Yes\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"!contact.primaryContact\">\r\n                                    No\r\n                                </ng-container>\r\n                            </td>\r\n                            <td>\r\n                                {{contact.firstName}} {{contact.lastName}}\r\n\r\n                            </td>\r\n                            <td>\r\n                                {{contact.organization.name}}\r\n                                <div *ngIf=\"contact.address.line1\">\r\n                                    {{contact.address.line1}}\r\n                                </div>\r\n                                <div *ngIf=\"contact.address.line2\">\r\n                                    {{contact.address.line2}}\r\n                                </div>\r\n                                <span *ngIf=\"contact.address.city\">\r\n                                    {{contact.address.city}},\r\n                                </span>\r\n                                <span *ngIf=\"contact.address.stateProvince\">\r\n                                    {{contact.address.stateProvince}}\r\n                                </span>\r\n                                <span *ngIf=\"contact.address.zip\">\r\n                                    {{contact.address.zip}}\r\n                                </span>\r\n                                <span *ngIf=\"contact.address.country\">\r\n                                    {{contact.address.country}}\r\n                                </span>\r\n                            </td>\r\n                            <td>\r\n                                {{contact.role}}\r\n                            </td>\r\n                            <td>\r\n                                <button (click)=\"editPointOfContact(pocIndex,contact)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"pointOfContactIndex!=null\">\r\n                <td></td>\r\n                <td>\r\n                    <div class=\"mainBorder\" id=\"pocForm\">\r\n                        <table class=\"dataMain\">\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.organization.name\">\r\n                                        Organization Name*\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n\r\n                                    <select (ngModelChange)=\"addOtherValue('pointOfContact.organization.name',pointOfContact.organization.name)\" name=\"pointOfContact.organization.name\" id=\"pointOfContact.organization.name\" [(ngModel)]=\"pointOfContact.organization.name\">\r\n                                        <option [ngValue]=\"''\">--Select--</option>\r\n                                        <option *ngFor=\"let org of data.organizationNamesForUser\" [ngValue]=\"org\">\r\n                                            {{org}}\r\n                                        </option>\r\n                                        <option>other</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"pointOfContact.organization.name ==='other'\">\r\n                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Organization Name'\" [value]=\"currentDropdownValues['pointOfContact.organization.name']\" [field]=\"'pointOfContact.organization.name'\" [array]=\"'data.organizationNamesForUser'\">\r\n\r\n                                        </canano-other-dropdown>\r\n                                    </div>\r\n                                </td>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.role\">\r\n                                        Role\r\n                                    </label>\r\n                                </td>\r\n                                <td colspan=\"3\">\r\n                                    <select (ngModelChange)=\"addOtherValue('pointOfContact.role',pointOfContact.role)\" name=\"pointOfContact.role\" id=\"pointOfContact.role\" [(ngModel)]=\"pointOfContact['role']\">\r\n                                        <option [ngValue]=\"''\">--Select--</option>\r\n                                        <option *ngFor=\"let role of data.contactRoles\" [ngValue]=\"role\">\r\n                                            {{role}}\r\n                                        </option>\r\n                                        <option>other</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"pointOfContact.role ==='other'\">\r\n                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Role'\" [value]=\"currentDropdownValues['pointOfContact.role']\" [field]=\"'pointOfContact.role'\" [array]=\"'data.contactRoles'\">\r\n\r\n                                        </canano-other-dropdown>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.firstName\">\r\n                                        First Name\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"pointOfContact.firstName\" id=\"pointOfContact.firstName\" [(ngModel)]=\"pointOfContact.firstName\">\r\n                                </td>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.middleInitial\">\r\n                                        Middle Initial\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"pointOfContact.middleInitial\" id=\"pointOfContact.middleInitial\" [(ngModel)]=\"pointOfContact.middleInitial\" size=\"4\">\r\n                                </td>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.lastName\">\r\n                                        Last Name\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"pointOfContact.lastName\" id=\"pointOfContact.lastName\" [(ngModel)]=\"pointOfContact.lastName\">\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.phoneNumber\">\r\n                                        Phone Number\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"pointOfContact.phoneNumber\" id=\"pointOfContact.phoneNumber\" [(ngModel)]=\"pointOfContact.phoneNumber\">\r\n                                </td>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.email\">\r\n                                        Email\r\n                                    </label>\r\n                                </td>\r\n                                <td colspan=\"3\">\r\n                                    <input type=\"text\" name=\"pointOfContact.email\" id=\"pointOfContact.email\" [(ngModel)]=\"pointOfContact.email\">\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.address.line1\">\r\n                                        Address Line 1\r\n                                    </label>\r\n                                </td>\r\n                                <td colspan=\"5\">\r\n                                    <input type=\"text\" name=\"pointOfContact.address.line1\" id=\"pointOfContact.address.line1\" [(ngModel)]=\"pointOfContact.address.line1\">\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.address.line2\">\r\n                                        Address Line 2\r\n                                    </label>\r\n                                </td>\r\n                                <td colspan=\"5\">\r\n                                    <input type=\"text\" name=\"pointOfContact.address.line2\" id=\"pointOfContact.address.line2\" [(ngModel)]=\"pointOfContact.address.line2\">\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.address.city\">\r\n                                        City\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"pointOfContact.address.city\" id=\"pointOfContact.address.city\" [(ngModel)]=\"pointOfContact.address.city\">\r\n                                </td>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.address.stateProvince\">\r\n                                        State\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"pointOfContact.address.stateProvince\" id=\"pointOfContact.address.stateProvince\" [(ngModel)]=\"pointOfContact.address.stateProvince\">\r\n                                </td>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.address.zip\">\r\n                                        Zip/Postal Code\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" name=\"pointOfContact.address.zip\" id=\"pointOfContact.address.zip\" [(ngModel)]=\"pointOfContact.address.zip\" size=\"10\">\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"pointOfContact.address.country\">\r\n                                        Country\r\n                                    </label>\r\n                                </td>\r\n                                <td colspan=\"5\">\r\n                                    <input type=\"text\" name=\"pointOfContact.address.country\" id=\"pointOfContact.address.country\" [(ngModel)]=\"pointOfContact.address.country\">\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colspan=\"6\">\r\n                                    <div>\r\n                                        Enter only <i>public business-related</i> contact information into these fields (such as institutional\r\n                                        points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\r\n                                    </div>\r\n                                    <br>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\r\n                                        <b> * I have read and understood the message above.</b>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <button *ngIf=\"!pointOfContact.primaryContact\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\" (click)=\"deletePointOfContact()\">Delete</button>\r\n                                </td>\r\n                                <td colspan=\"4\"></td>\r\n                                <td>\r\n                                    <button class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" [disabled]=\"!piiConfirmed\" (click)=\"savePointOfContact()\">Save</button>\r\n                                    <button class=\"btn-canano btn-canano-default btn-canano-xs mr-1\" (click)=\"cancelPointOfContact()\">Cancel</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"data.keywords\">\r\n                        Keywords\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <textarea name=\"data.keywords\" id=\"data.keywords\" [(ngModel)]=\"data.keywords\" rows=\"7\" cols=\"70\">\r\n\r\n                    </textarea><br />\r\n                        <i>(one keyword per line)</i>\r\n\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"dataAccess\">\r\n                        Access to the\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <button (click)=\"addAccess()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td>\r\n                    <table class=\"dataTable\">\r\n                        <tr>\r\n                            <th>Group Name</th>\r\n                            <th>Access</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        <tr *ngFor=\"let group of data.groupAccesses; let odd=odd; let gIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\r\n                            <td>{{group.recipientDisplayName}}</td>\r\n                            <td>{{group.roleDisplayName}}</td>\r\n                            <td>\r\n                                <button (click)=\"editAccess(gIndex,group)\" *ngIf=\"group.recipient != 'ROLE_CURATOR'\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"data['userAccesses'].length\">\r\n                <td></td>\r\n                <td>\r\n                    <table class=\"dataTable\">\r\n                        <tr>\r\n                            <th>User Login Name</th>\r\n                            <th>Access</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        <tr *ngFor=\"let user of data.userAccesses; let odd=odd;let uIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\r\n                            <td>{{user.recipientDisplayName}}</td>\r\n                            <td>{{user.roleDisplayName}}</td>\r\n                            <td>\r\n                                <button (click)=\"editAccess(uIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"theAccessIndex!=null\" id=\"accessForm\">\r\n                <td></td>\r\n                <td>\r\n                    <div class=\"mainBorder\">\r\n                        <table class=\"dataMain access\">\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"acces\">\r\n                                        Access By*\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'group'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.group\" [(ngModel)]=\"theAccess.accessType\">\r\n                                    <label for=\"theAccess.accessType.group\" class=\"right\">\r\n                                        Collaboration Group\r\n                                    </label>\r\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'user'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.user\" [(ngModel)]=\"theAccess.accessType\">\r\n                                    <label for=\"theAccess.accessType.user\" class=\"right\">\r\n                                        User\r\n                                    </label>\r\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'role'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.role\" [(ngModel)]=\"theAccess.accessType\">\r\n                                    <label for=\"theAccess.accessType.role\" class=\"right\">\r\n                                        Public\r\n                                    </label>\r\n                                </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"theAccess['accessType']=='group'\">\r\n                                <td class=\"label\">\r\n                                    <label for=\"theAccess.collaborationGroup\">\r\n                                        Collaboration Group*\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <select name=\"theAccess.recipient\" id=\"theAccess.recipient\" [(ngModel)]=\"theAccess.recipient\">\r\n                                        <option [ngValue]=\"''\">--Select--</option>\r\n                                        <ng-container *ngFor=\"let recipient of userGroups|keyvalue\">\r\n                                            <option *ngFor=\"let group of recipient['value']\" [ngValue]=\"group\">\r\n                                                {{group}}\r\n                                            </option>\r\n                                        </ng-container>\r\n\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"theAccess['accessType']=='user'\">\r\n                                <td class=\"label\">\r\n                                    <label for=\"theAccess.user\">\r\n                                        User*\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <select name=\"theAccess.recipient\" id=\"theAccess.recipient\" [(ngModel)]=\"theAccess.recipient\">\r\n                                        <option [ngValue]=\"''\">--Select--</option>\r\n                                        <option *ngFor=\"let recipient of users|keyvalue\" [ngValue]=\"recipient.key\">\r\n                                            {{recipient.value}}, {{recipient.key}}\r\n                                        </option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"theAccess['accessType']=='role'\">\r\n                                <td colspan=\"2\" class=\"label\">\r\n                                    <label for=\"theAccess.role\">\r\n                                        Public\r\n                                    </label>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"theAccess.roleName\">\r\n                                        Access to the*\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <select name=\"theAccess.roleName\" id=\"theAccess.roleName\" [(ngModel)]=\"theAccess.roleName\">\r\n                                        <option [ngValue]=\"''\">--Select--</option>\r\n                                        <option *ngFor=\"let role of data.roleNames|keyvalue\" [ngValue]=\"role.key\">\r\n                                                {{role.value}}\r\n                                        </option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <button (click)=\"deleteAccess()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\r\n                                </td>\r\n                                <td>\r\n                                    <button [disabled]=\"theAccess.accessType==''||theAccess.recipient==''||theAccess.roleName==''\" (click)=\"saveAccess()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\r\n                                    <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"dataAvailability\">\r\n                        Data Availability Metrics\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <button *ngIf=\"!data.dataAvailability\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" (click)=\"onAvailabilityClick()\">Generate</button>\r\n                    <table class=\"dataTable availability\" *ngIf=\"data.dataAvailability\">\r\n                        <tr>\r\n                            <th>caNanoLab Availability Score</th>\r\n                            <th>MINChar Availability Score</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                {{data.dataAvailability.dataAvailability}}\r\n                            </td>\r\n                            <td>\r\n                                {{data.dataAvailability.mincharScore}}\r\n                            </td>\r\n                            <td>\r\n                                <button (click)=\"onAvailabilityEdit($event)\" data-toggle=\"modal\" [attr.aria-expanded]=\"false\" data-target=\"#availabilityMetrics\" id=\"editDataAvailabilityButton\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    <div id=\"buttons\">\r\n        <table class=\"dataMain submit\">\r\n            <tr>\r\n                <td>\r\n                    <button\r\n                        class=\"btn btn-danger m-1\"\r\n                        (click)=\"delete()\"\r\n                    >Delete</button>\r\n                    <button\r\n                        class=\"btn btn-primary m-1\"\r\n                        (click)=\"onSampleCopyClick()\"\r\n                    >Copy</button>\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        class=\"btn btn-danger m-1\"\r\n                        (click)=\"onSampleResetClick()\"\r\n                    >Reset</button>\r\n                    <button\r\n                        class=\"btn btn-primary m-1\"\r\n                        (click)=\"onSampleUpdateClick()\"\r\n                    >Update</button>\r\n                    <button class=\"btn btn-primary m-1\"\r\n                    (click)=\"submitForReview()\" *ngIf=\"data.showReviewButton&&submitReviewButton\">\r\n                        Submit For Review\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n\r\n  <!-- Data Availability Modal -->\r\n  <div class=\"modal fade\" id=\"availabilityMetrics\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-top modal-lg modal-dialog-scrollable\"  role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Data Availability Metrics</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n        <div class=\"modal-body\">\r\n            <form name=\"metrics\">\r\n            <table class=\"summaryViewWithGrid\" width=\"100%\" align=\"left\" *ngIf=\"dataAvailability\">\r\n                <tr>\r\n                    <td colspan=\"3\" class=\"help\">\r\n                        <a href=\"https://wiki.nci.nih.gov/display/caNanoLab/Managing+Samples+in+caNanoLab#ManagingSamplesincaNanoLab-Metrics\" target=\"_blank\" rel=\"nofollow noreferrer\">\r\n                            Help\r\n                        </a>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th colspan=\"3\">\r\n                        caNanoLab Availability Score: {{dataAvailability.caNanoLabScore}}&nbsp;&nbsp;\r\n                        MINChar Availability Score: {{dataAvailability.mincharScore}}\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <B>\r\n                            caNanoLab\r\n                        </B>\r\n                    </td>\r\n                    <td>\r\n                        <B>\r\n                            MINChar\r\n                        </B>\r\n                    </td>\r\n                    <td>\r\n                        <B>\r\n                            {{dataAvailability.sampleName}}\r\n                        </B>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>agglomeration and/or aggregation </td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>crystal structure/crystallinity</td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        General Sample Information\r\n                    </td>\r\n                    <td></td>\r\n                    <td>\r\n                        <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n                            <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                        </svg>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Sample Composition\r\n                    </td>\r\n                    <td>\r\n                        chemical composition\r\n                    </td>\r\n                    <td>\r\n                        <span *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='sample composition'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"indent l1\">\r\n                        nanomaterial entities\r\n                    </td>\r\n                    <td>\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='nanomaterial entities'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"indent l1\">\r\n                        functionalizing entities\r\n                    </td>\r\n                    <td>\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='functionalizing entities'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"indent l1\">\r\n                        chemical associations\r\n                    </td>\r\n                    <td>\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='chemical associations'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngFor=\"let chem of dataAvailability.chemicalAssocs\">\r\n                    <td  class=\"indent l2\">\r\n                        {{chem}}\r\n                    </td>\r\n                    <td>\r\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\r\n                            <span *ngIf=\"i['key']==chem\">{{i['value']}}\r\n                            </span>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==chem\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"indent l1\">\r\n                        sample function\r\n                    </td>\r\n                    <td>\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='sample function'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"3\">\r\n                        Physico-Chemical Characterization\r\n                    </td>\r\n                </tr>\r\n                <ng-container *ngFor=\"let char of dataAvailability.physicoChars\">\r\n                    <tr *ngIf=\"char=='surface'\">\r\n                        <td class=\"indent l1\">\r\n                            {{char}}\r\n                        </td>\r\n                        <td></td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                                <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\r\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                                </svg>\r\n                            </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n                <tr>\r\n                    <td class=\"indent l2\">\r\n                        surface area</td>\r\n                    <td>\r\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\r\n                            <span *ngIf=\"i['key']=='surface area'\">{{i['value']}}\r\n                            </span>\r\n                        </span>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='surface area'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"indent l2\">\r\n                        surface charge</td>\r\n                    <td>\r\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\r\n                            <span *ngIf=\"i['key']=='surface charge'\">{{i['value']}}\r\n                            </span>\r\n                        </span>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='surface charge'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"indent l2\">\r\n                        zeta potential</td>\r\n                    <td>\r\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\r\n                            <span *ngIf=\"i['key']=='zeta potential'\">{{i['value']}}\r\n                            </span>\r\n                        </span>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='zeta potential'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n                <ng-container *ngFor=\"let char of dataAvailability.physicoChars\">\r\n                    <tr *ngIf=\"char!='surface'\">\r\n                        <td class=\"indent l1\">\r\n                            {{char}}</td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\r\n                            <span *ngIf=\"i['key']==char\">{{i['value']}}\r\n                            </span>\r\n                        </ng-container>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                    </tr>\r\n                </ng-container>\r\n                <tr>\r\n                    <td colspan=\"3\">\r\n                        In Vitro Characterization\r\n                    </td>\r\n                </tr>\r\n                <ng-container *ngFor=\"let char of dataAvailability.invitroChars\">\r\n                    <tr>\r\n                        <td class=\"indent l1\">\r\n                            {{char}}</td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\r\n                            <span  *ngIf=\"i['key']==char\">{{i['value']}}\r\n                            </span>\r\n                        </ng-container>\r\n                    </td>\r\n                    <td>\r\n                        <ng-container  *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                    </tr>\r\n                </ng-container>\r\n                <tr>\r\n                    <td colspan=\"3\">\r\n                        In Vivo Characterization\r\n                    </td>\r\n                </tr>\r\n                    <ng-container *ngFor=\"let char of dataAvailability.invivoChars\">\r\n\r\n                    <tr>\r\n                        <td class=\"indent l1\">\r\n                            {{char}}</td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\r\n                            <span  *ngIf=\"i['key']==char\">{{i['value']}}\r\n                            </span>\r\n                        </ng-container>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                    </tr>\r\n                </ng-container>\r\n                <tr>\r\n                    <td>\r\n                        Publications\r\n                    </td>\r\n                    <td></td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\r\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='publications'\">\r\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\r\n                            </svg>\r\n                        </ng-container>\r\n                    </td>\r\n                </tr>\r\n\r\n            </table>\r\n            </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" (click)=\"onAvailabilityDeleteClick()\" data-dismiss=\"modal\" class=\"btn-canano btn-canano-danger btn-canano-modal\">Delete</button>\r\n            <button type=\"button\" (click)=\"onAvailabilityClick()\" class=\"btn-canano btn-canano-primary btn-canano-modal\" data-dismiss=\"modal\">Regenerate</button>\r\n            <button type=\"button\" data-dismiss=\"modal\" class=\"btn-canano btn-canano-default btn-canano-modal\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End Data Availabilty Modal -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SampleEditComponent } from './sample-edit.component';\r\nconst routes: Routes = [{ path: '', component: SampleEditComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SampleEditRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}