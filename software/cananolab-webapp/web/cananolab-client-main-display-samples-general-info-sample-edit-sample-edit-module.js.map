{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-general-info-sample-edit-sample-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleEditComponent } from './sample-edit.component';\nimport { SampleEditRoutingModule } from './sample-edit-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\n\n\n@NgModule({\n    declarations: [SampleEditComponent],\n    imports: [\n      CommonModule,\n      SampleEditRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule\n    ]\n  })\n  export class SampleEditModule { }\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Consts } from '../../../../../constants';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { SampleAvailabilityDisplayService } from '../sample-search/sample-search-results/sample-availability-display/sample-availability-display.service';\nimport { Router} from '@angular/router';\n\n@Component( {\n    selector: 'canano-sample-edit',\n    templateUrl: './sample-edit.component.html',\n    styleUrls: ['./sample-edit.component.scss']\n} )\nexport class SampleEditComponent implements OnInit, OnDestroy{\n    availabilityEditIndex;\n    currentDropdownValues;\n    data;\n    dataAvailability;\n    dataTrailer;\n    errors;\n    loading;\n    userGroups;\n    sampleIds;\n    users;\n    theAccess;\n    theAccessIndex;\n    helpUrl = Consts.HELP_URL_SAMPLE_EDIT;\n    message;\n    pointOfContact;\n    pointOfContactIndex;\n    sampleId = -1;\n    toolHeadingNameSearchSample = 'Update Sample';\n    submitReviewButton=true;\n\n\n    constructor( private router:Router,private navigationService: NavigationService, private route: ActivatedRoute, private httpClient: HttpClient,\n                 private apiService: ApiService,\n                 private sampleAvailabilityDisplayService: SampleAvailabilityDisplayService){\n    }\n\n    ngOnInit(): void{\n        this.navigationService.setCurrentSelectedItem(0);\n        this.currentDropdownValues = {};\n        this.errors={};\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' );\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                }\n\n                this.getSampleEditData().subscribe(\n                    data => {\n                        Properties.SAMPLE_TOOLS = true;\n                        this.data = data;\n                        //console.log(data)\n                        this.data.keywords=this.joinKeywords(this.data.keywords);\n                        this.dataTrailer=JSON.parse(JSON.stringify(this.data))\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                    } );\n            } );\n    }\n\n    addAccess() {\n        this.theAccessIndex=-1;\n        this.theAccess={\n            accessType: \"\",\n            recipient: \"\",\n            recipientDisplayName: \"\",\n            roleName: \"\",\n        }\n\n        setTimeout(function () {\n            document.getElementById('accessForm').scrollIntoView();\n        }, 100);\n        this.getUserGroups();\n        this.getUsers();\n\n    }\n\n    saveAccess() {\n        this.data.theAccess=this.theAccess;\n        this.data['keywords']=this.data['keywords'].split('\\n');\n        this.apiService.doPost(Consts.QUERY_SAMPLE_SAVE_ACCESS,this.data).subscribe(data=> {\n            this.data=data;\n            this.data['keywords']=this.joinKeywords(this.data['keywords']);\n            this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n            this.theAccessIndex=null;\n        })\n    }\n\n    changeAccessType(event) {\n        this.theAccess.recipient=\"\";\n        this.theAccess.roleName=\"\";\n        if (event=='role') {\n            this.theAccess['recipient']='ROLE_ANONYMOUS';\n            this.theAccess['recipientDisplayName']='Public';\n        }\n    }\n\n    cancelAccess() {\n        this.theAccessIndex=null;\n    }\n    deleteAccess() {\n        if (confirm(\"Are you sure you wish to delete this access?\")) {\n            this.theAccessIndex=null;\n            this.data['theAccess']=this.theAccess;\n            this.data['keywords'] = this.data['keywords'].split('\\n');\n            this.apiService.doPost(Consts.QUERY_SAMPLE_DELETE_ACCESS,this.data).subscribe(data=> {\n                this.data=data;\n                this.data.keywords=this.joinKeywords(this.data['keywords']);\n                this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n            })\n        }\n    }\n\n    delete() {\n        if (confirm(\"Are you sure you wish to delete this sample?\")) {\n            this.apiService.doGet(Consts.QUERY_SAMPLE_DELETE,'sampleId='+this.sampleId,'text').subscribe(data=> {\n                this.router.navigate(['home/samples/deleted'])\n            },\n            error=> {\n                console.log(error)\n                this.errors=error;\n            })\n        }\n    }\n\n    editAccess(index,access) {\n        this.theAccessIndex=index;\n        this.theAccess=access;\n        setTimeout(function () {\n            document.getElementById('accessForm').scrollIntoView();\n        }, 100);\n        this.getUserGroups();\n        this.getUsers();\n\n    }\n    // set pointer fields to old values when adding other //\n    addOtherValue(field,currentValue) {\n        console.log('test')\n        this.currentDropdownValues[field]=currentValue;\n    };\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'],newItem['value'])\n            this.setValue(newItem['field'],newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'],newItem['value']);\n        }\n    };\n\n    deleteKeyword(index) {\n        console.log(index)\n    }\n\n    addPointOfContact() {\n        this.pointOfContact={organization:{name:\"\"},address:{},role:\"\"};\n        this.pointOfContactIndex=-1;\n        setTimeout(function () {\n            document.getElementById('pocForm').scrollIntoView();\n        }, 100);\n    }\n\n    cancelPointOfContact() {\n        this.pointOfContactIndex=null;\n    }\n\n    deletePointOfContact() {\n        if (confirm(\"Are you sure you wish to delete this point of contact?\")) {\n            this.pointOfContact['sampleId']=this.sampleId;\n            this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_DELETE,this.pointOfContact).subscribe(data=> {\n                this.errors={};\n                this.data=data;\n                this.data.keywords=this.joinKeywords(this.data.keywords);\n                this.dataTrailer=JSON.stringify(JSON.parse(this.data));\n                this.pointOfContactIndex=null;\n            },\n            errors=> {\n                this.errors=errors;\n            })\n        }\n    }\n\n    editPointOfContact(index,poc) {\n        this.pointOfContact = JSON.parse(JSON.stringify(poc));\n        this.pointOfContactIndex=index;\n        setTimeout(function () {\n            document.getElementById('pocForm').scrollIntoView();\n        }, 100);\n    }\n\n    savePointOfContact() {\n        this.pointOfContact['dirty']=true;\n        if (this.pointOfContactIndex==-1) {\n            this.data.pointOfContacts.push(this.pointOfContact)\n            console.log(this.data)\n        }\n        else {\n            this.data['pointOfContacts'][this.pointOfContactIndex]=this.pointOfContact;\n        }\n        this.data['keywords'] = this.data['keywords'].split('\\n');\n\n        this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_SAVE,this.data).subscribe(data=> {\n            data['keywords']=this.joinKeywords(this.data['keywords'])\n            this.data=data;\n            this.dataTrailer=JSON.parse(JSON.stringify(data));\n            this.pointOfContactIndex=null;\n        })\n    }\n\n    joinKeywords(keywords) {\n        if (keywords) {\n            return keywords.join('\\n')\n\n        }\n        console.log(keywords)\n    }\n\n\n    downloadReady(event) {\n        if (event==true) {\n            this.loading=null;\n        }\n        if (event==false) {\n            this.loading=true;\n        }\n    }\n\n    onSampleDeleteClick(){\n        console.log( 'onSampleDeleteClick' );\n    }\n\n    onSampleCopyClick(){\n        this.router.navigate(['home/samples/sample-copy',this.sampleId])\n    }\n\n    onSampleResetClick(){\n       this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n       this.data.keywords=this.joinKeywords(this.data.keywords);\n    }\n\n    onSampleUpdateClick(){\n        console.log( 'onSampleUpdateClick sampleName: ', this.data['sampleName'] );\n        console.log( 'onSampleUpdateClick sampleId: ', this.data['sampleId'] );\n        console.log( 'onSampleUpdateClick keywords: ', this.data['keywords'] );\n        this.updateSample();\n    }\n\n    updateSample(){\n        let su = {};\n        su['sampleName'] = this.data['sampleName'];\n        su['sampleId'] = this.data['sampleId'];\n        su['keywords'] = this.data['keywords'].split('\\n');\n\n        this.apiService.doPost( Consts.QUERY_SAMPLE_UPDATE, su ).subscribe(\n            data => {\n                this.data=data;\n                this.data.keywords=this.joinKeywords(this.data.keywords);\n                this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n                this.message='Sample Updated'\n            },\n            ( err ) => {\n                console.log( 'ERROR QUERY_SAMPLE_UPDATE: ', err );\n            } );\n\n    }\n\n    getUsers() {\n        this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr').subscribe(data=> {\n            this.users=data;\n        })\n\n    }\n\n    getUserGroups() {\n        this.apiService.doGet(Consts.QUERY_GET_USER_GROUPS,'searchStr').subscribe(data=> {\n            this.userGroups=data;\n        })\n    }\n\n    getSampleEditData(){\n        let getUrl = Consts.QUERY_SAMPLE_EDIT;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n            console.log( curl );\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl,'sampleId=' + this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n\n    }\n\n\n    onAvailabilityClick( ){\n        this.apiService.doGet( Consts.QUERY_SAMPLE_AVAILABILITY, 'sampleId=' + this.sampleId).subscribe(\n            data => {\n                this.sampleAvailabilityDisplayService.displayStuff( data );\n                this.data=data;\n                this.data['keywords']=this.joinKeywords(this.data['keywords']);\n                this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n            },\n            ( err ) => {\n                console.log( 'ERROR QUERY_SAMPLE_AVAILABILITY: ', err );\n            } );\n    }\n\n\n    onAvailabilityDeleteClick( ){\n        if (confirm(\"Are you sure you wish to delete the data availability metric?\")) {\n            this.data['keywords'] = this.data['keywords'].split('\\n');\n\n            this.apiService.doPost( Consts.QUERY_SAMPLE_DELETE_AVAILABILITY, this.data).subscribe(\n                data => {\n                    this.data=data;\n                    this.data['keywords']=this.joinKeywords(this.data['keywords']);\n                    this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n                },\n                ( err ) => {\n                    console.log( 'ERROR QUERY_SAMPLE_AVAILABILITY: ', err );\n                } );\n        }\n\n    }\n\n    onAvailabilityEdit(event) {\n        this.availabilityEditIndex=1;\n        this.apiService.doGet(Consts.QUERY_SAMPLE_VIEW_AVAILABILITY,'sampleId='+this.sampleId).subscribe(data=> {\n            this.dataAvailability=data;\n        },\n        errors=> {\n            this.errors=errors;\n        })\n    }\n\n    ngOnDestroy(): void{\n    }\n\n    submitForReview() {\n        let url = this.apiService.doPost(Consts.QUERY_SAMPLE_SUBMIT_REVIEW,{dataId:this.data.sampleId,dataName:this.data.sampleName,dataType:\"sample\"},'text');\n        url.subscribe(data=> {\n            this.submitReviewButton=false;\n        })\n    }\n\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameSearchSample\" [exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"[sampleId]\" (downloadReady)=\"downloadReady($event)\" [backUrl]=\"'home/samples/sample-search'\">\n</canano-main-display-heading>\n<div class=\"mainSection\" *ngIf=\"data\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <div class=\"error\" *ngIf=\"message\">\n        {{message}}\n    </div>\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <tr>\n                <td class=\"label\">\n                    <label for=\"data.sampleName\">\n                        Sample Name\n                    </label>\n                </td>\n                <td>\n                    <input type=\"text\" name=\"data.sampleName\" id=\"data.sampleName\" [(ngModel)]=\"data['sampleName']\" size=\"100\">\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"data.pointOfContact\">\n                        Point of Contact*\n                    </label>\n                </td>\n                <td>\n                <button class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" (click)=\"addPointOfContact()\">Add</button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <table class=\"dataTable\">\n                        <tr>\n                            <th>Primary Contact?</th>\n                            <th>Contact Person</th>\n                            <th>Organization</th>\n                            <th>Role</th>\n                            <th></th>\n                        </tr>\n                        <tr *ngFor=\"let contact of data.pointOfContacts; let odd=odd; let pocIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\n                            <td>\n                                <ng-container *ngIf=\"contact.primaryContact\">\n                                    Yes\n                                </ng-container>\n                                <ng-container *ngIf=\"!contact.primaryContact\">\n                                    No\n                                </ng-container>\n                            </td>\n                            <td>\n                                {{contact.firstName}} {{contact.lastName}}\n\n                            </td>\n                            <td>\n                                {{contact.organization.name}}\n                                <div *ngIf=\"contact.address.line1\">\n                                    {{contact.address.line1}}\n                                </div>\n                                <div *ngIf=\"contact.address.line2\">\n                                    {{contact.address.line2}}\n                                </div>\n                                <span *ngIf=\"contact.address.city\">\n                                    {{contact.address.city}},\n                                </span>\n                                <span *ngIf=\"contact.address.stateProvince\">\n                                    {{contact.address.stateProvince}}\n                                </span>\n                                <span *ngIf=\"contact.address.zip\">\n                                    {{contact.address.zip}}\n                                </span>\n                                <span *ngIf=\"contact.address.country\">\n                                    {{contact.address.country}}\n                                </span>\n                            </td>\n                            <td>\n                                {{contact.role}}\n                            </td>\n                            <td>\n                                <button (click)=\"editPointOfContact(pocIndex,contact)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr *ngIf=\"pointOfContactIndex!=null\">\n                <td></td>\n                <td>\n                    <div class=\"mainBorder\" id=\"pocForm\">\n                        <table class=\"dataMain\">\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.organization.name\">\n                                        Organization Name*\n                                    </label>\n                                </td>\n                                <td>\n\n                                    <select (ngModelChange)=\"addOtherValue('pointOfContact.organization.name',pointOfContact.organization.name)\" name=\"pointOfContact.organization.name\" id=\"pointOfContact.organization.name\" [(ngModel)]=\"pointOfContact.organization.name\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let org of data.organizationNamesForUser\" [ngValue]=\"org\">\n                                            {{org}}\n                                        </option>\n                                        <option>other</option>\n                                    </select>\n                                    <div *ngIf=\"pointOfContact.organization.name ==='other'\">\n                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Organization Name'\" [value]=\"currentDropdownValues['pointOfContact.organization.name']\" [field]=\"'pointOfContact.organization.name'\" [array]=\"'data.organizationNamesForUser'\">\n\n                                        </canano-other-dropdown>\n                                    </div>\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.role\">\n                                        Role\n                                    </label>\n                                </td>\n                                <td colspan=\"3\">\n                                    <select (ngModelChange)=\"addOtherValue('pointOfContact.role',pointOfContact.role)\" name=\"pointOfContact.role\" id=\"pointOfContact.role\" [(ngModel)]=\"pointOfContact['role']\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let role of data.contactRoles\" [ngValue]=\"role\">\n                                            {{role}}\n                                        </option>\n                                        <option>other</option>\n                                    </select>\n                                    <div *ngIf=\"pointOfContact.role ==='other'\">\n                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Role'\" [value]=\"currentDropdownValues['pointOfContact.role']\" [field]=\"'pointOfContact.role'\" [array]=\"'data.contactRoles'\">\n\n                                        </canano-other-dropdown>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.firstName\">\n                                        First Name\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.firstName\" id=\"pointOfContact.firstName\" [(ngModel)]=\"pointOfContact.firstName\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.middleInitial\">\n                                        Middle Initial\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.middleInitial\" id=\"pointOfContact.middleInitial\" [(ngModel)]=\"pointOfContact.middleInitial\" size=\"4\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.lastName\">\n                                        Last Name\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.lastName\" id=\"pointOfContact.lastName\" [(ngModel)]=\"pointOfContact.lastName\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.phoneNumber\">\n                                        Phone Number\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.phoneNumber\" id=\"pointOfContact.phoneNumber\" [(ngModel)]=\"pointOfContact.phoneNumber\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.email\">\n                                        Email\n                                    </label>\n                                </td>\n                                <td colspan=\"3\">\n                                    <input type=\"text\" name=\"pointOfContact.email\" id=\"pointOfContact.email\" [(ngModel)]=\"pointOfContact.email\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.line1\">\n                                        Address Line 1\n                                    </label>\n                                </td>\n                                <td colspan=\"5\">\n                                    <input type=\"text\" name=\"pointOfContact.address.line1\" id=\"pointOfContact.address.line1\" [(ngModel)]=\"pointOfContact.address.line1\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.line2\">\n                                        Address Line 2\n                                    </label>\n                                </td>\n                                <td colspan=\"5\">\n                                    <input type=\"text\" name=\"pointOfContact.address.line2\" id=\"pointOfContact.address.line2\" [(ngModel)]=\"pointOfContact.address.line2\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.city\">\n                                        City\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.address.city\" id=\"pointOfContact.address.city\" [(ngModel)]=\"pointOfContact.address.city\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.stateProvince\">\n                                        State\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.address.stateProvince\" id=\"pointOfContact.address.stateProvince\" [(ngModel)]=\"pointOfContact.address.stateProvince\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.zip\">\n                                        Zip/Postal Code\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.address.zip\" id=\"pointOfContact.address.zip\" [(ngModel)]=\"pointOfContact.address.zip\" size=\"10\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.country\">\n                                        Country\n                                    </label>\n                                </td>\n                                <td colspan=\"5\">\n                                    <input type=\"text\" name=\"pointOfContact.address.country\" id=\"pointOfContact.address.country\" [(ngModel)]=\"pointOfContact.address.country\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colspan=\"6\">\n                                    <div>\n                                        Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                                        points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                                    </div>\n                                    <br>\n                                    <div>\n                                        <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                                        <b> * I have read and understood the message above.</b>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <button *ngIf=\"!pointOfContact.primaryContact\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\" (click)=\"deletePointOfContact()\">Delete</button>\n                                </td>\n                                <td colspan=\"4\"></td>\n                                <td>\n                                    <button class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" [disabled]=\"!piiConfirmed\" (click)=\"savePointOfContact()\">Save</button>\n                                    <button class=\"btn-canano btn-canano-default btn-canano-xs mr-1\" (click)=\"cancelPointOfContact()\">Cancel</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"data.keywords\">\n                        Keywords\n                    </label>\n                </td>\n                <td>\n                    <textarea name=\"data.keywords\" id=\"data.keywords\" [(ngModel)]=\"data.keywords\" rows=\"7\" cols=\"70\">\n\n                    </textarea><br />\n                        <i>(one keyword per line)</i>\n\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"dataAccess\">\n                        Access to the\n                    </label>\n                </td>\n                <td>\n                    <button (click)=\"addAccess()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <table class=\"dataTable\">\n                        <tr>\n                            <th>Group Name</th>\n                            <th>Access</th>\n                            <th></th>\n                        </tr>\n                        <tr *ngFor=\"let group of data.groupAccesses; let odd=odd; let gIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\n                            <td>{{group.recipientDisplayName}}</td>\n                            <td>{{group.roleDisplayName}}</td>\n                            <td>\n                                <button (click)=\"editAccess(gIndex,group)\" *ngIf=\"group.recipient != 'ROLE_CURATOR'\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr *ngIf=\"data['userAccesses'].length\">\n                <td></td>\n                <td>\n                    <table class=\"dataTable\">\n                        <tr>\n                            <th>User Login Name</th>\n                            <th>Access</th>\n                            <th></th>\n                        </tr>\n                        <tr *ngFor=\"let user of data.userAccesses; let odd=odd;let uIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\n                            <td>{{user.recipientDisplayName}}</td>\n                            <td>{{user.roleDisplayName}}</td>\n                            <td>\n                                <button (click)=\"editAccess(uIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr *ngIf=\"theAccessIndex!=null\" id=\"accessForm\">\n                <td></td>\n                <td>\n                    <div class=\"mainBorder\">\n                        <table class=\"dataMain access\">\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"acces\">\n                                        Access By*\n                                    </label>\n                                </td>\n                                <td>\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'group'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.group\" [(ngModel)]=\"theAccess.accessType\">\n                                    <label for=\"theAccess.accessType.group\" class=\"right\">\n                                        Collaboration Group\n                                    </label>\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'user'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.user\" [(ngModel)]=\"theAccess.accessType\">\n                                    <label for=\"theAccess.accessType.user\" class=\"right\">\n                                        User\n                                    </label>\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'role'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.role\" [(ngModel)]=\"theAccess.accessType\">\n                                    <label for=\"theAccess.accessType.role\" class=\"right\">\n                                        Public\n                                    </label>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"theAccess['accessType']=='group'\">\n                                <td class=\"label\">\n                                    <label for=\"theAccess.collaborationGroup\">\n                                        Collaboration Group*\n                                    </label>\n                                </td>\n                                <td>\n                                    <select name=\"theAccess.recipient\" id=\"theAccess.recipient\" [(ngModel)]=\"theAccess.recipient\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <ng-container *ngFor=\"let recipient of userGroups|keyvalue\">\n                                            <option *ngFor=\"let group of recipient['value']\" [ngValue]=\"group\">\n                                                {{group}}\n                                            </option>\n                                        </ng-container>\n\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"theAccess['accessType']=='user'\">\n                                <td class=\"label\">\n                                    <label for=\"theAccess.user\">\n                                        User*\n                                    </label>\n                                </td>\n                                <td>\n                                    <select name=\"theAccess.recipient\" id=\"theAccess.recipient\" [(ngModel)]=\"theAccess.recipient\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let recipient of users|keyvalue\" [ngValue]=\"recipient.key\">\n                                            {{recipient.value}}, {{recipient.key}}\n                                        </option>\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"theAccess['accessType']=='role'\">\n                                <td colspan=\"2\" class=\"label\">\n                                    <label for=\"theAccess.role\">\n                                        Public\n                                    </label>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"theAccess.roleName\">\n                                        Access to the*\n                                    </label>\n                                </td>\n                                <td>\n                                    <select name=\"theAccess.roleName\" id=\"theAccess.roleName\" [(ngModel)]=\"theAccess.roleName\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let role of data.roleNames|keyvalue\" [ngValue]=\"role.key\">\n                                                {{role.value}}\n                                        </option>\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <button (click)=\"deleteAccess()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                </td>\n                                <td>\n                                    <button [disabled]=\"theAccess.accessType==''||theAccess.recipient==''||theAccess.roleName==''\" (click)=\"saveAccess()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                    <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td class=\"label\">\n                    <label for=\"dataAvailability\">\n                        Data Availability Metrics\n                    </label>\n                </td>\n                <td>\n                    <button *ngIf=\"!data.dataAvailability\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" (click)=\"onAvailabilityClick()\">Generate</button>\n                    <table class=\"dataTable availability\" *ngIf=\"data.dataAvailability\">\n                        <tr>\n                            <th>caNanoLab Availability Score</th>\n                            <th>MINChar Availability Score</th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <td>\n                                {{data.dataAvailability.dataAvailability}}\n                            </td>\n                            <td>\n                                {{data.dataAvailability.mincharScore}}\n                            </td>\n                            <td>\n                                <button (click)=\"onAvailabilityEdit($event)\" data-toggle=\"modal\" [attr.aria-expanded]=\"false\" data-target=\"#availabilityMetrics\" id=\"editDataAvailabilityButton\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"buttons\">\n        <table class=\"dataMain submit\">\n            <tr>\n                <td>\n                    <button\n                        class=\"btn btn-danger m-1\"\n                        (click)=\"delete()\"\n                    >Delete</button>\n                    <button\n                        class=\"btn btn-primary m-1\"\n                        (click)=\"onSampleCopyClick()\"\n                    >Copy</button>\n                </td>\n                <td>\n                    <button\n                        class=\"btn btn-danger m-1\"\n                        (click)=\"onSampleResetClick()\"\n                    >Reset</button>\n                    <button\n                        class=\"btn btn-primary m-1\"\n                        (click)=\"onSampleUpdateClick()\"\n                    >Update</button>\n                    <button class=\"btn btn-primary m-1\"\n                    (click)=\"submitForReview()\" *ngIf=\"data.showReviewButton&&submitReviewButton\">\n                        Submit For Review\n                    </button>\n                </td>\n            </tr>\n        </table>\n    </div>\n\n  <!-- Data Availability Modal -->\n  <div class=\"modal fade\" id=\"availabilityMetrics\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-top modal-lg modal-dialog-scrollable\"  role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Data Availability Metrics</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        <div class=\"modal-body\">\n            <form name=\"metrics\">\n            <table class=\"summaryViewWithGrid\" width=\"100%\" align=\"left\" *ngIf=\"dataAvailability\">\n                <tr>\n                    <td colspan=\"3\" class=\"help\">\n                        <a href=\"https://wiki.nci.nih.gov/display/caNanoLab/Managing+Samples+in+caNanoLab#ManagingSamplesincaNanoLab-Metrics\" target=\"_blank\" rel=\"nofollow noreferrer\">\n                            Help\n                        </a>\n                    </td>\n                </tr>\n                <tr>\n                    <th colspan=\"3\">\n                        caNanoLab Availability Score: {{dataAvailability.caNanoLabScore}}&nbsp;&nbsp;\n                        MINChar Availability Score: {{dataAvailability.mincharScore}}\n                    </th>\n                </tr>\n                <tr>\n                    <td>\n                        <B>\n                            caNanoLab\n                        </B>\n                    </td>\n                    <td>\n                        <B>\n                            MINChar\n                        </B>\n                    </td>\n                    <td>\n                        <B>\n                            {{dataAvailability.sampleName}}\n                        </B>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>agglomeration and/or aggregation </td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>crystal structure/crystallinity</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>\n                        General Sample Information\n                    </td>\n                    <td></td>\n                    <td>\n                        <svg width=\"20\" height=\"20\" fill=\"currentColor\">\n                            <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                        </svg>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        Sample Composition\n                    </td>\n                    <td>\n                        chemical composition\n                    </td>\n                    <td>\n                        <span *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='sample composition'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </span>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        nanomaterial entities\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='nanomaterial entities'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        functionalizing entities\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='functionalizing entities'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        chemical associations\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='chemical associations'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let chem of dataAvailability.chemicalAssocs\">\n                    <td  class=\"indent l2\">\n                        {{chem}}\n                    </td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span *ngIf=\"i['key']==chem\">{{i['value']}}\n                            </span>\n                        </span>\n                    </td>\n                    <td>\n                        <span *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==chem\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </span>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        sample function\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='sample function'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td colspan=\"3\">\n                        Physico-Chemical Characterization\n                    </td>\n                </tr>\n                <ng-container *ngFor=\"let char of dataAvailability.physicoChars\">\n                    <tr *ngIf=\"char=='surface'\">\n                        <td class=\"indent l1\">\n                            {{char}}\n                        </td>\n                        <td></td>\n                        <td>\n                            <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                                <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                                </svg>\n                            </ng-container>\n                        </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td class=\"indent l2\">\n                        surface area</td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\n                            <span *ngIf=\"i['key']=='surface area'\">{{i['value']}}\n                            </span>\n                        </span>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='surface area'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l2\">\n                        surface charge</td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\n                            <span *ngIf=\"i['key']=='surface charge'\">{{i['value']}}\n                            </span>\n                        </span>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='surface charge'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l2\">\n                        zeta potential</td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\n                            <span *ngIf=\"i['key']=='zeta potential'\">{{i['value']}}\n                            </span>\n                        </span>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='zeta potential'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <ng-container *ngFor=\"let char of dataAvailability.physicoChars\">\n                    <tr *ngIf=\"char!='surface'\">\n                        <td class=\"indent l1\">\n                            {{char}}</td>\n                    <td>\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span *ngIf=\"i['key']==char\">{{i['value']}}\n                            </span>\n                        </ng-container>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td colspan=\"3\">\n                        In Vitro Characterization\n                    </td>\n                </tr>\n                <ng-container *ngFor=\"let char of dataAvailability.invitroChars\">\n                    <tr>\n                        <td class=\"indent l1\">\n                            {{char}}</td>\n                    <td>\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span  *ngIf=\"i['key']==char\">{{i['value']}}\n                            </span>\n                        </ng-container>\n                    </td>\n                    <td>\n                        <ng-container  *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td colspan=\"3\">\n                        In Vivo Characterization\n                    </td>\n                </tr>\n                    <ng-container *ngFor=\"let char of dataAvailability.invivoChars\">\n\n                    <tr>\n                        <td class=\"indent l1\">\n                            {{char}}</td>\n                    <td>\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span  *ngIf=\"i['key']==char\">{{i['value']}}\n                            </span>\n                        </ng-container>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td>\n                        Publications\n                    </td>\n                    <td></td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='publications'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n\n            </table>\n            </form>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" (click)=\"onAvailabilityDeleteClick()\" data-dismiss=\"modal\" class=\"btn-canano btn-canano-danger btn-canano-modal\">Delete</button>\n            <button type=\"button\" (click)=\"onAvailabilityClick()\" class=\"btn-canano btn-canano-primary btn-canano-modal\" data-dismiss=\"modal\">Regenerate</button>\n            <button type=\"button\" data-dismiss=\"modal\" class=\"btn-canano btn-canano-default btn-canano-modal\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- End Data Availabilty Modal -->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleEditComponent } from './sample-edit.component';\nconst routes: Routes = [{ path: '', component: SampleEditComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleEditRoutingModule { }\n"],"sourceRoot":"webpack:///"}