{"version":3,"file":"src_app_cananolab-client_main-display_samples_general-info_sample-edit_sample-edit_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-edit/sample-edit.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleEditComponent } from './sample-edit.component';\nconst routes: Routes = [{ path: '', component: SampleEditComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleEditRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Consts } from '../../../../../constants';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { SampleAvailabilityDisplayService } from '../sample-search/sample-search-results/sample-availability-display/sample-availability-display.service';\nimport { Router} from '@angular/router';\n\n@Component( {\n    selector: 'canano-sample-edit',\n    templateUrl: './sample-edit.component.html',\n    styleUrls: ['./sample-edit.component.scss']\n} )\nexport class SampleEditComponent implements OnInit, OnDestroy{\n    availabilityEditIndex;\n    currentDropdownValues;\n    data;\n    dataAvailability;\n    dataTrailer;\n    errors;\n    loading;\n    userGroups;\n    sampleIds;\n    users;\n    theAccess;\n    theAccessIndex;\n    helpUrl = Consts.HELP_URL_SAMPLE_EDIT;\n    message;\n    pointOfContact;\n    pointOfContactIndex;\n    sampleId = -1;\n    recipientList;\n    toolHeadingNameSearchSample = 'Update Sample';\n    submitReviewButton = true;\n    piiConfirmed = false;\n    editingAccessRow = false;\n\n\n    constructor( private router: Router, private navigationService: NavigationService, private route: ActivatedRoute, private httpClient: HttpClient,\n                 private apiService: ApiService,\n                 private sampleAvailabilityDisplayService: SampleAvailabilityDisplayService){\n    }\n\n    ngOnInit(): void{\n        this.navigationService.setCurrentSelectedItem(0);\n        this.currentDropdownValues = {};\n        this.recipientList;\n        this.errors = {};\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' );\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                }\n\n                this.getSampleEditData().subscribe(\n                    data => {\n                        Properties.SAMPLE_TOOLS = true;\n                        this.data = data;\n                        this.errors = {};\n                        // console.log(data)\n                        this.data.keywords = this.joinKeywords(this.data.keywords);\n                        this.dataTrailer = JSON.parse(JSON.stringify(this.data))\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                    },\n                    ( err ) => {\n                        this.errors = err;\n                        console.log( 'ERROR LOAD SAMPLE EDIT ', err );\n                    });\n            } );\n    }\n\n    addAccess() {\n        this.theAccessIndex = -1;\n        this.recipientList = null;\n        this.theAccess = {\n            accessType: '',\n            recipient: '',\n            recipientDisplayName: '',\n            roleName: '',\n        }\n\n        setTimeout(function () {\n            document.getElementById('accessForm').scrollIntoView();\n        }, 100);\n        this.getUserGroups();\n        this.getUsers();\n        this.editingAccessRow = false;\n    }\n\n    saveAccess() {\n        this.data.theAccess = this.theAccess;\n        let keywordString = this.data['keywords'];\n        this.data['keywords'] = this.data['keywords'].split('\\n');\n        let url = this.apiService.doPost(Consts.QUERY_SAMPLE_SAVE_ACCESS, this.data);\n        url.subscribe(data => {\n            this.data = data;\n            this.data['keywords'] = this.joinKeywords(this.data['keywords']);\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        },\n        error=> {\n            this.data['keywords'] = keywordString;\n            this.errors= error;\n        });\n\n        this.theAccessIndex = null;\n    }\n\n    changeAccessType(event: string) {\n        this.theAccess.recipient = '';\n        this.theAccess.roleName = '';\n        this.recipientList=null;\n        // The value \"role\" is sent in only when the \"Access By\" is set to public\n        if (event === 'role') {\n            this.theAccess['recipient'] = 'ROLE_ANONYMOUS';\n            this.theAccess['recipientDisplayName'] = 'Public';\n            this.theAccess['roleName']=\"R\";\n        }\n    }\n\n    cancelAccess() {\n        this.theAccessIndex = null;\n    }\n    deleteAccess() {\n        if (confirm('Are you sure you wish to delete this access?')) {\n            this.theAccessIndex = null;\n            this.data['theAccess'] = this.theAccess;\n            let keywordString = this.data['keywords'];\n            this.data['keywords'] = this.data['keywords'].split('\\n');\n            this.apiService.doPost(Consts.QUERY_SAMPLE_DELETE_ACCESS, this.data).subscribe(data => {\n                this.data = data;\n                this.data.keywords = this.joinKeywords(this.data['keywords']);\n                this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n            },\n            error => {\n                this.data['keywords'] = keywordString;\n                this.errors = error;\n            });\n        }\n    }\n\n    getRecipientList() {\n        var url;\n        if (this.theAccess.accessType=='group') {\n            url = this.apiService.doGet(Consts.QUERY_GET_COLLABORATION_GROUPS,'searchStr=');\n        }\n        if (this.theAccess.accessType=='user') {\n            url = this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr=');\n        }\n        url.subscribe(data=> {\n            this.recipientList=data;\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n\n        })\n    }\n\n    delete() {\n        if (confirm('Are you sure you wish to delete this sample?')) {\n            this.apiService.doGet(Consts.QUERY_SAMPLE_DELETE, 'sampleId=' + this.sampleId, 'text').subscribe(data => {\n                console.log('Hi! I deleted with ' + data);\n                // WJRL 12/7/22: This is the fix to #211. If the sample is deleted, we go to the creation page\n                // along with the message about success. This is similar to protocol deletion.\n                this.router.navigate(['home/samples/sample-create'], {state: {data: data}});\n            },\n            error => {\n                console.log(error)\n                this.errors = error;\n            })\n        }\n    }\n\n    editAccess(index, access) {\n        this.theAccessIndex = index;\n        this.theAccess = access;\n        this.recipientList=null;\n        setTimeout(function () {\n            document.getElementById('accessForm').scrollIntoView();\n        }, 100);\n        this.getUserGroups();\n        this.getUsers();\n        this.editingAccessRow = true;\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    };\n\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'], newItem['value'])\n            this.setValue(newItem['field'], newItem['value']);\n        }\n        else {\n            this.setValue(newItem['field'], newItem['value']);\n        }\n    };\n\n    deleteKeyword(index) {\n        console.log(index)\n    }\n\n    addPointOfContact() {\n        this.pointOfContact = {organization: {name: ''}, address: {}, role: ''};\n        this.pointOfContactIndex = -1;\n        setTimeout(function () {\n            document.getElementById('pocForm').scrollIntoView();\n        }, 100);\n    }\n\n    cancelPointOfContact() {\n        this.pointOfContactIndex = null;\n    }\n\n    deletePointOfContact() {\n        if (confirm('Are you sure you wish to delete this point of contact?')) {\n            this.pointOfContact['sampleId'] = this.sampleId;\n            this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_DELETE, this.pointOfContact).subscribe(data => {\n                this.errors = {};\n                this.data = data;\n                this.data.keywords = this.joinKeywords(this.data.keywords);\n                this.dataTrailer = JSON.stringify(JSON.parse(this.data));\n                this.pointOfContactIndex = null;\n            },\n            errors => {\n                console.log(errors);\n                this.errors = errors;\n            })\n        }\n    }\n\n    editPointOfContact(index, poc) {\n        this.pointOfContact = JSON.parse(JSON.stringify(poc));\n        this.pointOfContactIndex = index;\n        setTimeout(function () {\n            document.getElementById('pocForm').scrollIntoView();\n        }, 100);\n    }\n\n    savePointOfContact() {\n        this.pointOfContact['dirty'] = true;\n        if (this.pointOfContactIndex == -1) {\n            this.data.pointOfContacts.push(this.pointOfContact)\n            console.log(this.data)\n        } else {\n            this.data['pointOfContacts'][this.pointOfContactIndex] = this.pointOfContact;\n        }\n\n        let keywordString = this.data['keywords'];\n        this.data['keywords'] = this.data['keywords'].split('\\n');\n\n        this.apiService.doPost(Consts.QUERY_SAMPLE_POC_UPDATE_SAVE, this.data).subscribe(data => {\n            data['keywords'] = this.joinKeywords(this.data['keywords'])\n            this.errors = {};\n            this.data = data;\n            this.dataTrailer = JSON.parse(JSON.stringify(data));\n            this.pointOfContactIndex = null;\n        },\n        errors => {\n            console.log(errors);\n            this.data['keywords'] = keywordString;\n            this.errors = errors;\n        })\n    }\n\n    joinKeywords(keywords) {\n        if (keywords) {\n            return keywords.join('\\n')\n\n        }\n        console.log(keywords)\n    }\n\n\n    downloadReady(event) {\n        if (event == true) {\n            this.loading = null;\n        }\n        if (event == false) {\n            this.loading = true;\n        }\n    }\n\n    onSampleDeleteClick(){\n        console.log( 'onSampleDeleteClick' );\n    }\n\n    onSampleCopyClick(){\n        this.router.navigate(['home/samples/sample-copy', this.sampleId])\n    }\n\n    onSampleResetClick(){\n       this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n       this.data.keywords = this.joinKeywords(this.data.keywords);\n    }\n\n    onSampleUpdateClick(){\n        console.log( 'onSampleUpdateClick sampleName: ', this.data['sampleName'] );\n        console.log( 'onSampleUpdateClick sampleId: ', this.data['sampleId'] );\n        console.log( 'onSampleUpdateClick keywords: ', this.data['keywords'] );\n        this.updateSample();\n    }\n\n    updateSample(){\n        let su = {};\n        su['sampleName'] = this.data['sampleName'];\n        su['sampleId'] = this.data['sampleId'];\n        let keywordString = su['keywords'];\n        su['keywords'] = this.data['keywords'].split('\\n');\n\n        this.apiService.doPost( Consts.QUERY_SAMPLE_UPDATE, su ).subscribe(\n            data => {\n                this.data = data;\n                this.data.keywords = this.joinKeywords(this.data.keywords);\n                this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n                this.message = 'Sample Updated'\n            },\n            ( err ) => {\n                su['keywords'] = keywordString;\n                this.errors = err;\n                console.log( 'ERROR QUERY_SAMPLE_UPDATE: ', err );\n            } );\n\n    }\n\n    getUsers() {\n        this.apiService.doGet(Consts.QUERY_GET_USERS, 'searchStr').subscribe(data => {\n            this.users = data;\n        })\n\n    }\n\n    getUserGroups() {\n        this.apiService.doGet(Consts.QUERY_GET_USER_GROUPS, 'searchStr').subscribe(data => {\n            this.userGroups = data;\n        })\n    }\n\n    shouldShowAccessEditButton(group) {\n        if (group.recipient == 'ROLE_CURATOR') {\n            return false;\n        } else if (group.recipient == 'ROLE_ANONYMOUS') {\n            return this.data != null && this.data['isCuratorEditing'];\n        }\n\n        return true;\n    }\n\n    getSampleEditData(){\n        let getUrl = Consts.QUERY_SAMPLE_EDIT;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n            console.log( curl );\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl, 'sampleId=' + this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n\n    }\n\n\n    onAvailabilityClick( ){\n        this.apiService.doGet( Consts.QUERY_SAMPLE_AVAILABILITY, 'sampleId=' + this.sampleId).subscribe(\n            data => {\n                this.sampleAvailabilityDisplayService.displayStuff( data );\n                this.data = data;\n                this.data['keywords'] = this.joinKeywords(this.data['keywords']);\n                this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n            },\n            ( err ) => {\n                console.log( 'ERROR QUERY_SAMPLE_AVAILABILITY: ', err );\n            } );\n    }\n\n\n    onAvailabilityDeleteClick( ){\n        if (confirm('Are you sure you wish to delete the data availability metric?')) {\n            let keywordString = this.data['keywords'];\n            this.data['keywords'] = this.data['keywords'].split('\\n');\n\n            this.apiService.doPost( Consts.QUERY_SAMPLE_DELETE_AVAILABILITY, this.data).subscribe(\n                data => {\n                    this.data = data;\n                    this.data['keywords'] = this.joinKeywords(this.data['keywords']);\n                    this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n                },\n                ( err ) => {\n                    this.data['keywords'] = keywordString;\n                    console.log( 'ERROR QUERY_SAMPLE_AVAILABILITY: ', err );\n                } );\n        }\n\n    }\n\n    onAvailabilityEdit(event) {\n        this.availabilityEditIndex = 1;\n        this.apiService.doGet(Consts.QUERY_SAMPLE_VIEW_AVAILABILITY, 'sampleId=' + this.sampleId).subscribe(data => {\n            this.dataAvailability = data;\n        },\n        errors => {\n            this.errors = errors;\n        })\n    }\n\n    ngOnDestroy(): void{\n    }\n\n    submitForReview() {\n        let url = this.apiService.doPost(Consts.QUERY_SAMPLE_SUBMIT_REVIEW, {dataId: this.data.sampleId, dataName: this.data.sampleName, dataType: 'sample'}, 'text');\n        url.subscribe(data => {\n            this.submitReviewButton = false;\n        })\n    }\n\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameSearchSample\" [exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"[sampleId]\" (downloadReady)=\"downloadReady($event)\" [backUrl]=\"'home/samples/sample-search'\">\n</canano-main-display-heading>\n<!-- Want to display errors even if (*especially if!*) there is no data to show! -->\n<div class=\"error\" *ngIf=\"errors['error']\">\n    {{errors['error']}}\n</div>\n<div class=\"error\" *ngIf=\"message\">\n    {{message}}\n</div>\n<div class=\"mainSection\" *ngIf=\"data\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n    <div class=\"mainBorder\">\n        <table class=\"dataMain\">\n            <!--\n            |---\n            |---  Start of the SAMPLE NAME section\n            |---\n            -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"data.sampleName\">\n                        Sample Name\n                    </label>\n                </td>\n                <td>\n                    <input type=\"text\" name=\"data.sampleName\" id=\"data.sampleName\" [(ngModel)]=\"data['sampleName']\" size=\"100\">\n                </td>\n            </tr>\n            <!--\n            |---\n            |---  Start of the POINT OF CONTACT section\n            |---\n            -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"data.pointOfContact\">\n                        Point of Contact*\n                    </label>\n                </td>\n                <td>\n                <button id=\"data.pointOfContact\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" (click)=\"addPointOfContact()\">Add</button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <table class=\"dataTable\">\n                        <tr>\n                            <th>Primary Contact?</th>\n                            <th>Contact Person</th>\n                            <th>Organization</th>\n                            <th>Role</th>\n                            <th></th>\n                        </tr>\n                        <tr *ngFor=\"let contact of data.pointOfContacts; let odd=odd; let pocIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\n                            <td>\n                                <ng-container *ngIf=\"contact.primaryContact\">\n                                    Yes\n                                </ng-container>\n                                <ng-container *ngIf=\"!contact.primaryContact\">\n                                    No\n                                </ng-container>\n                            </td>\n                            <td [innerHTML]=\"contact.contactPerson\"></td>\n                            <td>\n                                <span [innerHTML]=\"contact.organization.name\"></span>\n                                <div *ngIf=\"contact.address.line1\" [innerHTML]=\"contact.address.line1\"></div>\n                                <div *ngIf=\"contact.address.line2\" [innerHTML]=\"contact.address.line2\"></div>\n                                <span *ngIf=\"contact.address.city\" [innerHTML]=\"contact.address.city\"></span>\n                                <span *ngIf=\"contact.address.city\">, </span>\n                                <span *ngIf=\"contact.address.stateProvince\" [innerHTML]=\"contact.address.stateProvince\"></span>\n                                <span *ngIf=\"contact.address.stateProvince\">&nbsp;</span>\n                                <span *ngIf=\"contact.address.zip\" [innerHTML]=\"contact.address.zip\"></span>\n                                <span *ngIf=\"contact.address.country\"><br></span>\n                                <span *ngIf=\"contact.address.country\" [innerHTML]=\"contact.address.country\"></span>\n                            </td>\n                            <td [innerHTML]=\"contact.role\"></td>\n                            <td>\n                                <button (click)=\"editPointOfContact(pocIndex,contact)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr *ngIf=\"pointOfContactIndex!=null\">\n                <td></td>\n                <td>\n                    <div class=\"mainBorder\" id=\"pocForm\">\n                        <table class=\"dataMain\">\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.organization.name\">\n                                        Organization Name*\n                                    </label>\n                                </td>\n                                <td>\n\n                                    <select (ngModelChange)=\"addOtherValue('pointOfContact.organization.name',pointOfContact.organization.name)\" name=\"pointOfContact.organization.name\" id=\"pointOfContact.organization.name\" [(ngModel)]=\"pointOfContact.organization.name\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let org of data.organizationNamesForUser\" [ngValue]=\"org\">\n                                            {{org}}\n                                        </option>\n                                        <option>other</option>\n                                    </select>\n                                    <div *ngIf=\"pointOfContact.organization.name ==='other'\">\n                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Organization Name'\" [value]=\"currentDropdownValues['pointOfContact.organization.name']\" [field]=\"'pointOfContact.organization.name'\" [array]=\"'data.organizationNamesForUser'\">\n\n                                        </canano-other-dropdown>\n                                    </div>\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.role\">\n                                        Role\n                                    </label>\n                                </td>\n                                <td colspan=\"3\">\n                                    <select (ngModelChange)=\"addOtherValue('pointOfContact.role',pointOfContact.role)\" name=\"pointOfContact.role\" id=\"pointOfContact.role\" [(ngModel)]=\"pointOfContact['role']\">\n                                        <option [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let role of data.contactRoles\" [ngValue]=\"role\">\n                                            {{role}}\n                                        </option>\n                                        <option>other</option>\n                                    </select>\n                                    <div *ngIf=\"pointOfContact.role ==='other'\">\n                                        <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Role'\" [value]=\"currentDropdownValues['pointOfContact.role']\" [field]=\"'pointOfContact.role'\" [array]=\"'data.contactRoles'\">\n\n                                        </canano-other-dropdown>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.firstName\">\n                                        First Name\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.firstName\" id=\"pointOfContact.firstName\" [(ngModel)]=\"pointOfContact.firstName\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.middleInitial\">\n                                        Middle Initial\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.middleInitial\" id=\"pointOfContact.middleInitial\" [(ngModel)]=\"pointOfContact.middleInitial\" size=\"4\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.lastName\">\n                                        Last Name\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.lastName\" id=\"pointOfContact.lastName\" [(ngModel)]=\"pointOfContact.lastName\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.phoneNumber\">\n                                        Phone Number\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.phoneNumber\" id=\"pointOfContact.phoneNumber\" [(ngModel)]=\"pointOfContact.phoneNumber\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.email\">\n                                        Email\n                                    </label>\n                                </td>\n                                <td colspan=\"3\">\n                                    <input type=\"text\" name=\"pointOfContact.email\" id=\"pointOfContact.email\" [(ngModel)]=\"pointOfContact.email\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.line1\">\n                                        Address Line 1\n                                    </label>\n                                </td>\n                                <td colspan=\"5\">\n                                    <input type=\"text\" name=\"pointOfContact.address.line1\" id=\"pointOfContact.address.line1\" [(ngModel)]=\"pointOfContact.address.line1\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.line2\">\n                                        Address Line 2\n                                    </label>\n                                </td>\n                                <td colspan=\"5\">\n                                    <input type=\"text\" name=\"pointOfContact.address.line2\" id=\"pointOfContact.address.line2\" [(ngModel)]=\"pointOfContact.address.line2\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.city\">\n                                        City\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.address.city\" id=\"pointOfContact.address.city\" [(ngModel)]=\"pointOfContact.address.city\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.stateProvince\">\n                                        State\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.address.stateProvince\" id=\"pointOfContact.address.stateProvince\" [(ngModel)]=\"pointOfContact.address.stateProvince\">\n                                </td>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.zip\">\n                                        Zip/Postal Code\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name=\"pointOfContact.address.zip\" id=\"pointOfContact.address.zip\" [(ngModel)]=\"pointOfContact.address.zip\" size=\"10\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"pointOfContact.address.country\">\n                                        Country\n                                    </label>\n                                </td>\n                                <td colspan=\"5\">\n                                    <input type=\"text\" name=\"pointOfContact.address.country\" id=\"pointOfContact.address.country\" [(ngModel)]=\"pointOfContact.address.country\">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colspan=\"6\">\n                                    <div>\n                                        Enter only <i>public business-related</i> contact information into these fields (such as institutional\n                                        points of contact used in public publications). <i>Do not</i> add private contact information here, as this information will be made available to the public viewing the system. The system will contact you yearly, via the email address you provide, to ask if you would like to correct, update, or delete this information. If you would like to update it earlier, contact us via cananolab-support@isb-cgc.org.\n                                    </div>\n                                    <br>\n                                    <div>\n                                        <input type=\"checkbox\" [checked]=\"piiConfirmed\" (change)=\"piiConfirmed = !piiConfirmed\">\n                                        <b> * I have read and understood the message above.</b>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <button *ngIf=\"!pointOfContact.primaryContact\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\" (click)=\"deletePointOfContact()\">Delete</button>\n                                </td>\n                                <td colspan=\"4\"></td>\n                                <td>\n                                    <button class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" [disabled]=\"!piiConfirmed\" (click)=\"savePointOfContact()\">Save</button>\n                                    <button class=\"btn-canano btn-canano-default btn-canano-xs mr-1\" (click)=\"cancelPointOfContact()\">Cancel</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <!--\n            |---\n            |---  Start of the KEYWORDS section\n            |---\n            -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"data.keywords\">\n                        Keywords\n                    </label>\n                </td>\n                <td>\n                    <textarea name=\"data.keywords\" id=\"data.keywords\" [(ngModel)]=\"data.keywords\" rows=\"7\" cols=\"70\">\n\n                    </textarea><br />\n                        <i>(one keyword per line)</i>\n\n                </td>\n            </tr>\n            <!--\n            |---\n            |---  Start of the DATA ACCESS section\n            |---\n            -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"dataAccess\">\n                        Access to the Sample\n                    </label>\n                </td>\n                <td>\n                    <button id=\"dataAccess\" (click)=\"addAccess()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <table class=\"dataTable\">\n                        <tr>\n                            <th>Group Name</th>\n                            <th>Access</th>\n                            <th></th>\n                        </tr>\n                        <tr *ngFor=\"let group of data.groupAccesses; let odd=odd; let gIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\n                            <td>{{group.recipientDisplayName}}</td>\n                            <td>{{group.roleDisplayName}}</td>\n                            <td>\n                                <button (click)=\"editAccess(gIndex,group)\" *ngIf=\"shouldShowAccessEditButton(group)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr *ngIf=\"data['userAccesses'].length\">\n                <td></td>\n                <td>\n                    <table class=\"dataTable\">\n                        <tr>\n                            <th>User Login Name</th>\n                            <th>Access</th>\n                            <th></th>\n                        </tr>\n                        <tr *ngFor=\"let user of data.userAccesses; let odd=odd;let uIndex=index\" [ngClass]=\"{'rowOdd':odd}\">\n                            <td>{{user.recipientDisplayName}}</td>\n                            <td>{{user.roleDisplayName}}</td>\n                            <td>\n                                <button (click)=\"editAccess(uIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr *ngIf=\"theAccessIndex!=null\" id=\"accessForm\">\n                <td></td>\n                <td>\n                    <div class=\"mainBorder\">\n                        <table class=\"dataMain access\">\n                            <tr *ngIf=\"!editingAccessRow\">\n                                <td class=\"label\">\n                                    <label for=\"access\">\n                                        Access By*\n                                    </label>\n                                </td>\n                                <td id=\"access\">\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'group'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.group\" [(ngModel)]=\"theAccess.accessType\">\n                                    <label for=\"theAccess.accessType.group\" class=\"right\">\n                                        Collaboration Group\n                                    </label>\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'user'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.user\" [(ngModel)]=\"theAccess.accessType\">\n                                    <label for=\"theAccess.accessType.user\" class=\"right\">\n                                        User\n                                    </label>\n\n                                    <input *ngIf=\"data.isCuratorEditing\" (ngModelChange)=\"changeAccessType($event)\" [value]=\"'role'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.role\" [(ngModel)]=\"theAccess.accessType\">\n                                    <label *ngIf=\"data.isCuratorEditing\" for=\"theAccess.accessType.role\" class=\"right\">\n                                        Public\n                                    </label>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"theAccess.accessType&&theAccess.accessType!='role'&&!editingAccessRow\">\n                                <td class=\"label\">\n                                    <label for=\"access.recipient\">\n                                        <span *ngIf=\"theAccess.accessType=='group'\">\n                                            Collaboration Group*\n                                        </span>\n                                        <span *ngIf=\"theAccess.accessType=='user'\">\n                                            User*\n                                        </span>\n                                    </label>\n                                </td>\n                                <td class=\"field\">\n                                    <button (click)=\"getRecipientList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search</button>\n                                    <ng-container *ngIf=\"recipientList\">\n                                        &nbsp;&nbsp;\n                                        <select name=\"access.recipient\" [(ngModel)]=\"theAccess.recipient\">\n                                            <option [selected]=\"theAccess.recipient===''\" [ngValue]=\"''\">--select</option>\n                                            <ng-container *ngIf=\"theAccess.accessType=='group'\">\n                                                <option *ngFor=\"let group of recipientList\">\n                                                    {{group}}\n                                                </option>\n                                            </ng-container>\n                                            <ng-container *ngIf=\"theAccess.accessType=='user'\">\n                                                <option *ngFor=\"let user of recipientList|keyvalue\" [ngValue]=\"user.key\">\n                                                    {{user.value}}\n                                                </option>\n                                            </ng-container>\n\n                                        </select>\n                                    </ng-container>\n\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"theAccess.roleName\">\n                                        Access to the Sample*\n                                    </label>\n                                </td>\n                                <td class=\"field\">\n                                    <select [disabled]=\"theAccess.accessType=='role'\" name=\"theAccess.roleName\" [(ngModel)]=\"theAccess.roleName\">\n                                        <option [selected]=\"theAccess.roleName===''\" [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let role of data.roleNames | keyvalue\" [ngValue]=\"role.key\" [selected]=\"role.key==theAccess.roleName\">\n                                            {{role.value}}\n                                        </option>\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <button (click)=\"deleteAccess()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                </td>\n                                <td>\n                                    <button [disabled]=\"theAccess.accessType==''||theAccess.recipient==''||theAccess.roleName==''\" (click)=\"saveAccess()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                    <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n            <!--\n            |---\n            |---  Start of the DATA AVAILABILITY section\n            |---\n            -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"dataAvailability\">\n                        Data Availability Metrics\n                    </label>\n                </td>\n                <td>\n                    <button id=\"dataAvailability\" *ngIf=\"!data.dataAvailability\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\" (click)=\"onAvailabilityClick()\">Generate</button>\n                    <table class=\"dataTable availability\" *ngIf=\"data.dataAvailability\">\n                        <tr>\n                            <th>caNanoLab Availability Score</th>\n                            <th>MINChar Availability Score</th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <td>\n                                {{data.dataAvailability.dataAvailability}}\n                            </td>\n                            <td>\n                                {{data.dataAvailability.mincharScore}}\n                            </td>\n                            <td>\n                                <button (click)=\"onAvailabilityEdit($event)\" data-toggle=\"modal\" [attr.aria-expanded]=\"false\" data-target=\"#availabilityMetrics\" id=\"editDataAvailabilityButton\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <!--\n    |---\n    |---  Start of the BOTTOM BUTTONS section\n    |---\n    -->\n    <div id=\"buttons\">\n        <table class=\"dataMain submit\">\n            <tr>\n                <td>\n                    <button\n                        class=\"btn btn-danger m-1\"\n                        (click)=\"delete()\"\n                    >Delete</button>\n                    <button\n                        class=\"btn btn-primary m-1\"\n                        (click)=\"onSampleCopyClick()\"\n                    >Copy</button>\n                </td>\n                <td>\n                    <button\n                        class=\"btn btn-danger m-1\"\n                        (click)=\"onSampleResetClick()\"\n                    >Reset</button>\n                    <button\n                        class=\"btn btn-primary m-1\"\n                        (click)=\"onSampleUpdateClick()\"\n                    >Update</button>\n                    <button class=\"btn btn-primary m-1\"\n                    (click)=\"submitForReview()\" *ngIf=\"data.showReviewButton&&submitReviewButton\">\n                        Submit For Review\n                    </button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <!--\n    |---\n    |---  Start of the Data Availability Modal\n    |---\n    -->\n  <div class=\"modal fade\" id=\"availabilityMetrics\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-top modal-lg modal-dialog-scrollable\"  role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Data Availability Metrics</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        <div class=\"modal-body\">\n            <form name=\"metrics\">\n            <table class=\"summaryViewWithGrid\" width=\"100%\" align=\"left\" *ngIf=\"dataAvailability\">\n                <tr>\n                    <td colspan=\"3\" class=\"help\">\n                        <a href=\"https://wiki.nci.nih.gov/x/iIS8HQ\" target=\"_blank\" rel=\"nofollow noreferrer\">\n                            Help\n                        </a>\n                    </td>\n                </tr>\n                <tr>\n                    <th colspan=\"3\">\n                        caNanoLab Availability Score: {{dataAvailability.caNanoLabScore}}&nbsp;&nbsp;\n                        MINChar Availability Score: {{dataAvailability.mincharScore}}\n                    </th>\n                </tr>\n                <tr>\n                    <td>\n                        <B>\n                            caNanoLab\n                        </B>\n                    </td>\n                    <td>\n                        <B>\n                            MINChar\n                        </B>\n                    </td>\n                    <td>\n                        <B>\n                            {{dataAvailability.sampleName}}\n                        </B>\n                    </td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>agglomeration and/or aggregation </td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td>crystal structure/crystallinity</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>\n                        General Sample Information\n                    </td>\n                    <td></td>\n                    <td>\n                        <svg width=\"20\" height=\"20\" fill=\"currentColor\">\n                            <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                        </svg>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        Sample Composition\n                    </td>\n                    <td>\n                        chemical composition\n                    </td>\n                    <td>\n                        <span *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='sample composition'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </span>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        nanomaterial entities\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='nanomaterial entities'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        functionalizing entities\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='functionalizing entities'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        chemical associations\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='chemical associations'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr *ngFor=\"let chem of dataAvailability.chemicalAssocs\">\n                    <td  class=\"indent l2\">\n                        {{chem}}\n                    </td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span *ngIf=\"i['key']==chem\">{{i['value']}}\n                            </span>\n                        </span>\n                    </td>\n                    <td>\n                        <span *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==chem\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </span>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l1\">\n                        sample function\n                    </td>\n                    <td>\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='sample function'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td colspan=\"3\">\n                        Physico-Chemical Characterization\n                    </td>\n                </tr>\n                <ng-container *ngFor=\"let char of dataAvailability.physicoChars\">\n                    <tr *ngIf=\"char=='surface'\">\n                        <td class=\"indent l1\">\n                            {{char}}\n                        </td>\n                        <td></td>\n                        <td>\n                            <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                                <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                                </svg>\n                            </ng-container>\n                        </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td class=\"indent l2\">\n                        surface area</td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\n                            <span *ngIf=\"i['key']=='surface area'\">{{i['value']}}\n                            </span>\n                        </span>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='surface area'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l2\">\n                        surface charge</td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\n                            <span *ngIf=\"i['key']=='surface charge'\">{{i['value']}}\n                            </span>\n                        </span>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='surface charge'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"indent l2\">\n                        zeta potential</td>\n                    <td>\n                        <span *ngFor=\"let i of dataAvailability.caNano2MINChar|keyvalue\">\n                            <span *ngIf=\"i['key']=='zeta potential'\">{{i['value']}}\n                            </span>\n                        </span>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='zeta potential'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n                <ng-container *ngFor=\"let char of dataAvailability.physicoChars\">\n                    <tr *ngIf=\"char!='surface'\">\n                        <td class=\"indent l1\">\n                            {{char}}</td>\n                    <td>\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span *ngIf=\"i['key']==char\">{{i['value']}}\n                            </span>\n                        </ng-container>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td colspan=\"3\">\n                        In Vitro Characterization\n                    </td>\n                </tr>\n                <ng-container *ngFor=\"let char of dataAvailability.invitroChars\">\n                    <tr>\n                        <td class=\"indent l1\">\n                            {{char}}</td>\n                    <td>\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span  *ngIf=\"i['key']==char\">{{i['value']}}\n                            </span>\n                        </ng-container>\n                    </td>\n                    <td>\n                        <ng-container  *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td colspan=\"3\">\n                        In Vivo Characterization\n                    </td>\n                </tr>\n                    <ng-container *ngFor=\"let char of dataAvailability.invivoChars\">\n\n                    <tr>\n                        <td class=\"indent l1\">\n                            {{char}}</td>\n                    <td>\n                        <ng-container *ngFor=\"let i of dataAvailability.caNano2MINChar | keyvalue\">\n                            <span  *ngIf=\"i['key']==char\">{{i['value']}}\n                            </span>\n                        </ng-container>\n\n                    </td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity==char\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                    </tr>\n                </ng-container>\n                <tr>\n                    <td>\n                        Publications\n                    </td>\n                    <td></td>\n                    <td>\n                        <ng-container *ngFor=\"let entity of dataAvailability.availableEntityNames\">\n                            <svg width=\"20\" height=\"20\" fill=\"currentColor\" *ngIf=\"entity=='publications'\">\n                                <use xlink:href=\"assets/images/bootstrap-icons.svg#check\" />\n                            </svg>\n                        </ng-container>\n                    </td>\n                </tr>\n\n            </table>\n            </form>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" (click)=\"onAvailabilityDeleteClick()\" data-dismiss=\"modal\" class=\"btn-canano btn-canano-danger btn-canano-modal\">Delete</button>\n            <button type=\"button\" (click)=\"onAvailabilityClick()\" class=\"btn-canano btn-canano-primary btn-canano-modal\" data-dismiss=\"modal\">Regenerate</button>\n            <button type=\"button\" data-dismiss=\"modal\" class=\"btn-canano btn-canano-default btn-canano-modal\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- End Data Availabilty Modal -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleEditComponent } from './sample-edit.component';\nimport { SampleEditRoutingModule } from './sample-edit-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OtherDropdownModule } from 'src/app/cananolab-client/common/components/other-dropdown/other-dropdown.module';\n\n\n@NgModule({\n    declarations: [SampleEditComponent],\n    imports: [\n      CommonModule,\n      SampleEditRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      OtherDropdownModule\n    ]\n  })\n  export class SampleEditModule { }\n\n"],"names":["RouterModule","SampleEditComponent","routes","path","component","SampleEditRoutingModule","forChild","imports","exports","Consts","Properties","HttpHeaders","timeout","i0","constructor","router","navigationService","route","httpClient","apiService","sampleAvailabilityDisplayService","HELP_URL_SAMPLE_EDIT","ngOnInit","setCurrentSelectedItem","currentDropdownValues","recipientList","errors","params","subscribe","sampleId","replace","CURRENT_SAMPLE_ID","getSampleEditData","data","SAMPLE_TOOLS","keywords","joinKeywords","dataTrailer","JSON","parse","stringify","CURRENT_SAMPLE_NAME","err","console","log","addAccess","theAccessIndex","theAccess","accessType","recipient","recipientDisplayName","roleName","setTimeout","document","getElementById","scrollIntoView","getUserGroups","getUsers","editingAccessRow","saveAccess","keywordString","split","url","doPost","QUERY_SAMPLE_SAVE_ACCESS","error","changeAccessType","event","cancelAccess","deleteAccess","confirm","QUERY_SAMPLE_DELETE_ACCESS","getRecipientList","doGet","QUERY_GET_COLLABORATION_GROUPS","QUERY_GET_USERS","delete","QUERY_SAMPLE_DELETE","navigate","state","editAccess","index","access","addOtherValue","field","currentValue","saveOther","newItem","addDropdownItem","setValue","deleteKeyword","addPointOfContact","pointOfContact","organization","name","address","role","pointOfContactIndex","cancelPointOfContact","deletePointOfContact","QUERY_SAMPLE_POC_UPDATE_DELETE","editPointOfContact","poc","savePointOfContact","pointOfContacts","push","QUERY_SAMPLE_POC_UPDATE_SAVE","join","downloadReady","loading","onSampleDeleteClick","onSampleCopyClick","onSampleResetClick","onSampleUpdateClick","updateSample","su","QUERY_SAMPLE_UPDATE","message","users","QUERY_GET_USER_GROUPS","userGroups","shouldShowAccessEditButton","group","getUrl","QUERY_SAMPLE_EDIT","DEBUG_CURL","curl","headers","options","method","results","pipe","HTTP_TIMEOUT","e","onAvailabilityClick","QUERY_SAMPLE_AVAILABILITY","displayStuff","onAvailabilityDeleteClick","QUERY_SAMPLE_DELETE_AVAILABILITY","onAvailabilityEdit","availabilityEditIndex","QUERY_SAMPLE_VIEW_AVAILABILITY","dataAvailability","ngOnDestroy","submitForReview","QUERY_SAMPLE_SUBMIT_REVIEW","dataId","dataName","sampleName","dataType","submitReviewButton","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","OtherDropdownModule","SampleEditModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}