{"version":3,"file":"src_app_cananolab-client_main-display_protocols_protocol-create_protocol-create_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create-routing.module.ts","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.component.ts","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.component.html","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProtocolCreateComponent } from './protocol-create.component';\n\nconst routes: Routes = [{ path: '', component: ProtocolCreateComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProtocolCreateRoutingModule { }\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../constants';\nimport { ApiService } from '../../../common/services/api.service';\nimport { UtilService } from '../../../common/services/util.service';\nimport { Router, Params, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component( {\n    selector: 'canano-protocol-create',\n    templateUrl: './protocol-create.component.html',\n    styleUrls: ['./protocol-create.component.scss']\n} )\nexport class ProtocolCreateComponent implements OnInit, AfterViewInit{\n    accessIndex;\n    currentRoute='protocol-create';\n    data;\n    defaultProtocolType = 'radio labeling'; // Find a way to set this in time to protocolTypes[0]\n    downloadUrl=Consts.QUERY_DOWNLOAD_FILE;\n    errors;\n    existingData;\n    externalUrl;\n    fileToUpload;\n    haveDupStatus = false;\n    toolHeadingName='Create Protocol';\n    isDup = false;\n    message;\n    protocolId;\n    recipientList;\n    setupData={};\n    theAccess={};\n    helpUrl=Consts.HELP_URL_PROTOCOL_CREATE;\n    submitReviewButton=true;\n    editingAccessRow = false;\n\n    constructor(private httpClient:HttpClient, private route:ActivatedRoute,private router:Router,private apiService: ApiService, private utilService: UtilService,\n                 ){\n    }\n\n    ngOnInit(): void{\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.protocolId=params['protocolId'];\n                if (params['message']) {\n                    if (params['message']=='deleted') {\n                        this.message='Protocol Deleted Successfully'\n                    }\n                    else {\n                        this.message='Protocol Created Successfully'\n                    }\n                }\n                this.init();\n            });\n\n        this.errors={};\n    }\n\n    addAccess() {\n        this.accessIndex=-1;\n        this.recipientList=null;\n        this.theAccess={\n                \"accessType\":\"\",\n                \"recipient\":\"\",\n                \"roleName\":\"\",\n                \"recipientDisplayName\":\"\"\n            }\n        this.editingAccessRow = false;\n    }\n\n    shouldShowAccessEditButton(group) {\n        if (group.recipient == 'ROLE_CURATOR') {\n            return false;\n        } else if (group.recipient == 'ROLE_ANONYMOUS') {\n            return this.data != null && this.data['isCuratorEditing'];\n        }\n\n        return true;\n    }\n\n    buildExternalUriForm(): FormData{\n        let formData = new FormData();\n        formData.append( 'uriExternal', 'true' );\n        formData.append( 'review', 'false' );\n        formData.append( 'isPublic', 'false' );\n        formData.append( 'type', this.data.type );\n        return formData;\n    };\n\n    cancelAccess() {\n        this.accessIndex=null;\n    }\n\n    uploadFile(event) {\n        this.fileToUpload = new FormData();\n        const tFile = event.target.files.item(0);\n        this.fileToUpload.append('myFile', tFile, tFile.name);\n        this.fileToUpload.append( 'uriExternal', 'false' );\n        this.fileToUpload.append( 'review', 'false' );\n        this.fileToUpload.append( 'isPublic', 'false' );\n        this.fileToUpload.append( 'type', this.data.type );\n        console.log(this.fileToUpload)\n    }\n\n    delete() {\n        if (confirm(\"Are you sure you wish to delete this protocol?\")) {\n            this.apiService.doPost(Consts.QUERY_DELETE_PROTOCOL,this.data).subscribe(data=> {\n                this.router.navigate(['home/protocols/protocol-create/deleted'])\n            },\n            errors=> {\n                this.errors=errors;\n            })\n        }\n    }\n\n    showDeleteButton() {\n        if (this.router.url.includes('edit-protocol')) {\n            return true\n        }\n        return false\n    }\n\n    changeAccessType(event) {\n        this.recipientList=null;\n        this.theAccess['recipient']='';\n        this.theAccess['roleName']='';\n        if (event=='role') {\n            this.theAccess['recipientDisplayName']='Public';\n            this.theAccess['recipient']='ROLE_ANONYMOUS';\n            this.theAccess['roleName']=\"R\";\n        };\n    };\n\n    deleteAccess() {\n        if (confirm(\"Are you sure you wish to delete this \" + this.theAccess['accessType'] + \"?\")) {\n            this.data['theAccess']=this.theAccess;\n            let url = this.apiService.doPost(Consts.QUERY_PROTOCOL_DELETE_ACCESS,this.data);\n            url.subscribe(data=>{\n                this.data=data;\n                this.accessIndex=null;\n                this.errors={};\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n\n    }\n\n    duplicateCheck(){\n        let formValues = this.data;\n        let dupQuery = '';\n        if( formValues['version'] === undefined ){\n            dupQuery = 'protocolType=' + formValues['type'] + '&protocolName=' + formValues['name'];\n        }else{\n            dupQuery = 'protocolType=' + formValues['type'] + '&protocolName=' + formValues['name'] + '&protocolVersion=' + formValues['version'];\n        }\n        this.apiService.doGet( Consts.QUERY_GET_PROTOCOL, dupQuery ).subscribe(\n            // It already exists\n            data => {\n                this.existingData=data;\n                this.errors={};\n                this.isDup = true;\n                this.haveDupStatus = true;\n                return true;\n            },\n\n            // It does NOT already exist\n            ( err ) => {\n                this.isDup = false;\n                this.haveDupStatus = true;\n                return false;\n            } );\n\n    };\n\n    editAccess(index,access) {\n        console.log(index,access)\n        this.accessIndex=index;\n        this.recipientList=null;\n        this.theAccess=JSON.parse(JSON.stringify(access));\n        this.editingAccessRow = true;\n    };\n\n    getRecipientList() {\n        var url;\n        if (this.theAccess['accessType']=='group') {\n            url=this.apiService.doGet(Consts.QUERY_GET_COLLABORATION_GROUPS,'searchStr=');\n        }\n        if (this.theAccess['accessType']=='user') {\n            url=this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr=');\n        }\n        url.subscribe(data=> {\n            this.recipientList=data;\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n\n        })\n    };\n\n    init(){\n        if (this.protocolId) {\n            this.currentRoute='edit-protocol';\n            this.toolHeadingName='Edit Protocol';\n            this.helpUrl=Consts.HELP_URL_PROTOCOL_EDIT;\n            this.apiService.doGet( Consts.QUERY_EDIT_PROTOCOL, 'protocolId='+this.protocolId ).subscribe(\n                data => {\n                    this.data = data;\n                },\n                errors=> {\n                    this.errors=errors;\n                } );\n        }\n        else {\n            this.toolHeadingName='Create Protocol';\n            this.helpUrl=Consts.HELP_URL_PROTOCOL_CREATE;\n            this.data={\n                \"uriExternal\":false,\n                \"type\":\"\",\n                \"name\":\"\",\n                \"abbreviation\":\"\",\n                \"version\":\"\",\n                \"fileTitle\":\"\",\n                \"fileDescription\":\"\"\n            }\n        }\n        // Get list of Protocol types for dropdown\n        this.apiService.doGet( Consts.QUERY_PROTOCOL_SETUP, '' ).subscribe(\n            data => {\n                this.errors={};\n                this.setupData = data;\n                if (!this.protocolId) {\n                    this.data[\"isCuratorEditing\"] = this.setupData[\"isCuratorEditing\"];\n                }\n                // this.defaultProtocolType = this.protocolTypes[0]; // SET default - This doesn't work @CHECKME  I had to hard code the default\n            },\n            errors=> {\n                this.errors=errors;\n            } );\n\n    }\n\n    onReset(){\n        this.init();\n    }\n\n\n    async onSubmit(){\n        // ////////////////////////////////////////////////////////\n        // Check for dups\n        if (!this.protocolId) {\n            this.haveDupStatus = false;\n            console.log('duplicate check?')\n            this.duplicateCheck();\n            // Wait until we know if it already exists\n            while( !this.haveDupStatus ){\n                await this.utilService.sleep( Consts.waitTime );\n            }\n            if( this.isDup ){\n                if (confirm(\"A database record with the same protocol type and protocol name already exists. Load it and update?\")) {\n                    this.router.navigate(['home/protocols/edit-protocol',this.existingData['id']]);\n                }\n                return;\n            }\n\n        }\n\n\n        // ////////////////////////////////////////////////////////\n        // Do we need to send a file?\n        // Send the file\n        if( !this.data.uriExternal ){\n            if (this.fileToUpload) {\n            let uploadUrl = this.httpClient.post(Consts.QUERY_UPLOAD_FILE, this.fileToUpload);\n            uploadUrl.subscribe(data=> {\n                    this.errors={};\n                    this.data.fileId=\"0\";\n                    this.data.uri=data['fileName'];\n                    this.submitProtocol();\n            },\n            error=> {\n\n            })\n            }\n            else {\n                // we dont have a file //\n                this.submitProtocol();\n\n            }\n\n        } // END  Send the file\n\n          // Send an external URI\n        else{\n            let formData = this.buildExternalUriForm();\n            this.data.uriExternal=true;\n            this.submitProtocol();\n        }\n    };\n\n\n\n    ngAfterViewInit(): void{\n        //  this.defaultProtocolType = this.protocolTypes[0]; // SET default - This doesn't work @CHECKME  I had to hard code the default\n    };\n\n    onEnterFileUrl(){\n        this.data.uriExternal = true;\n    };\n\n    onUpload(){\n        this.data.uriExternal = false;\n    };\n\n    saveAccess() {\n        this.data['theAccess']=this.theAccess;\n        let url=this.apiService.doPost(Consts.QUERY_PROTOCOL_SAVE_ACCESS,this.data);\n        url.subscribe(data=> {\n            this.data=data;\n            this.errors={};\n            if (this.fileToUpload) {\n                this.onSubmit();\n            }\n            else {\n                if (this.currentRoute=='protocol-create') {\n                    this.router.navigate(['home/protocols/edit-protocol',data['id'],'success'])\n                }\n            };\n        },\n        error=> {\n            this.errors=error;\n        });\n        this.accessIndex=null;\n    }\n\n    submitProtocol() {\n        this.apiService.doPost( Consts.QUERY_CREATE_PROTOCOL, this.data ).subscribe(\n            data => {\n                this.errors={};\n                this.data.theAccess=this.theAccess;\n                this.externalUrl = decodeURIComponent( this.externalUrl ); // Make it look right in the UI\n                let protocolId=data.replaceAll('\"','').replace('[','').replace(']','').split(',')[1];\n                if (this.currentRoute=='protocol-create') {\n                    this.router.navigate(['home/protocols/edit-protocol',protocolId,'success'])\n                }\n                else {\n                    this.message='Protocol Successfully Updated';\n                }\n            },\n            err => {\n                this.errors=err;\n                this.externalUrl = decodeURIComponent( this.externalUrl ); // Make it look right in the UI\n            }\n        );\n    }\n\n    getProtocol(event) {\n        let url = this.apiService.doGet(Consts.QUERY_GET_PROTOCOL,'protocolType='+this.data.type+'&protocolName='+this.data.name+'&protocolVersion='+this.data.version);\n        url.subscribe(data=> {\n            if (confirm(\"A database record with the same protocol type and protocol name already exists. Load it and update?\")) {\n                this.router.navigate(['home/protocols/edit-protocol',data['id']])\n            }\n        })\n    }\n\n    submitForReview() {\n        console.log(this.data)\n        let url = this.apiService.doPost(Consts.QUERY_PROTOCOL_SUBMIT_REVIEW,{dataId:this.data.id,dataName:this.data.name,dataType:\"protocol\"},'text');\n        url.subscribe(data=> {\n            this.submitReviewButton=false;\n        })\n    }\n\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingName\"\n>\n</canano-main-display-heading>\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n\n    <div class=\"error\" *ngIf=\"message\">\n        {{message}}\n    </div>\n    <div class=\"mainBorder\">\n    <form name=\"searchForm\">\n        <table class=\"dataMain\">\n            <!-- Protocol Type -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolType\">\n                        Protocol Type*\n                    </label>\n                </td>\n                <td>\n                    <select id=\"protocolType\" [(ngModel)]=\"data.type\" name=\"type\">\n                        <option [ngValue]=\"''\" [selected]=\"true\">--Select--</option>\n                        <option *ngFor=\"let type of setupData.protocolTypes\" value=\"{{type}}\">{{type}}</option>\n                    </select>\n                </td>\n            </tr>\n            <!-- -----  END Protocol Type  ----- -->\n            <!-- -----  Protocol Name  ----- -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolName\">\n                        Protocol Name<sup><b>*</b></sup>\n                    </label>\n                </td>\n                <td>\n                    <input (focusout)=\"getProtocol($event)\" type=\"text\" name=\"name\" id=\"protocolName\" [(ngModel)]=\"data.name\">\n                </td>\n            </tr>\n            <!--  -----  END Protocol Name  ----- -->\n            <!--  -----  Protocol Abbreviation  ----- -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"abbreviation\">\n                        <div>Protocol</div>\n                        <div>Abbreviation</div>\n                    </label>\n                </td>\n                <td>\n                    <input id=\"abbreviation\" name=\"abbreviation\" type=\"text\" [(ngModel)]=\"data.abbreviation\">\n                </td>\n            </tr>\n            <!-- END Protocol Abbreviation -->\n            <!-- Protocol Version-->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolVersion\">\n                        Protocol Version\n                    </label>\n                </td>\n                <td>\n                    <input id=\"protocolVersion\" name=\"version\" type=\"text\" [(ngModel)]=\"data.version\">\n                </td>\n            </tr>\n            <!--            END Protocol Version-->\n            <!--            Protocol File-->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolFile\">\n                        Protocol File\n                    </label>\n                </td>\n                <!-- Radio buttons for \"Upload\"/\"Enter File URL\" -->\n                <td>\n                    <!-- Radio button for Upload -->\n                    <input name=\"create_protocol_file_radio\" id=\"create_protocol_file_radio0\" type=\"radio\" [value]=\"false\" [checked]=\"!data.uriExternal\" (click)=\"onUpload()\" [(ngModel)]=\"data.uriExternal\">\n                    <label for=\"create_protocol_file_radio0\" class=\"right\">\n                        Upload\n                    </label>\n                    <!-- END Radio button for Upload -->\n                    <!-- Radio button for File URL -->\n                    <input name=\"create_protocol_file_radio\" id=\"create_protocol_file_radio1\" type=\"radio\" [value]=\"true\" [checked]=\"data.uriExternal\" (click)=\"onEnterFileUrl()\" [(ngModel)]=\"data.uriExternal\">\n                    <label for=\"create_protocol_file_radio1\" class=\"right\">\n                        Enter File URL\n                    </label>\n                    <!-- END Radio button for File URL -->\n                    <!-- END Radio buttons for \"Upload\"/\"Enter File URL\" -->\n                    <!-- File browser button -->\n                    <br />\n                    <input [ngClass]=\"{'hide': data.uriExternal}\" (change)=\"uploadFile($event)\" type=\"file\">\n                    <div *ngIf=\"data.uri\">\n                        <a [href]=\"downloadUrl+'?protocolId='+protocolId+'&fileId='+data.fileId\">\n                            {{data.uri}}\n                        </a>\n                    </div>\n                    <!-- END File browser button -->\n                    <!-- File URL text input -->\n                    <input [ngClass]=\"{'hide': ! data.uriExternal}\" placeholder=\"File URL\" type=\"text\" id=\"externalUrl\" name=\"externalUrl\" [(ngModel)]=\"data.externalUrl\">\n                    <span *ngIf=\"data.uriExternal\"> [<canano-disclaimer></canano-disclaimer>]</span>\n\n                    <!-- File URL text input -->\n                </td>\n            </tr>\n            <!-- Protocol File Title -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"fileTitle\">\n                        File Title\n                    </label>\n                </td>\n                <td>\n                    <input name=\"fileTitle\" id=\"fileTitle\" type=\"text\" [(ngModel)]=\"data.fileTitle\">\n                </td>\n            </tr>\n            <!-- END Protocol File Title -->\n            <!--  Description  -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"description\">\n                        Description\n                    </label>\n                </td>\n                <td>\n                    <textarea name=\"fileDescription\" id=\"description\" cols=\"60\" rows=\"3\" [(ngModel)]=\"data.fileDescription\">\n                    </textarea>\n                </td>\n            </tr>\n            <!--  END Description  -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"accessToProtocol\">\n                        Access to the Protocol\n                    </label>\n                </td>\n                <td>\n                    <button (click)=\"addAccess()\" [disabled]=\"data.type==''||data.name==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">\n                        Add\n                    </button>\n                </td>\n            </tr>\n            <ng-container *ngIf=\"data['groupAccesses']\">\n                <tr *ngIf=\"data.groupAccesses.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable\">\n                            <tr>\n                                <th>Group Name</th>\n                                <th>Access</th>\n                                <th></th>\n                            </tr>\n                            <tr *ngFor=\"let group of data.groupAccesses; let groupIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                <td>{{group.recipientDisplayName}}</td>\n                                <td>{{group.roleDisplayName}}</td>\n                                <td>\n                                    <button (click)=\"editAccess(groupIndex,group)\" *ngIf=\"shouldShowAccessEditButton(group)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.userAccesses.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable\">\n                            <tr>\n                                <th>User Login Name\t</th>\n                                <th>Access</th>\n                                <th></th>\n                            </tr>\n                            <tr *ngFor=\"let user of data.userAccesses; let userIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                <td>{{user.recipientDisplayName}}</td>\n                                <td>{{user.roleDisplayName}}</td>\n                                <td>\n                                    <button (click)=\"editAccess(userIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n            </ng-container>\n            <tr *ngIf=\"accessIndex!=null\">\n                <td></td>\n                <td>\n                    <div class=\"mainBorder\">\n                        <table class=\"authorForm\">\n                            <tr *ngIf=\"!editingAccessRow\">\n                                <td class=\"label\">\n                                    <label for=\"accessType\">\n                                        Access By*\n                                    </label>\n                                </td>\n                                <td class=\"field\" colspan=\"2\">\n                                    <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.group\" id=\"accessType.group\" [value]=\"'group'\" [(ngModel)]=\"theAccess['accessType']\">\n                                    <label for=\"accessType.group\" class=\"right\">\n                                        Collaboration Group\n                                    </label>\n                                    &nbsp;\n                                    <input (ngModelChange)=\"changeAccessType($event)\" [value]=\"'user'\" type=\"radio\" name=\"theAccess.accessType\" id=\"theAccess.accessType.user\" [(ngModel)]=\"theAccess.accessType\">\n                                    <label for=\"theAccess.accessType.user\" class=\"right\">\n                                        User\n                                    </label>\n                                    &nbsp;\n                                    <input *ngIf=\"data.isCuratorEditing\" (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.role\" id=\"accessType.role\" [value]=\"'role'\" [(ngModel)]=\"theAccess['accessType']\">\n                                    <label *ngIf=\"data.isCuratorEditing\" for=\"accessType.role\" class=\"right\">\n                                        Public\n                                    </label>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"theAccess.accessType&&theAccess.accessType!='role'&&!editingAccessRow\">\n                                <td class=\"label\">\n                                    <label for=\"access.recipient\">\n                                        <span *ngIf=\"theAccess.accessType=='group'\">\n                                            Collaboration Group*\n                                        </span>\n                                        <span *ngIf=\"theAccess.accessType=='user'\">\n                                            User*\n                                        </span>\n                                    </label>\n                                </td>\n                                <td class=\"field\">\n                                    <button (click)=\"getRecipientList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search</button>\n                                    <ng-container *ngIf=\"recipientList\">\n                                        &nbsp;&nbsp;\n                                        <select name=\"access.recipient\" [(ngModel)]=\"theAccess.recipient\">\n                                            <option [selected]=\"theAccess.recipient===''\" [ngValue]=\"''\">--select</option>\n                                            <ng-container *ngIf=\"theAccess.accessType=='group'\">\n                                                <option *ngFor=\"let group of recipientList\">\n                                                    {{group}}\n                                                </option>\n                                            </ng-container>\n                                            <ng-container *ngIf=\"theAccess.accessType=='user'\">\n                                                <option *ngFor=\"let user of recipientList|keyvalue\" [ngValue]=\"user.key\">\n                                                    {{user.value}}\n                                                </option>\n                                            </ng-container>\n\n                                        </select>\n                                    </ng-container>\n\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"access.roleName\">\n                                        Access to the Protocol*\n                                    </label>\n                                </td>\n                                <td class=\"field\">\n                                    <select [disabled]=\"theAccess.accessType=='role'\" name=\"access.roleName\" [(ngModel)]=\"theAccess.roleName\">\n                                        <option [selected]=\"theAccess.roleName===''\" [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let role of setupData.csmRoleNames | keyvalue\" [ngValue]=\"role.key\" [selected]=\"role.key==theAccess.roleName\">\n                                            {{role.value}}\n                                        </option>\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <button (click)=\"deleteAccess()\" *ngIf=\"accessIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                </td>\n                                <td>\n                                    <button (click)=\"saveAccess()\" [disabled]=\"theAccess.accessType==''||theAccess.roleName==''||theAccess.recipient==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                    <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n        </table>\n        <div id=\"buttons\">\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button *ngIf=\"showDeleteButton()\"\n                            class=\"btn btn-danger m-1\"\n                            (click)=\"delete()\"\n                        >Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"onReset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"data.type==''||data.name==''\" (click)=\"onSubmit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                        <button *ngIf=\"data.review&&submitReviewButton\" [disabled]=\"data.type==''||data.name==''\" (click)=\"submitForReview()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit For Review</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n    </form>\n</div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProtocolCreateComponent } from './protocol-create.component';\nimport { ProtocolCreateRoutingModule } from './protocol-create-routing.module';\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DisclaimerModule } from 'src/app/cananolab-client/common/components/disclaimer/disclaimer.module';\n\n@NgModule({\n    declarations: [ProtocolCreateComponent],\n    imports: [\n      CommonModule,\n      ProtocolCreateRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      DisclaimerModule\n    ]\n  })\n  export class ProtocolCreateModule { }\n"],"names":["RouterModule","ProtocolCreateComponent","routes","path","component","ProtocolCreateRoutingModule","forChild","imports","exports","Consts","i0","constructor","httpClient","route","router","apiService","utilService","QUERY_DOWNLOAD_FILE","HELP_URL_PROTOCOL_CREATE","ngOnInit","params","subscribe","protocolId","message","init","errors","addAccess","accessIndex","recipientList","theAccess","editingAccessRow","shouldShowAccessEditButton","group","recipient","data","buildExternalUriForm","formData","FormData","append","type","cancelAccess","uploadFile","event","fileToUpload","tFile","target","files","item","name","console","log","delete","confirm","doPost","QUERY_DELETE_PROTOCOL","navigate","showDeleteButton","url","includes","changeAccessType","deleteAccess","QUERY_PROTOCOL_DELETE_ACCESS","error","duplicateCheck","formValues","dupQuery","undefined","doGet","QUERY_GET_PROTOCOL","existingData","isDup","haveDupStatus","err","editAccess","index","access","JSON","parse","stringify","getRecipientList","QUERY_GET_COLLABORATION_GROUPS","QUERY_GET_USERS","currentRoute","toolHeadingName","helpUrl","HELP_URL_PROTOCOL_EDIT","QUERY_EDIT_PROTOCOL","QUERY_PROTOCOL_SETUP","setupData","onReset","onSubmit","sleep","waitTime","uriExternal","uploadUrl","post","QUERY_UPLOAD_FILE","fileId","uri","submitProtocol","ngAfterViewInit","onEnterFileUrl","onUpload","saveAccess","QUERY_PROTOCOL_SAVE_ACCESS","QUERY_CREATE_PROTOCOL","externalUrl","decodeURIComponent","replaceAll","replace","split","getProtocol","version","submitForReview","QUERY_PROTOCOL_SUBMIT_REVIEW","dataId","id","dataName","dataType","submitReviewButton","selectors","decls","vars","consts","template","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","DisclaimerModule","ProtocolCreateModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}