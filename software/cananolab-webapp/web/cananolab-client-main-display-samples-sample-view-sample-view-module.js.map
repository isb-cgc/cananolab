{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/sample-view/sample-view-routing.module.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.module.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.component.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.component.html"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-sample-view-sample-view-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleViewComponent } from './sample-view.component';\nconst routes: Routes = [{ path: '', component: SampleViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleViewRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleViewComponent } from './sample-view.component';\nimport { SampleViewRoutingModule } from './sample-view-routing.module';\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [SampleViewComponent],\n    imports: [\n      CommonModule,\n      SampleViewRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\nexport class SampleViewModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../constants';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Properties } from '../../../../../assets/properties';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { NavigationService } from 'src/app/cananolab-client/common/services/navigation.service';\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\nimport { formatDate } from '@angular/common';\n@Component( {\n    selector: 'canano-sample-view',\n    templateUrl: './sample-view.component.html',\n    styleUrls: ['./sample-view.component.scss']\n} )\nexport class SampleViewComponent implements OnInit{\n    sampleId = -1;\n    sampleName = '';\n    sampleData;\n    loading;\n    helpUrl = Consts.HELP_URL_SAMPLE_VIEW;\n    toolHeadingNameViewSample = 'Sample ' + this.sampleName;\n    pointOfContacts = [];\n    keyWords = [];\n\n    constructor(\n        private navigationService:NavigationService,\n        private route: ActivatedRoute,\n        private httpClient: HttpClient,\n        private router: Router,\n        private apiService:ApiService){\n    }\n\n    ngOnInit(): void{\n        this.navigationService.setCurrentSelectedItem(0);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' ).replace( /&.*$/, '' );\n                this.sampleName = params['sampleId'].replace( /^.*sampleName=/, '' );\n                this.toolHeadingNameViewSample = 'Sample ' + this.sampleName;\n            } );\n\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' );\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                }\n\n                this.sampleData = this.getSampleViewData().subscribe(\n                    data => {\n                        Properties.SAMPLE_TOOLS = true;\n                        this.sampleData = data;\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                        // this.pointOfContacts = this.sampleData['pointOfContactMap'];\n                        this.getPointOfContacts(data);\n                        this.keyWords = this.sampleData.keywords.split( /<br>/ );\n                        this.toolHeadingNameViewSample = 'Sample ' + Properties.CURRENT_SAMPLE_NAME;\n                    } );\n            } );\n\n    }\n\n\n    downloadReady(event) {\n        if (event==true) {\n            this.loading=null;\n        }\n        if (event==false) {\n            this.loading=true;\n        }\n    }\n\n    topButtonGeneralInfo(){\n        this.router.navigate( ['home/samples/view-sample', '?sampleId=' + Properties.CURRENT_SAMPLE_ID] );\n    }\n    topButtonComposition(){\n        this.router.navigate( ['home/samples/composition', Properties.CURRENT_SAMPLE_ID] );\n    }\n\n    topButtonCharacterization(){\n        this.router.navigate( ['home/samples/characterization', Properties.CURRENT_SAMPLE_ID] );\n    }\n\n    topButtonPublication(){\n        this.router.navigate( ['home/samples/publications', Properties.CURRENT_SAMPLE_ID] );\n    }\n\n    getSampleViewData(){\n        let getUrl = Consts.QUERY_SAMPLE_VIEW;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n            console.log( curl );\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl,'sampleId='+this.sampleId);\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n    }\n\n    getPointOfContacts(data) {\n\n        data['pointOfContactMap']['contactPerson'].forEach((element,index)=> {\n            let pointOfContact={\n                primaryContact:data['pointOfContactMap']['primaryContact'][index],\n                organizationDisplayName:data['pointOfContactMap']['organizationDisplayName'][index],\n                role:data['pointOfContactMap']['role'][index],\n                contactPerson:data['pointOfContactMap']['contactPerson'][index]\n            };\n            this.pointOfContacts.push(pointOfContact);\n        });\n    }\n\n    dateFormat(date) {\n        if (date) {\n            return formatDate(date,'shortDate','en-US')\n        }\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameViewSample\"\n    [exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"[sampleId]\" (downloadReady)=\"downloadReady($event)\" [backUrl]=\"'home/samples/sample-search'\">\n</canano-main-display-heading>\n<div class=\"mainSection\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n<div class=\"mainBorder\">\n    <table class=\"dataMain\">\n        <tr>\n            <td class=\"label\">\n                Sample Name\n            </td>\n            <td>\n                {{sampleData['sampleName']}}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                Created Date\n            </td>\n            <td>\n                  {{dateFormat(sampleData['createdDate'])}}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                Keywords\n            </td>\n            <td>\n                <div *ngFor=\"let keyword of keyWords\">\n                    {{keyword}}\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"label\">\n                Point of Contacts\n            </td>\n            <td>\n                <table class=\"dataTable\">\n                    <tr>\n                        <th>\n                            Primary Contact\n                        </th>\n                        <th>\n                            Contact Person\n                        </th>\n                        <th>\n                            Organization\n                        </th>\n                        <th>\n                            Role\n                        </th>\n                    </tr>\n                    <tr *ngFor=\"let contact of pointOfContacts\">\n                        <td>\n                            <ng-container *ngIf=\"contact.primaryContact\">\n                                Yes\n                            </ng-container>\n                            <ng-container *ngIf=\"!contact.primaryContact\">\n                                No\n                            </ng-container>\n                        </td>\n                        <td>\n                            {{contact.contactPerson}}\n                        </td>\n                        <td>\n                            <span [innerHtml]=\"contact.organizationDisplayName\">\n                                Org Name\n                            </span>\n                        </td>\n                        <td>\n                            {{contact.role}}\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n</div>\n</div>\n"],"sourceRoot":"webpack:///"}