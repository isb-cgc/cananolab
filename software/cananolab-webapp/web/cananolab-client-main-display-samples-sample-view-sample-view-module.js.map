{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/sample-view/sample-view-routing.module.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.module.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.component.ts","./src/app/cananolab-client/main-display/samples/sample-view/sample-view.component.html"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-sample-view-sample-view-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SampleViewComponent } from './sample-view.component';\r\nconst routes: Routes = [{ path: '', component: SampleViewComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SampleViewRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SampleViewComponent } from './sample-view.component';\r\nimport { SampleViewRoutingModule } from './sample-view-routing.module';\r\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    declarations: [SampleViewComponent],\r\n    imports: [\r\n      CommonModule,\r\n      SampleViewRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule\r\n    ]\r\n  })\r\nexport class SampleViewModule { }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Consts } from '../../../../constants';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Properties } from '../../../../../assets/properties';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { NavigationService } from 'src/app/cananolab-client/common/services/navigation.service';\r\nimport { ApiService } from 'src/app/cananolab-client/common/services/api.service';\r\nimport { formatDate } from '@angular/common';\r\n@Component( {\r\n    selector: 'canano-sample-view',\r\n    templateUrl: './sample-view.component.html',\r\n    styleUrls: ['./sample-view.component.scss']\r\n} )\r\nexport class SampleViewComponent implements OnInit{\r\n    sampleId = -1;\r\n    sampleName = '';\r\n    sampleData;\r\n    loading;\r\n    helpUrl = Consts.HELP_URL_SAMPLE_VIEW;\r\n    toolHeadingNameViewSample = 'Sample ' + this.sampleName;\r\n    pointOfContacts = [];\r\n    keyWords = [];\r\n\r\n    constructor(\r\n        private navigationService:NavigationService,\r\n        private route: ActivatedRoute,\r\n        private httpClient: HttpClient,\r\n        private router: Router,\r\n        private apiService:ApiService){\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        this.navigationService.setCurrentSelectedItem(0);\r\n        this.route.params.subscribe(\r\n            ( params: Params ) => {\r\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' ).replace( /&.*$/, '' );\r\n                this.sampleName = params['sampleId'].replace( /^.*sampleName=/, '' );\r\n                this.toolHeadingNameViewSample = 'Sample ' + this.sampleName;\r\n            } );\r\n\r\n        this.route.params.subscribe(\r\n            ( params: Params ) => {\r\n                this.sampleId = params['sampleId'].replace( /^.*\\?sampleId=/, '' );\r\n                if(\r\n                    this.sampleId <= 0 ){\r\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\r\n                }else{\r\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\r\n                }\r\n\r\n                this.sampleData = this.getSampleViewData().subscribe(\r\n                    data => {\r\n                        Properties.SAMPLE_TOOLS = true;\r\n                        this.sampleData = data;\r\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\r\n                        // this.pointOfContacts = this.sampleData['pointOfContactMap'];\r\n                        this.getPointOfContacts(data);\r\n                        this.keyWords = this.sampleData.keywords.split( /<br>/ );\r\n                        this.toolHeadingNameViewSample = 'Sample ' + Properties.CURRENT_SAMPLE_NAME;\r\n                    } );\r\n            } );\r\n\r\n    }\r\n\r\n\r\n    downloadReady(event) {\r\n        if (event==true) {\r\n            this.loading=null;\r\n        }\r\n        if (event==false) {\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    topButtonGeneralInfo(){\r\n        this.router.navigate( ['home/samples/view-sample', '?sampleId=' + Properties.CURRENT_SAMPLE_ID] );\r\n    }\r\n    topButtonComposition(){\r\n        this.router.navigate( ['home/samples/composition', Properties.CURRENT_SAMPLE_ID] );\r\n    }\r\n\r\n    topButtonCharacterization(){\r\n        this.router.navigate( ['home/samples/characterization', Properties.CURRENT_SAMPLE_ID] );\r\n    }\r\n\r\n    topButtonPublication(){\r\n        this.router.navigate( ['home/samples/publications', Properties.CURRENT_SAMPLE_ID] );\r\n    }\r\n\r\n    getSampleViewData(){\r\n        let getUrl = Consts.QUERY_SAMPLE_VIEW;\r\n\r\n        if( Properties.DEBUG_CURL ){\r\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\r\n            console.log( curl );\r\n        }\r\n\r\n        let headers = new HttpHeaders( {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        } );\r\n\r\n        let options = {\r\n            headers: headers,\r\n            method: 'get',\r\n        };\r\n\r\n        let results;\r\n        try{\r\n            results = this.apiService.doGet(getUrl,'sampleId='+this.sampleId);\r\n        }catch( e ){\r\n            // TODO react to error.\r\n            console.error( 'doGet Exception: ' + e );\r\n        }\r\n        return results;\r\n    }\r\n\r\n    getPointOfContacts(data) {\r\n\r\n        data['pointOfContactMap']['contactPerson'].forEach((element,index)=> {\r\n            let pointOfContact={\r\n                primaryContact:data['pointOfContactMap']['primaryContact'][index],\r\n                organizationDisplayName:data['pointOfContactMap']['organizationDisplayName'][index],\r\n                role:data['pointOfContactMap']['role'][index],\r\n                contactPerson:data['pointOfContactMap']['contactPerson'][index]\r\n            };\r\n            this.pointOfContacts.push(pointOfContact);\r\n        });\r\n    }\r\n\r\n    dateFormat(date) {\r\n        if (date) {\r\n            return formatDate(date,'shortDate','en-US')\r\n        }\r\n    }\r\n}\r\n","<canano-main-display-heading\r\n    [helpUrl]=\"helpUrl\"\r\n    [toolHeadingName]=\"toolHeadingNameViewSample\"\r\n    [exportXML]=\"true\" [exportJSON]=\"true\" [sampleIds]=\"[sampleId]\" (downloadReady)=\"downloadReady($event)\" [backUrl]=\"'home/samples/sample-search'\">\r\n</canano-main-display-heading>\r\n<div class=\"mainSection\">\r\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\r\n\r\n    </canano-loader>\r\n<div class=\"mainBorder\">\r\n    <table class=\"dataMain\">\r\n        <tr>\r\n            <td class=\"label\">\r\n                Sample Name\r\n            </td>\r\n            <td>\r\n                {{sampleData['sampleName']}}\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"label\">\r\n                Created Date\r\n            </td>\r\n            <td>\r\n                  {{dateFormat(sampleData['createdDate'])}}\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"label\">\r\n                Keywords\r\n            </td>\r\n            <td>\r\n                <div *ngFor=\"let keyword of keyWords\">\r\n                    {{keyword}}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"label\">\r\n                Point of Contacts\r\n            </td>\r\n            <td>\r\n                <table class=\"dataTable\">\r\n                    <tr>\r\n                        <th>\r\n                            Primary Contact\r\n                        </th>\r\n                        <th>\r\n                            Contact Person\r\n                        </th>\r\n                        <th>\r\n                            Organization\r\n                        </th>\r\n                        <th>\r\n                            Role\r\n                        </th>\r\n                    </tr>\r\n                    <tr *ngFor=\"let contact of pointOfContacts\">\r\n                        <td>\r\n                            <ng-container *ngIf=\"contact.primaryContact\">\r\n                                Yes\r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"!contact.primaryContact\">\r\n                                No\r\n                            </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            {{contact.contactPerson}}\r\n                        </td>\r\n                        <td>\r\n                            <span [innerHtml]=\"contact.organizationDisplayName\">\r\n                                Org Name\r\n                            </span>\r\n                        </td>\r\n                        <td>\r\n                            {{contact.role}}\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}