{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/composition/composition/composition.component.ts","./src/app/cananolab-client/main-display/samples/composition/composition/composition.component.html","./src/app/cananolab-client/main-display/samples/composition/composition/composition.module.ts","./src/app/cananolab-client/main-display/samples/composition/composition/composition-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-composition-composition-composition-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Properties } from '../../../../../../assets/properties';\nimport { Consts } from '../../../../../constants';\nimport { HttpHeaders } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NavigationService } from '../../../../common/services/navigation.service';\nimport { ApiService } from '../../../../common/services/api.service';\nimport {StatusDisplayService } from '../../../../status-display/status-display.service';\n@Component( {\n    selector: 'canano-composition',\n    templateUrl: './composition.component.html',\n    styleUrls: ['./composition.component.scss']\n} )\nexport class CompositionComponent implements OnInit{\n    sampleId = Properties.CURRENT_SAMPLE_ID;\n    sampleName = Properties.CURRENT_SAMPLE_NAME;\n    helpUrl =  Consts.HELP_URL_SAMPLE_COMPOSITION;\n    toolHeadingNameManage;\n    data;\n    editUrl=false;\n    sectionToShow='all';\n    constructor( private statusDisplayService:StatusDisplayService,private apiService:ApiService,private navigationService:NavigationService,private router: Router, private route: ActivatedRoute ){\n    }\n\n    ngOnInit(): void{\n        this.editUrl=this.statusDisplayService.isEditUrl();\n        this.navigationService.setCurrentSelectedItem(1);\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                setTimeout(()=> {\n                    Properties.SAMPLE_TOOLS = true;\n\n                },200)\n                this.sampleId = params['sampleId'];\n                if(\n                    this.sampleId <= 0 ){\n                    this.sampleId = Properties.CURRENT_SAMPLE_ID;\n                }else{\n                    Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                };\n                this.apiService.getSampleName(this.sampleId).subscribe(\n                    data=>this.toolHeadingNameManage='Sample ' +data['sampleName'] + ' Composition'\n                )\n                this.data = this.getCompositionEditData().subscribe(\n                    data => {\n                        this.data = data;\n                        Properties.CURRENT_SAMPLE_NAME = data['sampleName'];\n                    } );\n            }\n        );\n    }\n\n    convertTitlesToRealWords(title) {\n        const wordRegex = /[A-Z]?[a-z]+|[0-9]+|[A-Z]+(?![a-z])/g;\n        const result = title.match(wordRegex);\n        return result.join(' ')\n    }\n\n    getCompositionEditData(){\n        let getUrl = Consts.QUERY_COMPOSITION_SUMMARY_VIEW;\n\n        if( Properties.DEBUG_CURL ){\n            let curl = 'curl  -k \\'' + getUrl + '\\'';\n            console.log( curl );\n        }\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        } );\n\n        let options = {\n            headers: headers,\n            method: 'get',\n        };\n\n        let results;\n        try{\n            results = this.apiService.doGet(getUrl,'sampleId=' + this.sampleId).pipe( timeout( Properties.HTTP_TIMEOUT ) );\n        }catch( e ){\n            // TODO react to error.\n            console.error( 'doGet Exception: ' + e );\n        }\n        return results;\n\n    }\n    onChemicalAssociationClick(dataId){\n        if (dataId==-1){\n            this.router.navigate( ['home/samples/composition/chemical-association', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/chemical-association', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n    onFunctionalizingEntityClick(dataId){\n        if (dataId==-1){\n            this.router.navigate( ['home/samples/composition/functionalizing-entity', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/functionalizing-entity', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n\n    onNanomaterialEntityClick(dataId){\n        if (dataId==-1) {\n            this.router.navigate( ['home/samples/composition/nanomaterial-entity', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/nanomaterial-entity', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n    onCompositionFileClick(dataId){\n        if (dataId==-1){\n            this.router.navigate( ['home/samples/composition/composition-file', Properties.CURRENT_SAMPLE_ID] );  // @FIXME  Don't hard code these\n        }\n        else {\n            this.router.navigate( ['home/samples/composition/composition-file', Properties.CURRENT_SAMPLE_ID, dataId] );  // @FIXME  Don't hard code these\n        }\n    }\n\n    propertyCheck(entry) {\n        if (entry['Properties']) {\n            let keys=Object.keys(entry['Properties']);\n            let displayableItems=[];\n            keys.forEach(item=> {\n                if (entry.Properties[item]&&entry.Properties[item]!='') {\n                    displayableItems.push(item);\n                };\n            });\n            if (displayableItems.length) {\n                return true\n            };\n        }\n\n\n        return false\n    }\n\n    showSection(value) {\n        this.sectionToShow=value;\n    }\n\n    splitKeywordString(keyword) {\n        return keyword.split('\\n')\n    }\n\n\n}\n","<canano-main-display-heading [helpUrl]=\"helpUrl\" [print]=\"true\" [toolHeadingName]=\"toolHeadingNameManage\" [export]=\"[sampleId,'COMPOSITION']\">\n\n</canano-main-display-heading>\n    <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" id=\"all-tab\" data-toggle=\"tab\" (click)=\"showSection('all')\">All</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" id=\"nano-tab\" data-toggle=\"tab\" (click)=\"showSection('nanomaterialentity')\">Nanomaterial Entity</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"functionalizing-tab\" data-toggle=\"tab\" (click)=\"showSection('functionalizingentity')\">Functionalizing Entity</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"chemical-tab\" data-toggle=\"tab\" (click)=\"showSection('chemicalassociation')\">Chemical Association</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"file-tab\" data-toggle=\"tab\" (click)=\"showSection('compositionfile')\">Composition File</a>\n          </li>\n    </ul>\n<div class=\"mainSection\" *ngIf=\"data&&(sectionToShow=='all'||sectionToShow=='nanomaterialentity')\">\n    <div id=\"nanomaterialEntity\" class=\"header\" *ngIf=\"sectionToShow=='all'||sectionToShow=='nanomaterialentity'\">\n        Nanomaterial Entity <button *ngIf=\"editUrl\" (click)=\"onNanomaterialEntityClick(-1)\" class=\"btn btn-primary btn-sm\">Add</button>\n    </div>\n    <span *ngFor=\"let nanomaterial of data['nanomaterialentity'] | keyvalue; let index = index\">\n        <div class=\"blueHeader\">{{nanomaterial.key}}</div><br />\n        <div class=\"mainBorder\" *ngFor=\"let entry of nanomaterial.value\">\n            <div class=\"editButton\" *ngIf=\"editUrl\">\n                <button class=\"btn btn-primary btn-sm\" (click)=\"onNanomaterialEntityClick(entry['dataId'] )\">\n                    Edit\n                </button>\n            </div>\n\n            <div>\n                <table class=\"dataMain\">\n                    <tr *ngIf=\"entry.Description\">\n                        <td class=\"label\">Description</td>\n                        <td>\n                            {{entry.Description}}\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['isWithProperties'] && propertyCheck(entry)\">\n                        <td class=\"label\">Properties</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th *ngFor=\"let property of entry['Properties'] | keyvalue\">\n                                        {{convertTitlesToRealWords(property.key)}}\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <td *ngFor=\"let property of entry['Properties'] | keyvalue\">{{property.value}}</td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['ComposingElements'].length\">\n                        <td class=\"label\">Composing Elements</td>\n                        <td>\n\n                            <div *ngFor=\"let ce of entry['ComposingElements']; let last=last\">\n                                <table class=\"dataTable\" [ngClass]=\"{'last':last}\">\n                                    <tr>\n                                        <th class=\"label\" colspan=\"2\">\n                                           {{ce.DisplayName}}\n                                        </th>\n                                    </tr>\n                                    <tr *ngIf=\"ce.PubChemId!=''\">\n                                        <td class=\"label\">\n                                            PubChem ID\n                                        </td>\n                                        <td>\n                                            {{ce.PubChemId}}\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"ce.MolecularFormulaDisplayName!=''\">\n                                        <td class=\"label\">\n                                            Molecular Formula\n                                        </td>\n                                        <td>\n                                            {{ce.MolecularFormulaDisplayName}}\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"ce.Description!=''\">\n                                        <td class=\"label\">\n                                            Description\n                                        </td>\n                                        <td>\n                                            {{ce.Description}}\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"ce.Function\">\n                                        <td class=\"label\">\n                                            Function\n                                        </td>\n                                        <td>\n                                            <ul>\n                                                <li *ngFor=\"let inherentfunction of ce.Function\">\n                                                    {{inherentfunction}}\n                                                </li>\n                                            </ul>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['Files'].length\">\n                        <td class=\"label\">Files</td>\n                        <td>\n                                <table class=\"dataTable\">\n                                    <tr>\n                                        <th>File Title and Download Link</th>\n                                        <th>Keywords</th>\n                                        <th>Description</th>\n                                    </tr>\n                                    <tr *ngFor=\"let file of entry['Files']; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                        <td class=\"label\">\n                                            <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                                                <a href=\"{{file.URI}}\" target=\"blank\">{{file.Title}}</a>\n                                            </span>\n                                            <ng-template #elseBlock>\n                                                <span *ngIf=\"file.isImage; else elseBlock\">{{file.Title}}<br />\n                                                    <img src=\"/rest/sample/downloadImage?fileId={{file.fileId}}\"\n                                                        border=\"0\" width=\"150\" alt=\"uploaded image\">\n                                                </span>\n                                                <ng-template #elseBlock>\n                                                    <a href=\"/rest/sample/download?fileId={{file.fileId}}\"\n                                                        target=\"blank\">\n                                                        {{file.Title}}\n                                                    </a>\n                                                </ng-template>\n                                            </ng-template>\n                                        </td>\n                                        <td>\n                                            <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                                                {{keyword}}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            {{file.Description}}\n                                        </td>\n                                    </tr>\n                                </table>\n                        </td>\n                    </tr>\n\n                </table>\n            </div>\n        </div>\n    </span>\n</div>\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='functionalizingentity'\">\n    <div id=\"functionalizingEntity\" class=\"header\">\n        Functionalizing Entity <button *ngIf=\"editUrl\" class=\"btn btn-primary btn-sm\"\n            (click)=\"onFunctionalizingEntityClick(-1)\">Add</button>\n    </div>\n    <span *ngFor=\"let functionalizingentity of data['functionalizingentity'] | keyvalue; let index = index\">\n\n        <div class=\"blueHeader\">{{functionalizingentity.key}}</div><br />\n        <div class=\"mainBorder\" [ngClass]=\"{'last':last}\"\n            *ngFor=\"let entry of functionalizingentity.value;let last=last\">\n            <div class=\"editButton\" *ngIf=\"editUrl\"><button class=\"btn btn-primary btn-sm\"\n                    (click)=\"onFunctionalizingEntityClick(entry.dataId)\">Edit</button></div>\n            <div>\n                <table class=\"dataMain\">\n                    <tr *ngIf=\"entry.Name\">\n                        <td class=\"label\">Name</td>\n                        <td>{{entry.Name}}</td>\n                    </tr>\n                    <tr *ngIf=\"entry.pubChemLink\">\n                        <td class=\"label\">PubChem ID</td>\n                        <td><a [href]=\"entry.pubChemLink\" target=\"blank\">{{entry.pubChemID}}</a></td>\n                    </tr>\n                    <tr *ngIf=\"entry.value\">\n                        <td class=\"label\">Amount</td>\n                        <td>{{entry.value}} {{entry.valueUnit}}</td>\n                    </tr>\n                    <tr *ngIf=\"entry.MolecularFormulaDisplayName\">\n                        <td class=\"label\">Molecular Formula</td>\n                        <td>{{entry.MolecularFormulaDisplayName}}</td>\n                    </tr>\n                    <tr *ngIf=\"propertyCheck(entry)\">\n                        <td class=\"label\">Properties</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th *ngFor=\"let property of entry['Properties'] | keyvalue\">\n                                        {{convertTitlesToRealWords(property.key)}}\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <td *ngFor=\"let property of entry['Properties'] | keyvalue\">{{property.value}}</td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['Functions'].length\">\n                        <td class=\"label\">Function(s)</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Type</th>\n                                    <th>Image Modality</th>\n                                    <th>Description</th>\n                                </tr>\n                                <tr *ngFor=\"let function of entry.Functions; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>{{function.Type}}\n                                    </td>\n                                    <td>{{function.Modality}}</td>\n                                    <td>{{function.FunctionDescription}}</td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry.ActivationMethod\">\n                        <td class=\"label\">Activation Method</td>\n                        <td>{{entry.ActivationMethod}}</td>\n                    </tr>\n                    <tr *ngIf=\"entry.Desc\">\n                        <td class=\"label\">Description</td>\n                        <td>{{entry.Desc}}</td>\n                    </tr>\n                    <tr *ngIf=\"entry['Files'].length\">\n                        <td class=\"label\">Files</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Title and Download Link</th>\n                                    <th>Keywords</th>\n                                    <th>Description</th>\n                                </tr>\n                                <tr *ngFor=\"let file of entry['Files']; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>\n                                        <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                                            <a href=\"{{file.URI}}\" target=\"blank\">{{file.Title}}</a>\n                                        </span>\n                                        <ng-template #elseBlock>\n                                            <span *ngIf=\"file.isImage; else elseBlock\">{{file.Title}}<br />\n                                                <img src=\"/rest/sample/downloadImage?fileId={{file.fileId}}\"\n                                                    border=\"0\" width=\"150\" alt=\"uploaded image\">\n                                            </span>\n                                            <ng-template #elseBlock>\n                                                <a href=\"/rest/sample/download?fileId={{file.fileId}}\"\n                                                    target=\"blank\">\n                                                    {{file.Title}}\n                                                </a>\n                                            </ng-template>\n                                        </ng-template>\n                                    </td>\n                                    <td>\n                                        <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                                            {{keyword}}\n                                        </div>\n                                    </td>\n                                    <td>\n                                        {{file.Description}}\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </span>\n</div>\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='chemicalassociation'\">\n    <div id=\"chemicalAssociation\" class=\"header\">\n        Chemical Association<button *ngIf=\"editUrl\" (click)=\"onChemicalAssociationClick(-1)\"\n            class=\"btn btn-primary btn-sm\">Add</button>\n    </div>\n    <span *ngFor=\"let chemicalassociation of data['chemicalassociation'] | keyvalue; let index = index\">\n        <div class=\"blueHeader\">{{chemicalassociation.key}}</div><br />\n        <div class=\"mainBorder\" *ngFor=\"let entry of chemicalassociation.value;let last=last\" [ngClass]=\"{'last':last}\">\n            <div class=\"editButton\" *ngIf=\"editUrl\"><button class=\"btn btn-primary btn-sm\"\n                    (click)=\"onChemicalAssociationClick(entry.dataId)\">Edit</button></div>\n            <div>\n                <table class=\"dataMain\">\n                    <tr *ngIf=\"entry.BondType\">\n                        <td class=\"label\">Bond Type</td>\n                        <td>{{entry.BondType}}</td>\n                    </tr>\n                    <tr *ngIf=\"entry.Description\">\n                        <td class=\"label\">Description</td>\n                        <td>{{entry.Description}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"label\">Associated Elements</td>\n                        <td>\n                            <table class=\"properties\">\n                                <tr>\n                                    <td>{{entry.AssocitedElements.CompositiontypeA}}\n                                        {{entry.AssocitedElements.EntityDisplayNameA}} composing element of type\n                                        {{entry.AssocitedElements.ComposingElementTypeA}}\n                                        (name:{{entry.AssocitedElements.DomainElementNameA}})\n                                    </td>\n                                    <td style=\"text-align:center\">associated with\n                                        <img src=\"assets/images/arrow_left_right_gray.gif\">\n\n                                    </td>\n                                    <td>\n                                        {{entry.AssocitedElements.CompositiontypeB}}\n                                        {{entry.AssocitedElements.EntityDisplayNameB}} (name:\n                                        {{entry.AssocitedElements.DomainElementNameB}})\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr *ngIf=\"entry['Files']\">\n                        <td class=\"label\">Files</td>\n                        <td>\n                            <table class=\"dataTable\">\n                                <tr>\n                                    <th>Title and Download Link</th>\n                                    <th>Keywords</th>\n                                    <th>Description</th>\n                                </tr>\n                                <tr *ngFor=\"let file of entry['Files']; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                    <td>\n                                        <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                                            <a href=\"{{file.URI}}\" target=\"blank\">{{file.Title}}</a>\n                                        </span>\n                                        <ng-template #elseBlock>\n                                            <span *ngIf=\"file.isImage; else elseBlock\">{{file.Title}}<br />\n                                                <img src=\"/rest/sample/downloadImage?fileId={{file.fileId}}\"\n                                                    border=\"0\" width=\"150\" alt=\"uploaded image\">\n                                            </span>\n                                            <ng-template #elseBlock>\n                                                <a href=\"/rest/sample/download?fileId={{file.fileId}}\"\n                                                    target=\"blank\">\n                                                    {{file.Title}}\n                                                </a>\n                                            </ng-template>\n                                        </ng-template>\n                                    </td>\n                                    <td>\n                                        <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                                            {{keyword}}\n                                        </div>\n                                    </td>\n                                    <td>\n                                        {{file.Description}}\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </span>\n</div>\n\n<div class=\"mainSection\" *ngIf=\"sectionToShow=='all'||sectionToShow=='compositionfile'\">\n    <div id=\"compositionFile\" class=\"header\">\n        Composition File <button *ngIf=\"editUrl\" (click)=\"onCompositionFileClick(-1)\"\n            class=\"btn btn-primary btn-sm\">Add</button>\n    </div>\n    <ng-container *ngFor=\"let compositionfile of data['compositionfile'] | keyvalue; let index = index\">\n        <div class=\"blueHeader\">{{compositionfile.key}}</div><Br />\n        <div class=\"mainBorder\" [ngClass]=\"mainBorder\">\n            <table class=\"dataTable\">\n                <tr>\n                    <th>Title and Download Link</th>\n                    <th>Keywords</th>\n                    <th>Description</th>\n                    <th *ngIf=\"editUrl\"></th>\n                </tr>\n                <tr *ngFor=\"let file of compositionfile.value; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                    <td>\n                        <span *ngIf=\"file.ExternalURI=='true'; else elseBlock\">\n                            <a href=\"{{file.URI}}\" target=\"blank\">{{file.Title}}</a>\n                        </span>\n                        <ng-template #elseBlock>\n                            <span *ngIf=\"file.isImage; else elseBlock\">{{file.Title}}<br />\n                                <img src=\"/rest/sample/downloadImage?fileId={{file.fileId}}\" border=\"0\"\n                                    width=\"150\" alt=\"uploaded image\">\n                            </span>\n                            <ng-template #elseBlock>\n                                <a href=\"/rest/sample/download?fileId={{file.fileId}}\" target=\"blank\">\n                                    {{file.Title}}\n                                </a>\n                            </ng-template>\n                        </ng-template>\n                    </td>\n                    <td>\n                        <div *ngFor=\"let keyword of splitKeywordString(file.KeywordStr)\">\n                            {{keyword}}\n                        </div>\n                    </td>\n                    <td>{{file.Description}}</td>\n                    <td *ngIf=\"editUrl\">\n                        <button class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\"\n                            (click)=\"onCompositionFileClick(file.dataId)\">Edit</button>\n                    </td>\n                </tr>\n            </table><br />\n        </div>\n    </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositionComponent } from './composition.component';\nimport { CompositionRoutingModule } from './composition-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n    declarations: [CompositionComponent],\n    imports: [\n      CommonModule,\n      CompositionRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class CompositionModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompositionComponent } from './composition.component';\nconst routes: Routes = [{ path: '', component: CompositionComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompositionRoutingModule { }\n\n"],"sourceRoot":"webpack:///"}