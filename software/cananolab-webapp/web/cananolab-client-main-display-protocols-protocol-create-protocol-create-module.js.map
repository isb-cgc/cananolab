{"version":3,"sources":["./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.component.ts","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.component.html","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.module.ts","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-protocols-protocol-create-protocol-create-module.js","sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Consts } from '../../../../constants';\r\nimport { ApiService } from '../../../common/services/api.service';\r\nimport { UtilService } from '../../../common/services/util.service';\r\nimport { Router, Params, ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component( {\r\n    selector: 'canano-protocol-create',\r\n    templateUrl: './protocol-create.component.html',\r\n    styleUrls: ['./protocol-create.component.scss']\r\n} )\r\nexport class ProtocolCreateComponent implements OnInit, AfterViewInit{\r\n    accessIndex;\r\n    currentRoute='protocol-create';\r\n    data;\r\n    defaultProtocolType = 'radio labeling'; // Find a way to set this in time to protocolTypes[0]\r\n    downloadUrl=Consts.QUERY_DOWNLOAD_FILE;\r\n    errors;\r\n    existingData;\r\n    externalUrl;\r\n    fileToUpload;\r\n    haveDupStatus = false;\r\n    toolHeadingName='Create Protocol';\r\n    isDup = false;\r\n    message;\r\n    protocolId;\r\n    recipientList;\r\n    setupData={};\r\n    theAccess={};\r\n    submitReviewButton=true;\r\n    constructor(private httpClient:HttpClient, private route:ActivatedRoute,private router:Router,private apiService: ApiService, private utilService: UtilService,\r\n                 ){\r\n    }\r\n\r\n    ngOnInit(): void{\r\n        this.route.params.subscribe(\r\n            ( params: Params ) => {\r\n                this.protocolId=params['protocolId'];\r\n                if (params['message']) {\r\n                    if (params['message']=='deleted') {\r\n                        this.message='Protocol Deleted Successfully'\r\n                    }\r\n                    else {\r\n                        this.message='Protocol Created Successfully'\r\n                    }\r\n                }\r\n                this.init();\r\n            });\r\n\r\n        this.errors={};\r\n    }\r\n\r\n    addAccess() {\r\n        this.accessIndex=-1;\r\n        this.recipientList=null;\r\n        this.theAccess={\r\n                \"accessType\":\"\",\r\n                \"recipient\":\"\",\r\n                \"roleName\":\"\",\r\n                \"recipientDisplayName\":\"\"\r\n            }\r\n    }\r\n\r\n\r\n    buildExternalUriForm(): FormData{\r\n        let formData = new FormData();\r\n        formData.append( 'uriExternal', 'true' );\r\n        formData.append( 'review', 'false' );\r\n        formData.append( 'isPublic', 'false' );\r\n        formData.append( 'type', this.data.type );\r\n        return formData;\r\n    };\r\n\r\n    cancelAccess() {\r\n        this.accessIndex=null;\r\n    }\r\n\r\n    uploadFile(event) {\r\n        this.fileToUpload = new FormData();\r\n        const tFile = event.target.files.item(0);\r\n        this.fileToUpload.append('myFile', tFile, tFile.name);\r\n        this.fileToUpload.append( 'uriExternal', 'false' );\r\n        this.fileToUpload.append( 'review', 'false' );\r\n        this.fileToUpload.append( 'isPublic', 'false' );\r\n        this.fileToUpload.append( 'type', this.data.type );\r\n        console.log(this.fileToUpload)\r\n    }\r\n\r\n    delete() {\r\n        if (confirm(\"Are you sure you wish to delete this protocol?\")) {\r\n            this.apiService.doPost(Consts.QUERY_DELETE_PROTOCOL,this.data).subscribe(data=> {\r\n                this.router.navigate(['home/protocols/protocol-create/deleted'])\r\n            },\r\n            errors=> {\r\n                this.errors=errors;\r\n            })\r\n        }\r\n    }\r\n\r\n    showDeleteButton() {\r\n        if (this.router.url.includes('edit-protocol')) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    changeAccessType(event) {\r\n        this.recipientList=null;\r\n        this.theAccess['recipient']='';\r\n        this.theAccess['roleName']='';\r\n        if (event=='role') {\r\n            this.theAccess['recipientDisplayName']='Public';\r\n            this.theAccess['recipient']='ROLE_ANONYMOUS';\r\n            this.theAccess['roleName']=\"R\";\r\n        };\r\n    };\r\n\r\n    deleteAccess() {\r\n        if (confirm(\"Are you sure you wish to delete this \" + this.theAccess['accessType'] + \"?\")) {\r\n            this.data['theAccess']=this.theAccess;\r\n            let url = this.apiService.doPost(Consts.QUERY_PROTOCOL_DELETE_ACCESS,this.data);\r\n            url.subscribe(data=>{\r\n                this.data=data;\r\n                this.accessIndex=null;\r\n                this.errors={};\r\n            },\r\n            error=> {\r\n                this.errors=error;\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    duplicateCheck(){\r\n        let formValues = this.data;\r\n        let dupQuery = '';\r\n        if( formValues['version'] === undefined ){\r\n            dupQuery = 'protocolType=' + formValues['type'] + '&protocolName=' + formValues['name'];\r\n        }else{\r\n            dupQuery = 'protocolType=' + formValues['type'] + '&protocolName=' + formValues['name'] + '&protocolVersion=' + formValues['version'];\r\n        }\r\n        this.apiService.doGet( Consts.QUERY_GET_PROTOCOL, dupQuery ).subscribe(\r\n            // It already exists\r\n            data => {\r\n                this.existingData=data;\r\n                this.errors={};\r\n                this.isDup = true;\r\n                this.haveDupStatus = true;\r\n                return true;\r\n            },\r\n\r\n            // It does NOT already exist\r\n            ( err ) => {\r\n                this.isDup = false;\r\n                this.haveDupStatus = true;\r\n                return false;\r\n            } );\r\n\r\n    };\r\n\r\n    editAccess(index,access) {\r\n        console.log(index,access)\r\n        this.accessIndex=index;\r\n        this.recipientList=null;\r\n        this.theAccess=JSON.parse(JSON.stringify(access));\r\n    };\r\n\r\n    getRecipientList() {\r\n        var url;\r\n        if (this.theAccess['accessType']=='group') {\r\n            url=this.apiService.doGet(Consts.QUERY_GET_COLLABORATION_GROUPS,'searchStr=');\r\n        }\r\n        if (this.theAccess['accessType']=='user') {\r\n            url=this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr=');\r\n        }\r\n        url.subscribe(data=> {\r\n            this.recipientList=data;\r\n            this.errors={};\r\n        },\r\n        error=> {\r\n            this.errors=error;\r\n\r\n        })\r\n    };\r\n\r\n    init(){\r\n        if (this.protocolId) {\r\n            this.currentRoute='edit-protocol';\r\n            this.toolHeadingName='Edit Protocol';\r\n            this.apiService.doGet( Consts.QUERY_EDIT_PROTOCOL, 'protocolId='+this.protocolId ).subscribe(\r\n                data => {\r\n                    this.data = data;\r\n                },\r\n                errors=> {\r\n                    this.errors=errors;\r\n                } );\r\n        }\r\n        else {\r\n            this.toolHeadingName='Create Protocol';\r\n            this.data={\r\n                \"uriExternal\":false,\r\n                \"type\":\"\",\r\n                \"name\":\"\",\r\n                \"abbreviation\":\"\",\r\n                \"version\":\"\",\r\n                \"fileTitle\":\"\",\r\n                \"fileDescription\":\"\"\r\n            }\r\n        }\r\n        // Get list of Protocol types for dropdown\r\n        this.apiService.doGet( Consts.QUERY_PROTOCOL_SETUP, '' ).subscribe(\r\n            data => {\r\n                this.errors={};\r\n                this.setupData = data;\r\n                // this.defaultProtocolType = this.protocolTypes[0]; // SET default - This doesn't work @CHECKME  I had to hard code the default\r\n            },\r\n            errors=> {\r\n                this.errors=errors;\r\n            } );\r\n\r\n    }\r\n\r\n    onReset(){\r\n        this.init();\r\n    }\r\n\r\n\r\n    async onSubmit(){\r\n        // ////////////////////////////////////////////////////////\r\n        // Check for dups\r\n        if (!this.protocolId) {\r\n            this.haveDupStatus = false;\r\n            console.log('duplicate check?')\r\n            this.duplicateCheck();\r\n            // Wait until we know if it already exists\r\n            while( !this.haveDupStatus ){\r\n                await this.utilService.sleep( Consts.waitTime );\r\n            }\r\n            if( this.isDup ){\r\n                if (confirm(\"A database record with the same protocol type and protocol name already exists. Load it and update?\")) {\r\n                    this.router.navigate(['home/protocols/edit-protocol',this.existingData['id']]);\r\n                }\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        // ////////////////////////////////////////////////////////\r\n        // Do we need to send a file?\r\n        // Send the file\r\n        if( !this.data.uriExternal ){\r\n            if (this.fileToUpload) {\r\n            let uploadUrl = this.httpClient.post(Consts.QUERY_UPLOAD_FILE, this.fileToUpload);\r\n            uploadUrl.subscribe(data=> {\r\n                    this.errors={};\r\n                    this.data.fileId=\"0\";\r\n                    this.data.uri=data['fileName'];\r\n                    this.submitProtocol();\r\n            },\r\n            error=> {\r\n\r\n            })\r\n            }\r\n            else {\r\n                // we dont have a file //\r\n                this.submitProtocol();\r\n\r\n            }\r\n\r\n        } // END  Send the file\r\n\r\n          // Send an external URI\r\n        else{\r\n            let formData = this.buildExternalUriForm();\r\n            this.data.uriExternal=true;\r\n            this.submitProtocol();\r\n        }\r\n    };\r\n\r\n\r\n\r\n    ngAfterViewInit(): void{\r\n        //  this.defaultProtocolType = this.protocolTypes[0]; // SET default - This doesn't work @CHECKME  I had to hard code the default\r\n    };\r\n\r\n    onEnterFileUrl(){\r\n        this.data.uriExternal = true;\r\n    };\r\n\r\n    onUpload(){\r\n        this.data.uriExternal = false;\r\n    };\r\n\r\n    saveAccess() {\r\n        this.data['theAccess']=this.theAccess;\r\n        let url=this.apiService.doPost(Consts.QUERY_PROTOCOL_SAVE_ACCESS,this.data);\r\n        url.subscribe(data=> {\r\n            this.data=data;\r\n            this.errors={};\r\n            if (this.fileToUpload) {\r\n                this.onSubmit();\r\n            }\r\n            else {\r\n                if (this.currentRoute=='protocol-create') {\r\n                    this.router.navigate(['home/protocols/edit-protocol',data['id'],'success'])\r\n                }\r\n            };\r\n        },\r\n        error=> {\r\n            this.errors=error;\r\n        });\r\n        this.accessIndex=null;\r\n    }\r\n\r\n    submitProtocol() {\r\n        this.apiService.doPost( Consts.QUERY_CREATE_PROTOCOL, this.data ).subscribe(\r\n            data => {\r\n                this.errors={};\r\n                this.data.theAccess=this.theAccess;\r\n                this.externalUrl = decodeURIComponent( this.externalUrl ); // Make it look right in the UI\r\n                let protocolId=data.replaceAll('\"','').replace('[','').replace(']','').split(',')[1];\r\n                if (this.currentRoute=='protocol-create') {\r\n                    this.router.navigate(['home/protocols/edit-protocol',protocolId,'success'])\r\n                }\r\n                else {\r\n                    this.message='Protocol Successfully Updated';\r\n                }\r\n            },\r\n            err => {\r\n                this.errors=err;\r\n                this.externalUrl = decodeURIComponent( this.externalUrl ); // Make it look right in the UI\r\n            }\r\n        );\r\n    }\r\n\r\n    getProtocol(event) {\r\n        let url = this.apiService.doGet(Consts.QUERY_GET_PROTOCOL,'protocolType='+this.data.type+'&protocolName='+this.data.name+'&protocolVersion='+this.data.version);\r\n        url.subscribe(data=> {\r\n            if (confirm(\"A database record with the same protocol type and protocol name already exists. Load it and update?\")) {\r\n                this.router.navigate(['home/protocols/edit-protocol',data['id']])\r\n            }\r\n        })\r\n    }\r\n\r\n    submitForReview() {\r\n        console.log(this.data)\r\n        let url = this.apiService.doPost(Consts.QUERY_PROTOCOL_SUBMIT_REVIEW,{dataId:this.data.id,dataName:this.data.name,dataType:\"protocol\"},'text');\r\n        url.subscribe(data=> {\r\n            this.submitReviewButton=false;\r\n        })\r\n    }\r\n\r\n}\r\n","<canano-main-display-heading\r\n    [helpUrl]=\"'https://wiki.nci.nih.gov/display/caNanoLab/Managing+Protocols+in+caNanoLab#ManagingProtocolsincaNanoLab-SubmitProtocol'\"\r\n    [toolHeadingName]=\"toolHeadingName\"\r\n>\r\n</canano-main-display-heading>\r\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\r\n    <div class=\"error\" *ngIf=\"errors['error']\">\r\n        {{errors['error']}}\r\n    </div>\r\n\r\n    <div class=\"error\" *ngIf=\"message\">\r\n        {{message}}\r\n    </div>\r\n    <div class=\"mainBorder\">\r\n    <form name=\"searchForm\">\r\n        <table class=\"dataMain\">\r\n            <!-- Protocol Type -->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"protocolType\">\r\n                        Protocol Type*\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <select id=\"protocolType\" [(ngModel)]=\"data.type\" name=\"type\">\r\n                        <option [ngValue]=\"''\" [selected]=\"true\">--Select--</option>\r\n                        <option *ngFor=\"let type of setupData.protocolTypes\" value=\"{{type}}\">{{type}}</option>\r\n                    </select>\r\n                </td>\r\n            </tr>\r\n            <!-- -----  END Protocol Type  ----- -->\r\n            <!-- -----  Protocol Name  ----- -->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"protocolName\">\r\n                        Protocol Name<sup><b>*</b></sup>\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <input (focusout)=\"getProtocol($event)\" type=\"text\" name=\"name\" id=\"protocolName\" [(ngModel)]=\"data.name\">\r\n                </td>\r\n            </tr>\r\n            <!--  -----  END Protocol Name  ----- -->\r\n            <!--  -----  Protocol Abbreviation  ----- -->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"abbreviation\">\r\n                        <div>Protocol</div>\r\n                        <div>Abbreviation</div>\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <input id=\"abbreviation\" name=\"abbreviation\" type=\"text\" [(ngModel)]=\"data.abbreviation\">\r\n                </td>\r\n            </tr>\r\n            <!-- END Protocol Abbreviation -->\r\n            <!-- Protocol Version-->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"protocolVersion\">\r\n                        Protocol Version\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <input id=\"protocolVersion\" name=\"version\" type=\"text\" [(ngModel)]=\"data.version\">\r\n                </td>\r\n            </tr>\r\n            <!--            END Protocol Version-->\r\n            <!--            Protocol File-->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"protocolFile\">\r\n                        Protocol File\r\n                    </label>\r\n                </td>\r\n                <!-- Radio buttons for \"Upload\"/\"Enter File URL\" -->\r\n                <td>\r\n                    <!-- Radio button for Upload -->\r\n                    <input name=\"create_protocol_file_radio\" id=\"create_protocol_file_radio0\" type=\"radio\" [value]=\"false\" [checked]=\"!data.uriExternal\" (click)=\"onUpload()\" [(ngModel)]=\"data.uriExternal\">\r\n                    <label for=\"create_protocol_file_radio0\" class=\"right\">\r\n                        Upload\r\n                    </label>\r\n                    <!-- END Radio button for Upload -->\r\n                    <!-- Radio button for File URL -->\r\n                    <input name=\"create_protocol_file_radio\" id=\"create_protocol_file_radio1\" type=\"radio\" [value]=\"true\" [checked]=\"data.uriExternal\" (click)=\"onEnterFileUrl()\" [(ngModel)]=\"data.uriExternal\">\r\n                    <label for=\"create_protocol_file_radio1\" class=\"right\">\r\n                        Enter File URL\r\n                    </label>\r\n                    <!-- END Radio button for File URL -->\r\n                    <!-- END Radio buttons for \"Upload\"/\"Enter File URL\" -->\r\n                    <!-- File browser button -->\r\n                    <br />\r\n                    <input [ngClass]=\"{'hide': data.uriExternal}\" (change)=\"uploadFile($event)\" type=\"file\">\r\n                    <div *ngIf=\"data.uri\">\r\n                        <a [href]=\"downloadUrl+'?fileId='+data.fileId\">\r\n                            {{data.uri}}\r\n                        </a>\r\n                    </div>\r\n                    <!-- END File browser button -->\r\n                    <!-- File URL text input -->\r\n                    <input [ngClass]=\"{'hide': ! data.uriExternal}\" placeholder=\"File URL\" type=\"text\" id=\"externalUrl\" name=\"externalUrl\" [(ngModel)]=\"data.externalUrl\">\r\n                    <span *ngIf=\"data.uriExternal\"> [<canano-disclaimer></canano-disclaimer>]</span>\r\n\r\n                    <!-- File URL text input -->\r\n                </td>\r\n            </tr>\r\n            <!-- Protocol File Title -->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"fileTitle\">\r\n                        File Title\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <input name=\"fileTitle\" id=\"fileTitle\" type=\"text\" [(ngModel)]=\"data.fileTitle\">\r\n                </td>\r\n            </tr>\r\n            <!-- END Protocol File Title -->\r\n            <!--  Description  -->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"description\">\r\n                        Description\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <textarea name=\"fileDescription\" id=\"description\" cols=\"60\" rows=\"3\" [(ngModel)]=\"data.fileDescription\">\r\n                    </textarea>\r\n                </td>\r\n            </tr>\r\n            <!--  END Description  -->\r\n            <tr>\r\n                <td class=\"label\">\r\n                    <label for=\"accessToProtocol\">\r\n                        Access to the Protocol\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <button (click)=\"addAccess()\" [disabled]=\"data.type==''||data.name==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">\r\n                        Add\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            <ng-container *ngIf=\"data['groupAccesses']\">\r\n                <tr *ngIf=\"data.groupAccesses.length\">\r\n                    <td></td>\r\n                    <td>\r\n                        <table class=\"dataTable\">\r\n                            <tr>\r\n                                <th>Group Name</th>\r\n                                <th>Access</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            <tr *ngFor=\"let group of data.groupAccesses; let groupIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\r\n                                <td>{{group.recipientDisplayName}}</td>\r\n                                <td>{{group.roleDisplayName}}</td>\r\n                                <td>\r\n                                    <button *ngIf=\"group.recipient != 'ROLE_CURATOR'\" (click)=\"editAccess(groupIndex,group)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"data.userAccesses.length\">\r\n                    <td></td>\r\n                    <td>\r\n                        <table class=\"dataTable\">\r\n                            <tr>\r\n                                <th>User Login Name\t</th>\r\n                                <th>Access</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            <tr *ngFor=\"let user of data.userAccesses; let userIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\r\n                                <td>{{user.recipientDisplayName}}</td>\r\n                                <td>{{user.roleDisplayName}}</td>\r\n                                <td>\r\n                                    <button (click)=\"editAccess(userIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n            <tr *ngIf=\"accessIndex!=null\">\r\n                <td></td>\r\n                <td>\r\n                    <div class=\"mainBorder\">\r\n                        <table class=\"authorForm\">\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"accessType\">\r\n                                        Access By*\r\n                                    </label>\r\n                                </td>\r\n                                <td class=\"field\" colspan=\"2\">\r\n                                    <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.group\" id=\"accessType.group\" [value]=\"'group'\" [(ngModel)]=\"theAccess['accessType']\">\r\n                                    <label for=\"accessType.group\" class=\"right\">\r\n                                        Collaboration Group\r\n                                    </label>\r\n                                    &nbsp;\r\n                                    <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.user\" id=\"accessType.user\" [value]=\"'user'\" [(ngModel)]=\"theAccess['accessType']\">\r\n                                    <label for=\"accessType.user\" class=\"right\">\r\n                                        User\r\n                                    </label>\r\n                                    &nbsp;\r\n                                    <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.role\" id=\"accessType.role\" [value]=\"'role'\" [(ngModel)]=\"theAccess['accessType']\">\r\n                                    <label for=\"accessType.role\" class=\"right\">\r\n                                        Public\r\n                                    </label>\r\n                                </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"theAccess.accessType&&theAccess.accessType!='role'\">\r\n                                <td class=\"label\">\r\n                                    <label for=\"access.recipient\">\r\n                                        <span *ngIf=\"theAccess.accessType=='group'\">\r\n                                            Collaboration Group Name*\r\n                                        </span>\r\n                                        <span *ngIf=\"theAccess.accessType=='user'\">\r\n                                            User Login Name*\r\n                                        </span>\r\n                                    </label>\r\n                                </td>\r\n                                <td class=\"field\">\r\n                                    <button (click)=\"getRecipientList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search</button>\r\n                                    <ng-container *ngIf=\"recipientList\">\r\n                                        &nbsp;&nbsp;\r\n                                        <select name=\"access.recipient\" [(ngModel)]=\"theAccess.recipient\">\r\n                                            <option [selected]=\"theAccess.recipient===''\" [ngValue]=\"''\">--select</option>\r\n                                            <ng-container *ngIf=\"theAccess.accessType=='group'\">\r\n                                                <option *ngFor=\"let group of recipientList\">\r\n                                                    {{group}}\r\n                                                </option>\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"theAccess.accessType=='user'\">\r\n                                                <option *ngFor=\"let user of recipientList|keyvalue\" [ngValue]=\"user.key\">\r\n                                                    {{user.value}}\r\n                                                </option>\r\n                                            </ng-container>\r\n\r\n                                        </select>\r\n                                    </ng-container>\r\n\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"label\">\r\n                                    <label for=\"access.roleName\">\r\n                                        Access to the Protocol*\r\n                                    </label>\r\n                                </td>\r\n                                <td class=\"field\">\r\n                                    <select [disabled]=\"theAccess.accessType=='role'\" name=\"access.roleName\" [(ngModel)]=\"theAccess.roleName\">\r\n                                        <option [selected]=\"theAccess.roleName===''\" [ngValue]=\"''\">--Select--</option>\r\n                                        <option *ngFor=\"let role of setupData.csmRoleNames | keyvalue\" [ngValue]=\"role.key\" [selected]=\"role.key==theAccess.roleName\">\r\n                                            {{role.value}}\r\n                                        </option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <button (click)=\"deleteAccess()\" *ngIf=\"accessIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\r\n                                </td>\r\n                                <td>\r\n                                    <button (click)=\"saveAccess()\" [disabled]=\"theAccess.accessType==''||theAccess.roleName==''||theAccess.recipient==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\r\n                                    <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n        <div id=\"buttons\">\r\n            <table class=\"dataMain submit\">\r\n                <tr>\r\n                    <td>\r\n                        <button *ngIf=\"showDeleteButton()\"\r\n                            class=\"btn btn-danger m-1\"\r\n                            (click)=\"delete()\"\r\n                        >Delete</button>\r\n                    </td>\r\n                    <td>\r\n                        <button (click)=\"onReset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\r\n                        <button [disabled]=\"data.type==''||data.name==''\" (click)=\"onSubmit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\r\n                        <button *ngIf=\"data.review&&submitReviewButton\" [disabled]=\"data.type==''||data.name==''\" (click)=\"submitForReview()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit For Review</button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n    </form>\r\n</div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProtocolCreateComponent } from './protocol-create.component';\r\nimport { ProtocolCreateRoutingModule } from './protocol-create-routing.module';\r\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DisclaimerModule } from 'src/app/cananolab-client/common/components/disclaimer/disclaimer.module';\r\n\r\n@NgModule({\r\n    declarations: [ProtocolCreateComponent],\r\n    imports: [\r\n      CommonModule,\r\n      ProtocolCreateRoutingModule,\r\n      SharedModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      DisclaimerModule\r\n    ]\r\n  })\r\n  export class ProtocolCreateModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProtocolCreateComponent } from './protocol-create.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ProtocolCreateComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProtocolCreateRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}