{"version":3,"sources":["./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.component.ts","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.component.html","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create.module.ts","./src/app/cananolab-client/main-display/protocols/protocol-create/protocol-create-routing.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-protocols-protocol-create-protocol-create-module.js","sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Consts } from '../../../../constants';\nimport { ApiService } from '../../../common/services/api.service';\nimport { UtilService } from '../../../common/services/util.service';\nimport { Router, Params, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component( {\n    selector: 'canano-protocol-create',\n    templateUrl: './protocol-create.component.html',\n    styleUrls: ['./protocol-create.component.scss']\n} )\nexport class ProtocolCreateComponent implements OnInit, AfterViewInit{\n    accessIndex;\n    currentRoute='protocol-create';\n    data;\n    defaultProtocolType = 'radio labeling'; // Find a way to set this in time to protocolTypes[0]\n    downloadUrl=Consts.QUERY_DOWNLOAD_FILE;\n    errors;\n    existingData;\n    externalUrl;\n    fileToUpload;\n    haveDupStatus = false;\n    toolHeadingName='Create Protocol';\n    isDup = false;\n    message;\n    protocolId;\n    recipientList;\n    setupData={};\n    theAccess={};\n    submitReviewButton=true;\n    constructor(private httpClient:HttpClient, private route:ActivatedRoute,private router:Router,private apiService: ApiService, private utilService: UtilService,\n                 ){\n    }\n\n    ngOnInit(): void{\n        this.route.params.subscribe(\n            ( params: Params ) => {\n                this.protocolId=params['protocolId'];\n                if (params['message']) {\n                    if (params['message']=='deleted') {\n                        this.message='Protocol Deleted Successfully'\n                    }\n                    else {\n                        this.message='Protocol Created Successfully'\n                    }\n                }\n                this.init();\n            });\n\n        this.errors={};\n    }\n\n    addAccess() {\n        this.accessIndex=-1;\n        this.recipientList=null;\n        this.theAccess={\n                \"accessType\":\"\",\n                \"recipient\":\"\",\n                \"roleName\":\"\",\n                \"recipientDisplayName\":\"\"\n            }\n    }\n\n\n    buildExternalUriForm(): FormData{\n        let formData = new FormData();\n        formData.append( 'uriExternal', 'true' );\n        formData.append( 'review', 'false' );\n        formData.append( 'isPublic', 'false' );\n        formData.append( 'type', this.data.type );\n        return formData;\n    };\n\n    cancelAccess() {\n        this.accessIndex=null;\n    }\n\n    uploadFile(event) {\n        this.fileToUpload = new FormData();\n        const tFile = event.target.files.item(0);\n        this.fileToUpload.append('myFile', tFile, tFile.name);\n        this.fileToUpload.append( 'uriExternal', 'false' );\n        this.fileToUpload.append( 'review', 'false' );\n        this.fileToUpload.append( 'isPublic', 'false' );\n        this.fileToUpload.append( 'type', this.data.type );\n        console.log(this.fileToUpload)\n    }\n\n    delete() {\n        if (confirm(\"Are you sure you wish to delete this protocol?\")) {\n            this.apiService.doPost(Consts.QUERY_DELETE_PROTOCOL,this.data).subscribe(data=> {\n                this.router.navigate(['home/protocols/protocol-create/deleted'])\n            },\n            errors=> {\n                this.errors=errors;\n            })\n        }\n    }\n\n    showDeleteButton() {\n        if (this.router.url.includes('edit-protocol')) {\n            return true\n        }\n        return false\n    }\n\n    changeAccessType(event) {\n        this.recipientList=null;\n        this.theAccess['recipient']='';\n        this.theAccess['roleName']='';\n        if (event=='role') {\n            this.theAccess['recipientDisplayName']='Public';\n            this.theAccess['recipient']='ROLE_ANONYMOUS';\n            this.theAccess['roleName']=\"R\";\n        };\n    };\n\n    deleteAccess() {\n        if (confirm(\"Are you sure you wish to delete this \" + this.theAccess['accessType'] + \"?\")) {\n            this.data['theAccess']=this.theAccess;\n            let url = this.apiService.doPost(Consts.QUERY_PROTOCOL_DELETE_ACCESS,this.data);\n            url.subscribe(data=>{\n                this.data=data;\n                this.accessIndex=null;\n                this.errors={};\n            },\n            error=> {\n                this.errors=error;\n            })\n        }\n\n    }\n\n    duplicateCheck(){\n        let formValues = this.data;\n        let dupQuery = '';\n        if( formValues['version'] === undefined ){\n            dupQuery = 'protocolType=' + formValues['type'] + '&protocolName=' + formValues['name'];\n        }else{\n            dupQuery = 'protocolType=' + formValues['type'] + '&protocolName=' + formValues['name'] + '&protocolVersion=' + formValues['version'];\n        }\n        this.apiService.doGet( Consts.QUERY_GET_PROTOCOL, dupQuery ).subscribe(\n            // It already exists\n            data => {\n                this.existingData=data;\n                this.errors={};\n                this.isDup = true;\n                this.haveDupStatus = true;\n                return true;\n            },\n\n            // It does NOT already exist\n            ( err ) => {\n                this.isDup = false;\n                this.haveDupStatus = true;\n                return false;\n            } );\n\n    };\n\n    editAccess(index,access) {\n        console.log(index,access)\n        this.accessIndex=index;\n        this.recipientList=null;\n        this.theAccess=JSON.parse(JSON.stringify(access));\n    };\n\n    getRecipientList() {\n        var url;\n        if (this.theAccess['accessType']=='group') {\n            url=this.apiService.doGet(Consts.QUERY_GET_COLLABORATION_GROUPS,'searchStr=');\n        }\n        if (this.theAccess['accessType']=='user') {\n            url=this.apiService.doGet(Consts.QUERY_GET_USERS,'searchStr=');\n        }\n        url.subscribe(data=> {\n            this.recipientList=data;\n            this.errors={};\n        },\n        error=> {\n            this.errors=error;\n\n        })\n    };\n\n    init(){\n        if (this.protocolId) {\n            this.currentRoute='edit-protocol';\n            this.toolHeadingName='Edit Protocol';\n            this.apiService.doGet( Consts.QUERY_EDIT_PROTOCOL, 'protocolId='+this.protocolId ).subscribe(\n                data => {\n                    this.data = data;\n                },\n                errors=> {\n                    this.errors=errors;\n                } );\n        }\n        else {\n            this.toolHeadingName='Create Protocol';\n            this.data={\n                \"uriExternal\":false,\n                \"type\":\"\",\n                \"name\":\"\",\n                \"abbreviation\":\"\",\n                \"version\":\"\",\n                \"fileTitle\":\"\",\n                \"fileDescription\":\"\"\n            }\n        }\n        // Get list of Protocol types for dropdown\n        this.apiService.doGet( Consts.QUERY_PROTOCOL_SETUP, '' ).subscribe(\n            data => {\n                this.errors={};\n                this.setupData = data;\n                // this.defaultProtocolType = this.protocolTypes[0]; // SET default - This doesn't work @CHECKME  I had to hard code the default\n            },\n            errors=> {\n                this.errors=errors;\n            } );\n\n    }\n\n    onReset(){\n        this.init();\n    }\n\n\n    async onSubmit(){\n        // ////////////////////////////////////////////////////////\n        // Check for dups\n        if (!this.protocolId) {\n            this.haveDupStatus = false;\n            console.log('duplicate check?')\n            this.duplicateCheck();\n            // Wait until we know if it already exists\n            while( !this.haveDupStatus ){\n                await this.utilService.sleep( Consts.waitTime );\n            }\n            if( this.isDup ){\n                if (confirm(\"A database record with the same protocol type and protocol name already exists. Load it and update?\")) {\n                    this.router.navigate(['home/protocols/edit-protocol',this.existingData['id']]);\n                }\n                return;\n            }\n\n        }\n\n\n        // ////////////////////////////////////////////////////////\n        // Do we need to send a file?\n        // Send the file\n        if( !this.data.uriExternal ){\n            if (this.fileToUpload) {\n            let uploadUrl = this.httpClient.post(Consts.QUERY_UPLOAD_FILE, this.fileToUpload);\n            uploadUrl.subscribe(data=> {\n                    this.errors={};\n                    this.data.fileId=\"0\";\n                    this.data.uri=data['fileName'];\n                    this.submitProtocol();\n            },\n            error=> {\n\n            })\n            }\n            else {\n                // we dont have a file //\n                this.submitProtocol();\n\n            }\n\n        } // END  Send the file\n\n          // Send an external URI\n        else{\n            let formData = this.buildExternalUriForm();\n            this.data.uriExternal=true;\n            this.submitProtocol();\n        }\n    };\n\n\n\n    ngAfterViewInit(): void{\n        //  this.defaultProtocolType = this.protocolTypes[0]; // SET default - This doesn't work @CHECKME  I had to hard code the default\n    };\n\n    onEnterFileUrl(){\n        this.data.uriExternal = true;\n    };\n\n    onUpload(){\n        this.data.uriExternal = false;\n    };\n\n    saveAccess() {\n        this.data['theAccess']=this.theAccess;\n        let url=this.apiService.doPost(Consts.QUERY_PROTOCOL_SAVE_ACCESS,this.data);\n        url.subscribe(data=> {\n            this.data=data;\n            this.errors={};\n            if (this.fileToUpload) {\n                this.onSubmit();\n            }\n            else {\n                if (this.currentRoute=='protocol-create') {\n                    this.router.navigate(['home/protocols/edit-protocol',data['id'],'success'])\n                }\n            };\n        },\n        error=> {\n            this.errors=error;\n        });\n        this.accessIndex=null;\n    }\n\n    submitProtocol() {\n        this.apiService.doPost( Consts.QUERY_CREATE_PROTOCOL, this.data ).subscribe(\n            data => {\n                this.errors={};\n                this.data.theAccess=this.theAccess;\n                this.externalUrl = decodeURIComponent( this.externalUrl ); // Make it look right in the UI\n                let protocolId=data.replaceAll('\"','').replace('[','').replace(']','').split(',')[1];\n                if (this.currentRoute=='protocol-create') {\n                    this.router.navigate(['home/protocols/edit-protocol',protocolId,'success'])\n                }\n                else {\n                    this.message='Protocol Successfully Updated';\n                }\n            },\n            err => {\n                this.errors=err;\n                this.externalUrl = decodeURIComponent( this.externalUrl ); // Make it look right in the UI\n            }\n        );\n    }\n\n    getProtocol(event) {\n        let url = this.apiService.doGet(Consts.QUERY_GET_PROTOCOL,'protocolType='+this.data.type+'&protocolName='+this.data.name+'&protocolVersion='+this.data.version);\n        url.subscribe(data=> {\n            if (confirm(\"A database record with the same protocol type and protocol name already exists. Load it and update?\")) {\n                this.router.navigate(['home/protocols/edit-protocol',data['id']])\n            }\n        })\n    }\n\n    submitForReview() {\n        console.log(this.data)\n        let url = this.apiService.doPost(Consts.QUERY_PROTOCOL_SUBMIT_REVIEW,{dataId:this.data.id,dataName:this.data.name,dataType:\"protocol\"},'text');\n        url.subscribe(data=> {\n            this.submitReviewButton=false;\n        })\n    }\n\n}\n","<canano-main-display-heading\n    [helpUrl]=\"'https://wiki.nci.nih.gov/display/caNanoLab/Managing+Protocols+in+caNanoLab#ManagingProtocolsincaNanoLab-SubmitProtocol'\"\n    [toolHeadingName]=\"toolHeadingName\"\n>\n</canano-main-display-heading>\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n\n    <div class=\"error\" *ngIf=\"message\">\n        {{message}}\n    </div>\n    <div class=\"mainBorder\">\n    <form name=\"searchForm\">\n        <table class=\"dataMain\">\n            <!-- Protocol Type -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolType\">\n                        Protocol Type*\n                    </label>\n                </td>\n                <td>\n                    <select id=\"protocolType\" [(ngModel)]=\"data.type\" name=\"type\">\n                        <option [ngValue]=\"''\" [selected]=\"true\">--Select--</option>\n                        <option *ngFor=\"let type of setupData.protocolTypes\" value=\"{{type}}\">{{type}}</option>\n                    </select>\n                </td>\n            </tr>\n            <!-- -----  END Protocol Type  ----- -->\n            <!-- -----  Protocol Name  ----- -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolName\">\n                        Protocol Name<sup><b>*</b></sup>\n                    </label>\n                </td>\n                <td>\n                    <input (focusout)=\"getProtocol($event)\" type=\"text\" name=\"name\" id=\"protocolName\" [(ngModel)]=\"data.name\">\n                </td>\n            </tr>\n            <!--  -----  END Protocol Name  ----- -->\n            <!--  -----  Protocol Abbreviation  ----- -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"abbreviation\">\n                        <div>Protocol</div>\n                        <div>Abbreviation</div>\n                    </label>\n                </td>\n                <td>\n                    <input id=\"abbreviation\" name=\"abbreviation\" type=\"text\" [(ngModel)]=\"data.abbreviation\">\n                </td>\n            </tr>\n            <!-- END Protocol Abbreviation -->\n            <!-- Protocol Version-->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolVersion\">\n                        Protocol Version\n                    </label>\n                </td>\n                <td>\n                    <input id=\"protocolVersion\" name=\"version\" type=\"text\" [(ngModel)]=\"data.version\">\n                </td>\n            </tr>\n            <!--            END Protocol Version-->\n            <!--            Protocol File-->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"protocolFile\">\n                        Protocol File\n                    </label>\n                </td>\n                <!-- Radio buttons for \"Upload\"/\"Enter File URL\" -->\n                <td>\n                    <!-- Radio button for Upload -->\n                    <input name=\"create_protocol_file_radio\" id=\"create_protocol_file_radio0\" type=\"radio\" [value]=\"false\" [checked]=\"!data.uriExternal\" (click)=\"onUpload()\" [(ngModel)]=\"data.uriExternal\">\n                    <label for=\"create_protocol_file_radio0\" class=\"right\">\n                        Upload\n                    </label>\n                    <!-- END Radio button for Upload -->\n                    <!-- Radio button for File URL -->\n                    <input name=\"create_protocol_file_radio\" id=\"create_protocol_file_radio1\" type=\"radio\" [value]=\"true\" [checked]=\"data.uriExternal\" (click)=\"onEnterFileUrl()\" [(ngModel)]=\"data.uriExternal\">\n                    <label for=\"create_protocol_file_radio1\" class=\"right\">\n                        Enter File URL\n                    </label>\n                    <!-- END Radio button for File URL -->\n                    <!-- END Radio buttons for \"Upload\"/\"Enter File URL\" -->\n                    <!-- File browser button -->\n                    <br />\n                    <input [ngClass]=\"{'hide': data.uriExternal}\" (change)=\"uploadFile($event)\" type=\"file\">\n                    <div *ngIf=\"data.uri\">\n                        <a [href]=\"downloadUrl+'?fileId='+data.fileId\">\n                            {{data.uri}}\n                        </a>\n                    </div>\n                    <!-- END File browser button -->\n                    <!-- File URL text input -->\n                    <input [ngClass]=\"{'hide': ! data.uriExternal}\" placeholder=\"File URL\" type=\"text\" id=\"externalUrl\" name=\"externalUrl\" [(ngModel)]=\"data.externalUrl\">\n                    <span *ngIf=\"data.uriExternal\"> [<canano-disclaimer></canano-disclaimer>]</span>\n\n                    <!-- File URL text input -->\n                </td>\n            </tr>\n            <!-- Protocol File Title -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"fileTitle\">\n                        File Title\n                    </label>\n                </td>\n                <td>\n                    <input name=\"fileTitle\" id=\"fileTitle\" type=\"text\" [(ngModel)]=\"data.fileTitle\">\n                </td>\n            </tr>\n            <!-- END Protocol File Title -->\n            <!--  Description  -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"description\">\n                        Description\n                    </label>\n                </td>\n                <td>\n                    <textarea name=\"fileDescription\" id=\"description\" cols=\"60\" rows=\"3\" [(ngModel)]=\"data.fileDescription\">\n                    </textarea>\n                </td>\n            </tr>\n            <!--  END Description  -->\n            <tr>\n                <td class=\"label\">\n                    <label for=\"accessToProtocol\">\n                        Access to the Protocol\n                    </label>\n                </td>\n                <td>\n                    <button (click)=\"addAccess()\" [disabled]=\"data.type==''||data.name==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">\n                        Add\n                    </button>\n                </td>\n            </tr>\n            <ng-container *ngIf=\"data['groupAccesses']\">\n                <tr *ngIf=\"data.groupAccesses.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable\">\n                            <tr>\n                                <th>Group Name</th>\n                                <th>Access</th>\n                                <th></th>\n                            </tr>\n                            <tr *ngFor=\"let group of data.groupAccesses; let groupIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                <td>{{group.recipientDisplayName}}</td>\n                                <td>{{group.roleDisplayName}}</td>\n                                <td>\n                                    <button *ngIf=\"group.recipient != 'ROLE_CURATOR'\" (click)=\"editAccess(groupIndex,group)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.userAccesses.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable\">\n                            <tr>\n                                <th>User Login Name\t</th>\n                                <th>Access</th>\n                                <th></th>\n                            </tr>\n                            <tr *ngFor=\"let user of data.userAccesses; let userIndex=index; let odd=odd\" [ngClass]=\"{'rowOdd':odd}\">\n                                <td>{{user.recipientDisplayName}}</td>\n                                <td>{{user.roleDisplayName}}</td>\n                                <td>\n                                    <button (click)=\"editAccess(userIndex,user)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n            </ng-container>\n            <tr *ngIf=\"accessIndex!=null\">\n                <td></td>\n                <td>\n                    <div class=\"mainBorder\">\n                        <table class=\"authorForm\">\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"accessType\">\n                                        Access By*\n                                    </label>\n                                </td>\n                                <td class=\"field\" colspan=\"2\">\n                                    <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.group\" id=\"accessType.group\" [value]=\"'group'\" [(ngModel)]=\"theAccess['accessType']\">\n                                    <label for=\"accessType.group\" class=\"right\">\n                                        Collaboration Group\n                                    </label>\n                                    &nbsp;\n                                    <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.user\" id=\"accessType.user\" [value]=\"'user'\" [(ngModel)]=\"theAccess['accessType']\">\n                                    <label for=\"accessType.user\" class=\"right\">\n                                        User\n                                    </label>\n                                    &nbsp;\n                                    <input (ngModelChange)=\"changeAccessType($event)\" type=\"radio\" name=\"accessType.role\" id=\"accessType.role\" [value]=\"'role'\" [(ngModel)]=\"theAccess['accessType']\">\n                                    <label for=\"accessType.role\" class=\"right\">\n                                        Public\n                                    </label>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"theAccess.accessType&&theAccess.accessType!='role'\">\n                                <td class=\"label\">\n                                    <label for=\"access.recipient\">\n                                        <span *ngIf=\"theAccess.accessType=='group'\">\n                                            Collaboration Group Name*\n                                        </span>\n                                        <span *ngIf=\"theAccess.accessType=='user'\">\n                                            User Login Name*\n                                        </span>\n                                    </label>\n                                </td>\n                                <td class=\"field\">\n                                    <button (click)=\"getRecipientList()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Search</button>\n                                    <ng-container *ngIf=\"recipientList\">\n                                        &nbsp;&nbsp;\n                                        <select name=\"access.recipient\" [(ngModel)]=\"theAccess.recipient\">\n                                            <option [selected]=\"theAccess.recipient===''\" [ngValue]=\"''\">--select</option>\n                                            <ng-container *ngIf=\"theAccess.accessType=='group'\">\n                                                <option *ngFor=\"let group of recipientList\">\n                                                    {{group}}\n                                                </option>\n                                            </ng-container>\n                                            <ng-container *ngIf=\"theAccess.accessType=='user'\">\n                                                <option *ngFor=\"let user of recipientList|keyvalue\" [ngValue]=\"user.key\">\n                                                    {{user.value}}\n                                                </option>\n                                            </ng-container>\n\n                                        </select>\n                                    </ng-container>\n\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    <label for=\"access.roleName\">\n                                        Access to the Protocol*\n                                    </label>\n                                </td>\n                                <td class=\"field\">\n                                    <select [disabled]=\"theAccess.accessType=='role'\" name=\"access.roleName\" [(ngModel)]=\"theAccess.roleName\">\n                                        <option [selected]=\"theAccess.roleName===''\" [ngValue]=\"''\">--Select--</option>\n                                        <option *ngFor=\"let role of setupData.csmRoleNames | keyvalue\" [ngValue]=\"role.key\" [selected]=\"role.key==theAccess.roleName\">\n                                            {{role.value}}\n                                        </option>\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <button (click)=\"deleteAccess()\" *ngIf=\"accessIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                </td>\n                                <td>\n                                    <button (click)=\"saveAccess()\" [disabled]=\"theAccess.accessType==''||theAccess.roleName==''||theAccess.recipient==''\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                    <button (click)=\"cancelAccess()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </td>\n            </tr>\n        </table>\n        <div id=\"buttons\">\n            <table class=\"dataMain submit\">\n                <tr>\n                    <td>\n                        <button *ngIf=\"showDeleteButton()\"\n                            class=\"btn btn-danger m-1\"\n                            (click)=\"delete()\"\n                        >Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"onReset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"data.type==''||data.name==''\" (click)=\"onSubmit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                        <button *ngIf=\"data.review&&submitReviewButton\" [disabled]=\"data.type==''||data.name==''\" (click)=\"submitForReview()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit For Review</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n    </form>\n</div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProtocolCreateComponent } from './protocol-create.component';\nimport { ProtocolCreateRoutingModule } from './protocol-create-routing.module';\nimport { SharedModule } from '../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DisclaimerModule } from 'src/app/cananolab-client/common/components/disclaimer/disclaimer.module';\n@NgModule({\n    declarations: [ProtocolCreateComponent],\n    imports: [\n      CommonModule,\n      ProtocolCreateRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      DisclaimerModule\n    ]\n  })\n  export class ProtocolCreateModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProtocolCreateComponent } from './protocol-create.component';\n\nconst routes: Routes = [{ path: '', component: ProtocolCreateComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProtocolCreateRoutingModule { }\n"],"sourceRoot":"webpack:///"}