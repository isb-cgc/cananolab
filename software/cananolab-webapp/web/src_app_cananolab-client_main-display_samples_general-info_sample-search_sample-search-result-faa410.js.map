{"version":3,"file":"src_app_cananolab-client_main-display_samples_general-info_sample-search_sample-search-result-faa410.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-results/sample-search-results.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleSearchResultsComponent } from './sample-search-results.component';\nconst routes: Routes = [{ path: '', component: SampleSearchResultsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleSearchResultsRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SampleSearchResultsService } from './sample-search-results.service';\nimport { Consts, ProtocolScreen, SortState } from '../../../../../../constants';\nimport { Properties } from '../../../../../../../assets/properties';\nimport { takeUntil, timeout } from 'rxjs/operators';\nimport { SearchResultsPagerService } from '../../../../../common/components/search-results-pager/search-results-pager.service';\nimport { Subject } from 'rxjs';\nimport { StatusDisplayService } from '../../../../../status-display/status-display.service';\nimport { ApiService } from '../../../../../common/services/api.service';\nimport { SampleAvailabilityDisplayService } from './sample-availability-display/sample-availability-display.service';\nimport { Router } from '@angular/router';\nimport { timeoutWith } from 'rxjs/operators'\nimport { throwError } from 'rxjs'\n\n@Component({\n    selector: 'canano-sample-search-results',\n    templateUrl: './sample-search-results.component.html',\n    styleUrls: ['./sample-search-results.component.scss'],\n})\nexport class SampleSearchResultsComponent implements OnInit, OnDestroy {\n    columnHeadings = [\n        { actions: 'Actions' },\n        { sampleName: 'Sample Name' },\n        { pointOfContact: 'Primary Point of Contact' },\n        { composition: 'Composition' },\n        { functions: 'Functions' },\n        { characterizations: 'Characterizations' },\n        { dataAvailability: 'Data Availability' },\n        { createdDate: 'Created' }\n    ];\n\n    maxPageLength = Properties.MAX_PAGE_LENGTH;\n    pageLength = Properties.DEFAULT_PAGE_LENGTH;\n    loading;\n    searchResults;\n    sampleIds = [];\n    helpUrl = Consts.HELP_URL_SAMPLE_SEARCH_RESULTS;\n    toolHeadingNameSearchSample = 'Sample Search Results';\n    pageCount = 10;\n    searchResultsCount = -1;\n    currentPage = 0;\n    searchResultsPageToDisplay;\n\n    sortingStates = [\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT,\n        SortState.NO_SORT\n    ];\n\n    sortState = SortState;\n    properties = Properties;\n    userName;\n\n    private ngUnsubscribe: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private sampleSearchResultsService: SampleSearchResultsService,\n        private searchResultsPagerService: SearchResultsPagerService,\n        private statusDisplayService: StatusDisplayService,\n        private apiService: ApiService,\n        private router: Router,\n        private sampleAvailabilityDisplayService: SampleAvailabilityDisplayService\n    ) {}\n\n    ngOnInit(): void {\n        setTimeout(()=> {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.searchResults = this.sampleSearchResultsService.getSearchResults();\n        this.searchResultsCount = this.searchResults.length;\n        this.sampleIds=this.sampleSearchResultsService.getSampleIds();\n        this.searchResultsPagerService.currentPageChangeEmitter\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe((data) => {\n                this.currentPage = data;\n                this.setupPage();\n            });\n\n        this.statusDisplayService.updateUserEmitter\n            .subscribe((data) => {\n                this.userName = data;\n            });\n\n        this.searchResultsCount = this.searchResults.length;\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.onPageLengthChange();\n    }\n\n    navigateToSampleEdit(sampleId) {\n        this.router.navigate(['home/samples/sample', sampleId]); // @FIXME  Don't hard code these\n    }\n\n    navigateToSampleView(sampleId, sampleName) {\n        this.router.navigate(['home/samples/view-sample', sampleId]); // @FIXME  Don't hard code these\n    }\n\n    addToFavorites(samp) {\n        console.log('addToFavorites samp: ', samp);\n        let favObj = { dataType: 'sample', loginName: this.userName}; // @FIXME User real user name\n        favObj['dataName'] = samp['sampleName'];\n        favObj['dataId'] = samp['sampleId'];\n        favObj['description'] = samp['nanoEntityDesc'];\n        favObj['editable'] = samp['editable'];\n        favObj['loginName']=Properties.current_user;\n\n        console.log('favObj:', favObj);\n\n        this.apiService.doPost(Consts.QUERY_ADD_FAVORITE, favObj).subscribe(\n            (data) => {\n                samp['addedToFavorites']=data;\n                console.log(samp)\n                // console.log('set Fave results: ', data);\n            },\n            (err) => {\n                console.log('ERROR QUERY_ADD_FAVORITE: ', err);\n            }\n        );\n    }\n\n    onAvailabilityClick(id) {\n        this.apiService\n            .doGet(Consts.QUERY_SAMPLE_VIEW_AVAILABILITY, 'sampleId=' + id)\n            .subscribe(\n                (data) => {\n                    this.sampleAvailabilityDisplayService.displayStuff(data);\n                },\n                (err) => {\n                    console.log('ERROR QUERY_SAMPLE_AVAILABILITY: ', err);\n                }\n            );\n    }\n\n\n    downloadReady(event) {\n        if (event==true) {\n            this.loading=null;\n        }\n        if (event==false) {\n            this.loading=true;\n        }\n    }\n\n    setupPage() {\n        this.searchResultsPageToDisplay = this.searchResults.slice(\n            this.pageLength * this.currentPage,\n            this.pageLength * (this.currentPage + 1)\n        );\n    }\n\n    onPageLengthChange() {\n        if (this.pageLength < 1) {\n            this.pageLength = 1;\n        }\n        if (this.pageLength > this.maxPageLength) {\n            this.pageLength = this.maxPageLength;\n        }\n\n        this.pageCount = Math.ceil(this.searchResultsCount / this.pageLength);\n        this.searchResultsPagerService.setPageCount(this.pageCount);\n        this.setupPage(); // Sets this page as the currently vied search results.\n    }\n\n    onSortClick(i, key) {\n        if (i) {\n            if (this.sortingStates[i]) {\n                // clicking on column that already is sorted on //\n                this.sortingStates[i] = this.sortingStates[i] == 1 ? 2 : 1;\n            } else {\n                // reset sorting states //\n                this.sortingStates.forEach((item, index) => {\n                    this.sortingStates[index] = 0;\n                });\n                this.sortingStates[i] = 1;\n            }\n            console.log(this.sortingStates)\n            if (this.sortingStates[i] == 1) {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) > this.getStringValue(b[key]) ? 1 : -1));\n            } else {\n                this.searchResults.sort((a, b) => (this.getStringValue(a[key]) < this.getStringValue(b[key]) ? 1 : -1));\n            }\n            this.setupPage();\n        }\n    }\n\n    getStringValue(val) {\n        if (val) {\n            return val.toString().toUpperCase()\n        }\n        return ''\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameSearchSample\"\n    [exportXML]=\"true\"\n    [exportJSON]=\"true\"\n    [sampleIds]=\"sampleIds\"\n    (downloadReady)=\"downloadReady($event)\"\n    [backUrl]=\"'home/samples/sample-search'\">\n</canano-main-display-heading>\n\n<canano-sample-availability-display></canano-sample-availability-display>\n\n<div class=\"mainSection\" *ngIf=\"searchResults\">\n    <canano-loader [loading]=\"loading\" [message]=\"'Exporting Data'\">\n\n    </canano-loader>\n    <div *ngIf=\"!searchResults.length\" class=\"mainBorder\">\n        No search results found.\n    </div>\n\n    <div *ngIf=\"searchResults.length\">\n    <span class=\"ml-2\">\n        {{searchResults.length}} Item{{(searchResults.length > 1 ? 's' : '')}} found, displaying\n        {{(currentPage * pageLength) + 1}}\n        -{{ (((currentPage * pageLength) + pageLength) > searchResults.length) ? searchResults.length : (currentPage *\n        pageLength) + pageLength }}\n    </span>\n\n    <span class=\"search-results-pager\">\n        <!-- Page length number setting  -->\n        <span class=\"ml-5\">\n            Show\n            <input class=\"number-spinner rows-per-page-spinner\" min=\"1\" max=\"{{maxPageLength}}\" type=\"number\"\n                [(ngModel)]=\"pageLength\" (change)=\"onPageLengthChange()\">\n            entries\n        </span>\n\n        <!-- Pager buttons -->\n        <canano-search-results-pager style=\"float: right;\" [totalCount]=searchResultsCount\n            [startingPageLength]=pageLength></canano-search-results-pager>\n    </span>\n\n    <table class=\"dataTable\">\n        <!-- -----  Header row  ----- -->\n        <tr>\n            <ng-container *ngFor=\"let col of columnHeadings; let i = index\">\n                <th *ngFor=\"let colKeyValue of col | keyvalue\" class=\"unselectable hand\"\n                    (click)=\"onSortClick(i, colKeyValue.key)\">\n                    <label for=\"sortClick\" class=\"hand\">\n                        {{ colKeyValue.value }}\n                        <span *ngIf=\"i > 0\" id=\"sortClick\" class=\"inline\">\n                            <span *ngIf=\"i > 0\" class=\"sortImages\" >\n                                <span *ngIf=\"sortingStates[i] === sortState.NO_SORT\">\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                    </svg>\n                                    <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                                        <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                    </svg>\n                                </span>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_UP\" width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-up-fill\" />\n                                </svg>\n                                <svg *ngIf=\"sortingStates[i] === sortState.SORT_DOWN\"  width=\"10\" height=\"10\" fill=\"currentColor\">\n                                    <use xlink:href=\"assets/images/bootstrap-icons.svg#caret-down-fill\" />\n                                </svg>\n                            </span>\n                        </span>\n                    </label>\n                    <!-- No sorting for \"Actions\" column -->\n\n                    <!-- END Add sorting icons -->\n                </th>\n            </ng-container>\n        </tr>\n        <!-- -----  END Header row  ----- -->\n\n\n        <tr *ngFor=\"let samp of searchResultsPageToDisplay; let even=even; let odd=odd; let i=index\"\n            class=\"search-results-tr\" [ngClass]=\"{\n                '': even,\n                'rowOdd': odd\n            }\">\n\n\n\n            <td class=\"search-results-td\">\n                <a *ngIf=\"properties.LOGGED_IN\" (click)=\"navigateToSampleEdit(samp['sampleId'])\">Edit</a>\n\n\n                <a *ngIf=\"! properties.LOGGED_IN\" (click)=\"navigateToSampleView(samp['sampleId'])\">View</a>\n                <br>\n                <div *ngIf=\"samp['addedToFavorites']\">\n                    {{samp['addedToFavorites'][0]}}\n                </div>\n                <a *ngIf=\"properties.LOGGED_IN&&!samp['addedToFavorites']\" (click)=\"addToFavorites( samp )\">Add to Favorites</a>\n\n            </td>\n\n            <td class=\"search-results-td\">{{samp['sampleName']}}</td>\n\n            <td class=\"sample-search-results-poc-td\" [innerHTML]=\"samp['pointOfContact']\"></td>\n            <td class=\"search-results-td\">\n                <span *ngIf=\"\n                samp['composition'] !== undefined &&\n                samp['composition'] !== null &&\n                samp['composition'][0] !== undefined &&\n                samp['composition'][0] !== null\">{{samp['composition'][0]}}\n                </span>\n            </td>\n\n            <td class=\"search-results-td\">\n                <div *ngFor=\"let func of samp['functions'] \">\n                    {{func}}\n                </div>\n            </td>\n\n            <td class=\"search-results-td\">\n                <div *ngFor=\"let char of samp['characterizations']; let i0 = index \">\n                    {{char}}\n                </div>\n            </td>\n\n            <td class=\"search-results-td\">\n                <!--\n            <a href=\"http://cent16:8090/rest/sample/viewDataAvailability?sampleId=25799936\"></a>\n-->\n                <span class=\"link-clicker\" (click)=\"onAvailabilityClick(samp['sampleId'])\">\n                    {{samp['dataAvailability']}}\n                </span>\n            </td>\n\n            <td class=\"search-results-td\">\n                {{samp['createdDate'] | date : \"shortDate\"}}\n            </td>\n\n        </tr>\n\n    </table><br />\n    <!-- Pager buttons -->\n    <canano-search-results-pager style=\"float: right; \" [totalCount]=searchResultsCount [startingPageLength]=pageLength>\n    </canano-search-results-pager>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleSearchResultsComponent } from './sample-search-results.component';\nimport { SampleSearchResultsRoutingModule } from './sample-search-results-routing.module';\nimport { SharedModule } from '../../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [SampleSearchResultsComponent],\n    imports: [\n      CommonModule,\n      SampleSearchResultsRoutingModule,\n      SharedModule,\n      FormsModule\n    ]\n  })\n  export class SampleSearchResultsModule { }\n"],"names":["RouterModule","SampleSearchResultsComponent","routes","path","component","SampleSearchResultsRoutingModule","forChild","imports","exports","Consts","SortState","Properties","takeUntil","Subject","i0","constructor","sampleSearchResultsService","searchResultsPagerService","statusDisplayService","apiService","router","sampleAvailabilityDisplayService","actions","sampleName","pointOfContact","composition","functions","characterizations","dataAvailability","createdDate","MAX_PAGE_LENGTH","DEFAULT_PAGE_LENGTH","HELP_URL_SAMPLE_SEARCH_RESULTS","NO_SORT","ngOnInit","setTimeout","SAMPLE_TOOLS","searchResults","getSearchResults","searchResultsCount","length","sampleIds","getSampleIds","currentPageChangeEmitter","pipe","ngUnsubscribe","subscribe","data","currentPage","setupPage","updateUserEmitter","userName","pageCount","Math","ceil","pageLength","onPageLengthChange","navigateToSampleEdit","sampleId","navigate","navigateToSampleView","addToFavorites","samp","console","log","favObj","dataType","loginName","current_user","doPost","QUERY_ADD_FAVORITE","err","onAvailabilityClick","id","doGet","QUERY_SAMPLE_VIEW_AVAILABILITY","displayStuff","downloadReady","event","loading","searchResultsPageToDisplay","slice","maxPageLength","setPageCount","onSortClick","i","key","sortingStates","forEach","item","index","sort","a","b","getStringValue","val","toString","toUpperCase","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","FormsModule","SampleSearchResultsModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}