{"version":3,"sources":["./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login.component.ts","./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login.component.html","./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login-routing.module.ts","./src/app/cananolab-client/main-display/home/right-side-bar/home-user-actions/login/login.module.ts"],"names":[],"mappings":"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","file":"default~cananolab-client-main-display-home-home-module~cananolab-client-main-display-home-right-side~2ef436f1.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../../../../common/services/api.service';\nimport { StatusDisplayService } from '../../../../../status-display/status-display.service';\nimport { Router } from '@angular/router';\nimport { IdleService } from 'src/app/cananolab-client/common/components/idle/idle.service';\n@Component( {\n    selector: 'canano-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n} )\nexport class LoginComponent implements OnInit{\n\n    user = '';\n    password = '';\n    email = '';\n    homePage = true;\n    loaded=false;\n    showResetPassword=false;\n    constructor( private idleService:IdleService,private router:Router,private apiService: ApiService, private statusDisplayService: StatusDisplayService ){\n    }\n\n    ngOnInit(): void{\n        if (this.router.url.includes('login'))\n        {\n            this.homePage=false;\n            this.loaded=true;\n        }\n    }\n\n    onLoginClick(){\n        this.apiService.authenticateUser( this.user, this.password );\n        this.statusDisplayService.updateUser( this.user );\n        this.idleService.startTimer();\n        this.router.navigateByUrl('home');\n    }\n\n    toggleResetPassword() {\n        this.showResetPassword=!this.showResetPassword;\n        return false;\n    }\n\n    onResetClick() {\n        this.apiService.resetUserPassword(this.email);\n        this.idleService.startTimer();\n        console.log(this.email);\n    }\n}\n","<canano-main-display-heading *ngIf=\"loaded&&!homePage\"\n[helpUrl]=\"'https://wiki.nci.nih.gov/display/caNanoLab/Getting+Started+in+caNanoLab#GettingStartedincaNanoLab-LoggingIn'\"\n[toolHeadingName]=\"'Log into caNanoLab'\"\n>\n</canano-main-display-heading>\n\n<div [ngClass]=\"{'mainSection':loaded&&!homePage,'right-side-bar-content':homePage}\">\n<div [ngClass]=\"{'mainBorder':loaded&&!homePage}\">\n    <div *ngIf=\"!showResetPassword\">\n        <table class=\"login\">\n            <tr>\n                <td colspan=\"2\">\n                    <P><B>No account is required to browse publicly available data.</B></P>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"loginId\">\n                        LOGIN ID\n                    </label>\n                </td>\n                <td>\n                    <input type=\"text\" name=\"loginId\" id=\"loginId\" [(ngModel)]=\"user\">\n                </td>\n            </tr>\n\n            <tr>\n                <td>\n                    <label for=\"password\">\n                        PASSWORD\n                    </label>\n                </td>\n                <td>\n                    <input type=\"password\" name=\"password\" id=\"password\" [(ngModel)]=\"password\">\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <button class=\"btn btn-primary btn-sm\" (click)=\"onLoginClick()\">\n                        Login\n                    </button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <a href=\"\" (click)=\"toggleResetPassword()\">Forgot Password?</a>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div *ngIf=\"showResetPassword\">\n        <table class=\"resetpwd\">\n             <tr>\n                <td colspan=\"2\">\n                    <P><B>Enter your email to receive a password reset link.</B></P>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"email\">\n                        EMAIL\n                    </label>\n                </td>\n                <td>\n                    <input type=\"text\" name=\"email\" id=\"email\" [(ngModel)]=\"email\">\n                </td>\n            </tr>\n\n            <tr>\n                <td></td>\n                <td>\n                    <button class=\"btn btn-primary btn-sm\" (click)=\"onResetClick()\">\n                        Reset Password\n                    </button>\n                </td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                  <a href=\"\" (click)=\"toggleResetPassword()\">Back to Login</a>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      LoginRoutingModule\n    ],\n    exports: [LoginComponent]\n  })\nexport class LoginModule { }\n\n"],"sourceRoot":"webpack:///"}