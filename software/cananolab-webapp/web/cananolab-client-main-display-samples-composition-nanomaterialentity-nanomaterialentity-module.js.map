{"version":3,"sources":["./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterial.service.ts","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity-routing.module.ts","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity.component.ts","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity.component.html","./src/app/cananolab-client/main-display/samples/composition/nanomaterialentity/nanomaterialentity.module.ts"],"names":[],"mappings":"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","file":"cananolab-client-main-display-samples-composition-nanomaterialentity-nanomaterialentity-module.js","sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class NanomaterialService{\n    nanomaterialSampleId;\n    nanomaterialDescription;\n    nanomaterialDataId;\n    nanomaterialSetupData;\n    nanomaterialEditData;\n    composingElementsArray = [];\n    newNanomaterialType;\n\n    newComposingElementShowEmitter =  new EventEmitter();\n    newNanomaterialTypeEmitter =  new EventEmitter();\n    editComposingElementShowEmitter =  new EventEmitter();\n    editComposingElementIndexEmitter =  new EventEmitter();\n    editComposingElementCancelEmitter =  new EventEmitter();\n\n    constructor(){\n    }\n\n    setComposingElementsArray(cea){\n        this.composingElementsArray = cea;\n    }\n\n    getComposingElementsArray(){\n        return this.composingElementsArray;\n    }\n\n    setNewComposingElementShow(){\n        this.newComposingElementShowEmitter.emit(true);\n        this.editComposingElementShowEmitter.emit(false);\n    }\n\n   setNewComposingElementHide(){\n       this.newComposingElementShowEmitter.emit(false);\n   }\n\n\n    setEditComposingElementShow(){\n        this.editComposingElementShowEmitter.emit(true);\n        this.newComposingElementShowEmitter.emit(false);\n    }\n\n\n\n    // User has canceled out of Edit\n   setEditComposingElementHide( i: number = -1 ){\n\n        if( i >= 0 ){\n            this.editComposingElementCancelEmitter.emit(i);\n        }\n\n       this.editComposingElementShowEmitter.emit(false);\n   }\n\n    editComposingElement( element ){\n        this.editComposingElementIndexEmitter.emit( element );\n        this.editComposingElementShowEmitter.emit(true);\n    }\n\n    getNanomaterialEditData(){\n        return this.nanomaterialEditData;\n    }\n\n    setNanomaterialEditData( nmsData ){\n        this.nanomaterialEditData = nmsData;\n    }\n\n    getNanomaterialSetupData(){\n        return this.nanomaterialSetupData;\n    }\n\n    setNanomaterialSetupData( nmsData ){\n        this.nanomaterialSetupData = nmsData;\n    }\n\n    getNanoMaterialSampleId(){\n        return this.nanomaterialSampleId;\n    }\n\n    setNanoMaterialSampleId( nmsId ){\n        this.nanomaterialSampleId = nmsId;\n    }\n\n    getNanoMaterialDataId(){\n        return this.nanomaterialDataId;\n    }\n\n    setNanoMaterialDataId( nmdId ){\n        this.nanomaterialDataId = nmdId;\n    }\n\n    setNanoMaterialSampleDescription( nmsDec ){\n        this.nanomaterialDescription = nmsDec;\n    }\n\n   getNanoMaterialSampleDescription(  ){\n        return this.nanomaterialDescription;\n    }\n\n\n    setNewNanomaterialType( type, sampleId, description ){\n        this.newNanomaterialType = type;\n        this.newNanomaterialTypeEmitter.emit( {type, sampleId, description });\n    }\n\n    getsetNewNanomaterialType(){\n        return this.newNanomaterialType;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NanomaterialentityComponent } from './nanomaterialentity.component';\nconst routes: Routes = [{ path: '', component: NanomaterialentityComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NanomaterialentityRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Consts } from '../../../../../constants';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { Properties } from '../../../../../../assets/properties';\nimport { NanomaterialService } from './nanomaterial.service';\nimport { NavigationService } from '../../../../common/services/navigation.service';\n@Component({\n    selector: 'canano-nanomaterialentity',\n    templateUrl: './nanomaterialentity.component.html',\n    styleUrls: ['./nanomaterialentity.component.scss'],\n})\nexport class NanomaterialentityComponent implements OnInit {\n    composingElementIndex;\n    consts=Consts;\n    composingElement;\n    currentDropdownValues = {};\n    currentField;\n    data;\n    dataTrailer;\n    dataId;\n    errors = {};\n    helpUrl = Consts.HELP_URL_SAMPLE_COMPOSITION_NANOMATERIAL;\n    inherentFunctionIndex;\n    inherentFunction;\n    resetStatus=false;\n    otherValue;\n    sampleId;\n    setupData;\n    toolHeadingNameManage = ' Sample Composition - Nanomaterial Entity';\n\n    constructor(\n        private navigationService: NavigationService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private apiService: ApiService,\n        private nanomaterialService: NanomaterialService\n    ) {}\n\n    ngOnInit(): void {\n        this.navigationService.setCurrentSelectedItem(1);\n        this.route.params.subscribe((params: Params) => {\n            this.sampleId = params['sampleId'];\n            this.dataId = params['dataId'];\n            this.apiService\n                .doGet(\n                    Consts.QUERY_NANOMATERIAL_SETUP,\n                    'sampleId=' + this.sampleId\n                )\n                .subscribe(\n                    (data) => {\n                        this.setupData = data;\n                        Properties.SAMPLE_TOOLS = true;\n                        Properties.CURRENT_SAMPLE_ID = this.sampleId;\n                    },\n                    (errors) => {\n                        this.errors = errors;\n                    }\n                );\n\n            if (this.dataId) {\n                this.apiService\n                    .doGet(\n                        Consts.QUERY_NANOMATERIAL_EDIT,\n                        'sampleId=' + this.sampleId + '&dataId=' + this.dataId\n                    )\n                    .subscribe(\n                        (data) => {\n                            this.data = data;\n                            this.dataTrailer = JSON.parse(JSON.stringify(data));\n                            this.errors = {};\n                        },\n                        (errors) => {\n                            this.errors = errors;\n                        }\n                    );\n            } else {\n                this.setupNanomaterial();\n            }\n        });\n    }\n\n    addInherentFunction() {\n        this.inherentFunctionIndex=-1;\n        this.inherentFunction={type:\"\",description:\"\",modality:\"\"};\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n\n    addComposingElement() {\n        this.composingElementIndex = -1;\n        this.composingElement = {\n            type: '',\n            name: '',\n            pubChemDataSourceName: '',\n            valueUnit: '',\n            molecularFormulaType: '',\n            inherentFunction: [],\n        };\n        setTimeout(function () {\n            document.getElementById('composingElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    // set pointer fields to old values when adding other //\n    addOtherValue(field, currentValue) {\n        this.currentDropdownValues[field] = currentValue;\n    }\n\n    cancelComposingElement() {\n        this.composingElementIndex = null;\n        this.inherentFunctionIndex = null;\n    }\n\n    cancelInherentFunction() {\n        this.inherentFunctionIndex=null;\n    }\n\n    changeFile(newItem: Object) {\n        if (newItem['type'] == 'save' || newItem['type'] == 'delete') {\n            this.data = newItem['data'];\n            this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        }\n    }\n\n    convertDomainEntityFieldsToNullAndStrings() {\n        let fieldsToIgnore = ['id', 'createdDate', 'sampleComposition'];\n        if (this.data['domainEntity']) {\n            let domainEntityKeys = Object.keys(this.data['domainEntity']);\n            domainEntityKeys.forEach((item) => {\n                if (this.data.domainEntity[item] != null) {\n                    if (\n                        this.data.domainEntity[item] != '' &&\n                        fieldsToIgnore.indexOf(item) == -1\n                    ) {\n                        this.data.domainEntity[item] =\n                            this.data.domainEntity[item].toString();\n                    }\n                    if (this.data.domainEntity[item] == '') {\n                        this.data.domainEntity[item] = null;\n                    }\n                }\n            });\n        }\n    }\n\n    convertToString(event) {\n        this.data.domainEntity[event.target.id] = event.target.value.toString();\n    }\n    delete() {\n        if (confirm('Are you sure you wish to delete this nanomaterial?')) {\n            this.convertDomainEntityFieldsToNullAndStrings();\n            setTimeout(() => {\n                this.apiService\n                    .doPost(Consts.QUERY_NANOMATERIAL_DELETE, this.data)\n                    .subscribe(\n                        (data) => {\n                            this.router.navigate([\n                                'home/samples/composition',\n                                this.sampleId,\n                            ]);\n                        },\n                        (error) => {\n                            this.errors = error;\n                        }\n                    );\n            }, 200);\n        }\n    }\n\n    deleteComposingElement() {\n        if (\n            confirm('Are you sure you wish to delete this composing element?')\n        ) {\n            this.convertDomainEntityFieldsToNullAndStrings();\n            this.data.simpleCompBean = this.composingElement;\n            this.data.composingElements.splice(\n                this.data.composingElements[this.composingElementIndex],\n                1\n            );\n            this.apiService\n                .doPost(Consts.QUERY_REMOVE_COMPOSING_ELEMENT, this.data)\n                .subscribe(\n                    (data) => {\n                        this.composingElementIndex = null;\n                        this.inherentFunctionIndex = null;\n                        this.data = data;\n                        this.setupDataTrailer(data);\n                        this.errors = {};\n                    },\n                    (error) => {\n                        this.errors = error;\n                    }\n                );\n        }\n    }\n\n    deleteInherentFunction() {\n        if (confirm(\"Are you sure you wish to delete this inherent function?\")) {\n            this.composingElement.inherentFunction.splice(this.inherentFunctionIndex,1)\n        };\n        this.inherentFunctionIndex=null;\n    }\n\n    editComposingElement(index, element) {\n        this.composingElement = JSON.parse(JSON.stringify(element));\n        this.composingElementIndex = index;\n        setTimeout(function () {\n            document.getElementById('composingElementForm').scrollIntoView();\n        }, 100);\n    }\n\n    editInherentFunction(fIndex,iFunction) {\n        this.inherentFunctionIndex=fIndex;\n        this.inherentFunction=JSON.parse(JSON.stringify(iFunction));\n        setTimeout(function () {\n            document.getElementById('inherentFunctionForm').scrollIntoView();\n        }, 100);\n    }\n\n    getError(error:Object) {\n        this.errors=error;\n    }\n\n    readyToSubmit() {\n        let submissionStatus = true;\n        if (this.data.type == 'biopolymer') {\n            if (\n                this.data.domainEntity.name == '' ||\n                this.data.domainEntity.name == null\n            )\n                submissionStatus = false;\n            if (\n                this.data.domainEntity.type == '' ||\n                this.data.domainEntity.type == null\n            )\n                submissionStatus = false;\n        }\n        if (this.data.type == '') submissionStatus = false;\n        return submissionStatus;\n    }\n\n    reset() {\n        this.data=JSON.parse(JSON.stringify(this.dataTrailer));\n        this.composingElementIndex=null;\n        this.inherentFunctionIndex=null;\n        this.resetStatus=true;\n    }\n\n    saveComposingElement() {\n        this.convertDomainEntityFieldsToNullAndStrings();\n        if (this.composingElementIndex == -1) {\n            this.data['simpleCompBean'] = this.composingElement;\n        } else {\n            this.data['composingElements'][this.composingElementIndex] =\n                this.composingElement;\n            this.data['simpleCompBean'] = this.composingElement;\n        }\n        this.apiService\n            .doPost(Consts.SAVE_COMPOSING_ELEMENT, this.data)\n            .subscribe(\n                (data) => {\n                    this.composingElementIndex = null;\n                    this.inherentFunctionIndex = null;\n                    this.data = data;\n                    this.setupDataTrailer(data);\n                    this.errors = {};\n                },\n                (error) => {\n                    this.errors = error;\n                }\n            );\n    }\n\n    saveInherentFunction() {\n        if (this.inherentFunctionIndex==-1) {\n            this.inherentFunction.id=\"-1000\";\n            if (!this.composingElement.inherentFunction) {\n                this.composingElement['inherentFunction']=[];\n            }\n            this.composingElement.inherentFunction.push(this.inherentFunction);\n        }\n        else {\n            this.composingElement.inherentFunction[this.inherentFunctionIndex]=this.inherentFunction;\n        }\n        this.inherentFunctionIndex=null;\n    }\n    // save other value //\n    saveOther(newItem: Object) {\n        if (newItem['change'] && newItem['value']) {\n            this.addDropdownItem(newItem['array'], newItem['value']);\n            this.setValue(newItem['field'], newItem['value']);\n        } else {\n            this.setValue(newItem['field'], newItem['value']);\n        }\n    }\n\n    setupDataTrailer(data) {\n        this.dataTrailer = JSON.parse(JSON.stringify(data));\n    }\n\n    setupDomainEntity(event) {\n        delete this.data['domainEntity'];\n        if (event == 'biopolymer')\n            this.data['domainEntity'] = {\n                type: null,\n                name: null,\n                sequence: null,\n            };\n        if (event == 'dendrimer')\n            this.data['domainEntity'] = { branch: null, generation: null };\n        if (event == 'fullerene')\n            this.data['domainEntity'] = {\n                averageDiameter: null,\n                averageDiameterUnit: null,\n                numberOfCarbon: null,\n            };\n        if (event == 'liposome')\n            this.data['domainEntity'] = {\n                isPolymerized: null,\n                polymerName: null,\n            };\n        if (event == 'polymer')\n            this.data['domainEntity'] = {\n                isCrossLinked: null,\n                initiator: null,\n                crossLinkDegree: null,\n            };\n        if (event == 'emulsion')\n            this.data['domainEntity'] = {\n                isPolymerized: null,\n                polymerName: null,\n            };\n        if (event == 'carbon nanotube')\n            this.data['domainEntity'] = {\n                averageLength: null,\n                diameter: null,\n                averageLengthUnit: null,\n                diameterUnit: null,\n                chirality: null,\n                wallType: null,\n            };\n    }\n\n    setupNanomaterial() {\n        this.data = {\n            description: '',\n            type: '',\n            sampleId: this.sampleId,\n            composingElements: [],\n            files: [],\n        };\n        this.dataTrailer=JSON.parse(JSON.stringify(this.data));\n    }\n\n    submit() {\n        this.convertDomainEntityFieldsToNullAndStrings();\n        this.apiService\n            .doPost(Consts.QUERY_NANOMATERIAL_UPDATE, this.data)\n            .subscribe(\n                (data) => {\n                    this.router.navigate([\n                        'home/samples/composition',\n                        this.sampleId,\n                    ]);\n                },\n                (errors) => {\n                    this.errors = errors;\n                }\n            );\n    }\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingNameManage\">\n</canano-main-display-heading>\n<div class=\"mainSection\" *ngIf=\"data&&setupData\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <form name=\"nanomaterialForm\">\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"nanomaterialType\">\n                            Nanomaterial Entity Type*\n                        </label>\n                    </td>\n                    <td>\n                        <div *ngIf=\"dataId\">\n                            <B>{{data.type}}</B>\n                        </div>\n                            <div *ngIf=\"!dataId\">\n                            <select (ngModelChange)=\"addOtherValue('type',data.type);setupDomainEntity($event)\"  name=\"type\" id=\"nanomaterialType\" [(ngModel)]=\"data.type\">\n                                <option [ngValue]=\"''\" [selected]=\"data.type===''\">--Select--</option>\n                                <option *ngFor=\"let type of setupData['nanomaterialEntityTypes']\" [selected]=\"type==data.type\">\n                                    {{type}}\n                                </option>\n                                <option [ngValue]=\"'other'\">other</option>\n                            </select>\n                            <div *ngIf=\"data.type ==='other'\">\n                                <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Nanomaterial Entity Type'\" [value]=\"currentDropdownValues['type']\" [field]=\"'data.type'\" [array]=\"'setupData.nanomaterialEntityTypes'\">\n\n                                </canano-other-dropdown>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"description\">\n                            Description\n                        </label>\n                    </td>\n                    <td>\n                        <textarea name=\"description\" id=\"description\" rows=\"3\" cols=\"60\" [(ngModel)]=\"data.description\">\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='biopolymer'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Biopolymer Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"biopolymerName\">\n                            Name*\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"biopolymerName\" [(ngModel)]=\"data.domainEntity['name']\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"biopolymerType\">Biopolymer Type*</label>\n                    </td>\n                    <td>\n                        <select (ngModelChange)=\"addOtherValue('domainEntity.type',data.domainEntity.type)\" id=\"biopolymerType\" [(ngModel)]=\"data['domainEntity']['type']\" name=\"biopolymerType\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity['type']==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['biopolymerTypes']\" [selected]=\"data.domainEntity['type']==type\" value=\"{{type}}\">\n                                {{type}}\n                            </option>\n                            <option value=\"other\">\n                                other\n                            </option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.type ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['domainEntity.type']\" [field]=\"'data.domainEntity.type'\" [array]=\"'setupData.biopolymerTypes'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"biopolymerSequence\">Sequence</label>\n                    </td>\n                    <td colspan=\"3\">\n                        <textarea name=\"biopolymerSequence\" id=\"biopolymerSequence\" [(ngModel)]=\"data.domainEntity.sequence\" rows=\"3\" cols=\"80\">\n                            {{data.sequence}}\n                        </textarea>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='carbon nanotube'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td colspan=\"6\" class=\"label\">\n                        Carbon Nanotube Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"averageLength\">\n                            Average Length\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"averageLength\" id=\"averageLength\" [(ngModel)]=\"data.domainEntity.averageLength\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"averageLengthUnit\">\n                            Average Length Unit\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"averageLengthUnit\" (ngModelChange)=\"addOtherValue('domainEntity.averageLengthUnit',data.domainEntity.averageLengthUnit)\" name=\"averageLengthUnit\" [(ngModel)]=\"data.domainEntity.averageLengthUnit\" [(ngModel)]=\"data.domainEntity.averageLengthUnit\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.averageLengthUnit==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['composingElementUnits']\" [selected]=\"type==data.domainEntity.averageLengthUnit\">\n                                {{type}}\n                            </option>\n                            <option>other</option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.averageLengthUnit ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Average Length Unit'\" [value]=\"currentDropdownValues['domainEntity.averageLengthUnit']\" [field]=\"'data.domainEntity.averageLengthUnit'\" [array]=\"'setupData.composingElementUnits'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"chirality\">\n                            Chirality\n                        </label>\n                    </td>\n                    <td>\n                       <input type=\"text\" name=\"chirality\" [(ngModel)]=\"data.domainEntity.chirality\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"diameter\">\n                            Diameter\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"diameter\" id=\"diameter\" [(ngModel)]=\"data.domainEntity.diameter\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"diameterUnit\">\n                            Diameter Unit\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"diameterUnit\" (ngModelChange)=\"addOtherValue('domainEntity.diameterUnit',data.domainEntity.diameterUnit)\" name=\"diameterUnit\" [(ngModel)]=\"data.domainEntity.diameterUnit\" [(ngModel)]=\"data.domainEntity.diameterUnit\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.diameterUnit==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['dimensionUnits']\" [selected]=\"type==data.domainEntity.diameterUnit\">\n                                {{type}}\n                            </option>\n                            <option>other</option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.diameterUnit ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Diameter Unit'\" [value]=\"currentDropdownValues['domainEntity.diameterUnit']\" [field]=\"'data.domainEntity.diameterUnit'\" [array]=\"'setupData.dimensionUnits'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"wallType\">\n                            Wall Type\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"wallType\" name=\"wallType\" [(ngModel)]=\"data.domainEntity.wallType\" [(ngModel)]=\"data.domainEntity.wallType\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.wallType==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['wallTypes']\" [selected]=\"type==data.domainEntity.wallType\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='dendrimer'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Dendrimer Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"branch\">\n                            Branch\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"branch\" id=\"branch\" [(ngModel)]=\"data.domainEntity.branch\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"generation\">\n                            Generation\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"generation\" id=\"generation\" [(ngModel)]=\"data.domainEntity.generation\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='emulsion'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Emulsion Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"isPolymerized\">\n                            Is Polymerized\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"isPolymerized\" id=\"isPolymerized\" [(ngModel)]=\"data.domainEntity.isPolymerized\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.polymerized==null\">--Select--</option>\n                            <option value=\"true\"\n                                    [selected]=\"data.domainEntity.polymerized==true\">Yes</option>\n                            <option value=\"false\"\n                                    [selected]=\"data.domainEntity.polymerized==false\">No</option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"polymerName\">\n                            Polymer Name\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"polymerName\" id=\"polymerName\" [(ngModel)]=\"data.domainEntity.polymerName\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='fullerene'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"6\">\n                        Fullerene Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"averageDiameter\">\n                            Average Diameter\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"averageDiameter\" id=\"averageDiameter\" [(ngModel)]=\"data.domainEntity.averageDiameter\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"averageDiameterUnit\">\n                            Average Diameter Unit\n                        </label>\n                    </td>\n                    <td>\n                        <select id=\"averageDiameterUnit\" (ngModelChange)=\"addOtherValue('domainEntity.averageDiameterUnit',data.domainEntity.averageDiameterUnit)\" name=\"averageDiameterUnit\" [(ngModel)]=\"data.domainEntity.averageDiameterUnit\" [(ngModel)]=\"data.domainEntity.averageDiameterUnit\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.averageDiameterUnit==null\">--Select--</option>\n                            <option *ngFor=\"let type of setupData['dimensionUnits']\" [selected]=\"type==data.domainEntity.averageDiameterUnit\">\n                                {{type}}\n                            </option>\n                            <option>other</option>\n                        </select>\n                        <div *ngIf=\"data.domainEntity.averageDiameterUnit ==='other'\">\n                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Average Diameter Unit'\" [value]=\"currentDropdownValues['domainEntity.averageDiameterUnit']\" [field]=\"'data.domainEntity.averageDiameterUnit'\" [array]=\"'setupData.dimensionUnits'\">\n                            </canano-other-dropdown>\n                        </div>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"numberOfCarbon\">\n                            Number of Carbons\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"numberOfCarbon\" id=\"numberOfCarbon\" [(ngModel)]=\"data.domainEntity.numberOfCarbon\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='liposome'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"4\">\n                        Liposome Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"isPolymerized\">\n                            Is Polymerized\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"isPolymerized\" id=\"isPolymerized\" [(ngModel)]=\"data.domainEntity.isPolymerized\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.polymerized==null\">--Select--</option>\n                            <option value=\"true\"\n                                    [selected]=\"data.domainEntity.polymerized===true\">Yes</option>\n                            <option value=\"false\"\n                                    [selected]=\"data.domainEntity.polymerized===false\">No</option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"polymerName\">\n                            Polymer Name\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"text\" name=\"polymerName\" id=\"polymerName\" [(ngModel)]=\"data.domainEntity.polymerName\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"mainBorder properties\" *ngIf=\"data.type=='polymer'\">\n            <table class=\"dataMain properties\">\n                <tr>\n                    <td class=\"label\" colspan=\"6\">\n                        Polymer Properties\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"initiator\">\n                            Initiator\n                        </label>\n                    </td>\n                    <td>\n                        <input (input)=\"convertToString($event)\" type=\"number\" name=\"initiator\" id=\"initiator\" [(ngModel)]=\"data.domainEntity.initiator\">\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"isCrossLinked\">\n                            Is Cross Linked\n                        </label>\n                    </td>\n                    <td>\n                        <select name=\"isCrossLinked\" id=\"isCrossLinked\" [(ngModel)]=\"data.domainEntity.isCrossLinked\">\n                            <option [ngValue]=\"null\" [selected]=\"data.domainEntity.isCrossLinked==null\">--Select--</option>\n                            <option value=\"true\"\n                                    [selected]=\"data.domainEntity.isCrossLinked==true\">Yes</option>\n                            <option value=\"false\"\n                                    [selected]=\"data.domainEntity.isCrossLinked==false\">No</option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"crossLinkDegree\">\n                            Cross Link Degree\n                        </label>\n                    </td>\n                    <td>\n                        <input type=\"number\" (input)=\"convertToString($event)\" name=\"crossLinkDegree\" id=\"crossLinkDegree\" [(ngModel)]=\"data.domainEntity.crossLinkDegree\">\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        Composing Element\n                    </td>\n                    <td>\n                        <button (click)=\"addComposingElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                    </td>\n                </tr>\n                <tr *ngIf=\"data.composingElements.length\">\n                    <td></td>\n                    <td>\n                        <table class=\"dataTable properties\" *ngFor=\"let cElement of data.composingElements;let cIndex=index\">\n                            <tr>\n                                <th colspan=\"2\">\n                                    {{cElement.type}} (name:{{cElement.name}})\n                                </th>\n                                <th></th>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    PubChem ID\n                                </td>\n                                <td>\n                                    {{cElement.pubChemId}}\n                                </td>\n                                <td>\n                                    <button (click)=\"editComposingElement(cIndex,cElement)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Molecular Formula\n                                </td>\n                                <td colspan=\"2\">\n                                    {{cElement.molecularFormula}} ({{cElement.molecularFormulaType}})\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"label\">\n                                    Description\n                                </td>\n                                <td colspan=\"2\">\n                                    {{cElement.description}}\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"cElement.inherentFunction\">\n                                <td class=\"label\">\n                                    Function\n                                </td>\n                                <td colspan=\"2\">\n                                    <div *ngFor=\"let function of cElement.inherentFunction\">\n                                        {{function.type}}:{{function.description}}\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr *ngIf=\"composingElementIndex!=null\" id=\"composingElementForm\">\n                    <td></td>\n                    <td>\n                        <div class=\"mainBorder\">\n                            <table class=\"dataMain\">\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cType\">\n                                            Type*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('composingElement.type',composingElement.type)\" id=\"cType\" name=\"cType\" [(ngModel)]=\"composingElement.type\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.type==type\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.emulsionComposingElementTypes\" [selected]=\"type==composingElement.type\">\n                                                {{type}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"composingElement.type ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Type'\" [value]=\"currentDropdownValues['composingElement.type']\" [field]=\"'composingElement.type'\" [array]=\"'setupData.emulsionComposingElementTypes'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"cName*\">\n                                            Chemical Name*\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"text\" name=\"cName\" [(ngModel)]=\"composingElement.name\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cPubchemDataSource\">\n                                            PubChem DataSource\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select id=\"cPubchemDataSource\" name=\"cPubchemDataSource\" [(ngModel)]=\"composingElement.pubChemDataSourceName\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.pubChemDataSourceName===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.pubChemDataSources\" [selected]=\"type==composingElement.pubChemDataSourceName\">\n                                                {{type}}\n                                            </option>\n                                        </select>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"pubchemid\">\n                                            PubChem Id\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" id=\"pubchemid\" name=\"pubChemId\" [(ngModel)]=\"composingElement.pubChemId\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"amount\">\n                                            Amount\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <input type=\"number\" name=\"amount\" id=\"amount\" [(ngModel)]=\"composingElement.value\">\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"amountunit\">\n                                            Amount Unit\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('composingElement.valueUnit',composingElement.valueUnit)\" name=\"valueUnit\" id=\"valueUnit\" [(ngModel)]=\"composingElement.valueUnit\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.valueUnit===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.composingElementUnits\" [selected]=\"composingElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"composingElement.valueUnit ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Amount Unit'\" [value]=\"currentDropdownValues['composingElement.valueUnit']\" [field]=\"'composingElement.valueUnit'\" [array]=\"'setupData.composingElementUnits'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormulaType\">\n                                            Molecular Formula Type\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <select (ngModelChange)=\"addOtherValue('composingElement.molecularFormulaType',composingElement.molecularFormulaType)\" name=\"molecularFormulaType\" id=\"molecularFormulaType\" [(ngModel)]=\"composingElement.molecularFormulaType\">\n                                            <option [ngValue]=\"''\" [selected]=\"composingElement.molecularFormulaType===''\">--Select--</option>\n                                            <option *ngFor=\"let type of setupData.molecularFormulaTypes\" [selected]=\"composingElement.valueUnit==type\">\n                                                {{type}}\n                                            </option>\n                                            <option>other</option>\n                                        </select>\n                                        <div *ngIf=\"composingElement.molecularFormulaType ==='other'\">\n                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Molecular Formula Type'\" [value]=\"currentDropdownValues['composingElement.molecularFormulaType']\" [field]=\"'composingElement.molecularFormulaType'\" [array]=\"'setupData.molecularFormulaTypes'\">\n\n                                            </canano-other-dropdown>\n                                        </div>\n                                    </td>\n                                    <td class=\"label\">\n                                        <label for=\"molecularFormula\">\n                                            Molecular Formula\n                                        </label>\n                                    </td>\n                                    <td>\n                                        <textarea name=\"molecularFormula\" id=\"molecularFormula\" rows=\"2\" cols=\"40\" [(ngModel)]=\"composingElement.molecularFormula\">\n                                            {{composingElement.molecularFormula}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"cDescription\">\n                                            Description\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <textarea name=\"cDescription\" id=\"cDescription\" rows=\"3\" cols=\"65\" [(ngModel)]=\"composingElement.description\">\n                                            {{composingElement.description}}\n                                        </textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">\n                                        <label for=\"inherentFunction\">\n                                            Inherent Function\n                                        </label>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <button (click)=\"addInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Add</button>\n                                    </td>\n                                </tr>\n                                <ng-container *ngIf=\"composingElement.inherentFunction\">\n                                    <tr *ngIf=\"composingElement.inherentFunction.length\">\n                                        <td></td>\n                                        <td colspan=\"3\">\n                                            <table class=\"dataTable\">\n                                                <tr>\n                                                    <th>Function Type</th>\n                                                    <th>Image Modality</th>\n                                                    <th>Targets</th>\n                                                    <th>Description</th>\n                                                    <th></th>\n                                                </tr>\n                                                <tr *ngFor=\"let iFunction of composingElement.inherentFunction;let fIndex=index\">\n                                                    <td>\n                                                        {{iFunction.type}}\n                                                    </td>\n                                                    <td>\n                                                        {{iFunction.modality}}\n                                                    </td>\n                                                    <td>\n                                                        targets?\n                                                    </td>\n                                                    <td>\n                                                        {{iFunction.description}}\n                                                    </td>\n                                                    <td>\n                                                        <button (click)=\"editInherentFunction(fIndex,iFunction)\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Edit</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <tr *ngIf=\"inherentFunctionIndex!=null\" id=\"inherentFunctionForm\">\n                                    <td>\n                                    </td>\n                                    <td colspan=\"3\">\n                                        <div class=\"mainBorder\">\n                                            <table class=\"dataMain\">\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"functionType\">\n                                                            Function Type\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <select (ngModelChange)=\"addOtherValue('inherentFunction.type',inherentFunction.type)\"  name=\"type\" id=\"functionType\" [(ngModel)]=\"inherentFunction.type\">\n                                                            <option [ngValue]=\"''\" [selected]=\"inherentFunction.type===''\">--Select--</option>\n                                                            <option *ngFor=\"let type of setupData['functionTypes']\" [selected]=\"type==inherentFunction.type\">\n                                                                {{type}}\n                                                            </option>\n                                                            <option>other</option>\n                                                        </select>\n                                                        <div *ngIf=\"inherentFunction.type ==='other'\">\n                                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Function Type'\" [value]=\"currentDropdownValues['inherentFunction.type']\" [field]=\"'inherentFunction.type'\" [array]=\"'setupData.functionTypes'\">\n\n                                                            </canano-other-dropdown>\n                                                        </div>\n                                                    </td>\n                                                    <td class=\"label\">\n                                                        <label for=\"modality\" *ngIf=\"inherentFunction.type=='imaging function'\">\n                                                            Imaging Modality Type\n                                                        </label>\n                                                    </td>\n                                                    <td>\n                                                        <select *ngIf=\"inherentFunction.type=='imaging function'\" (ngModelChange)=\"addOtherValue('inherentFunction.modality',inherentFunction.modality)\"  name=\"modality\" id=\"modality\" [(ngModel)]=\"inherentFunction.modality\">\n                                                            <option [ngValue]=\"''\" [selected]=\"inherentFunction.modality===''\">--Select--</option>\n                                                            <option *ngFor=\"let type of setupData['modalityTypes']\" [selected]=\"type==inherentFunction.modality\">\n                                                                {{type}}\n                                                            </option>\n                                                            <option>other</option>\n                                                        </select>\n                                                        <div *ngIf=\"inherentFunction.modality ==='other'\">\n                                                            <canano-other-dropdown (saveOther)=\"saveOther($event)\" [label]=\"'Imaging Modality Type'\" [value]=\"currentDropdownValues['inherentFunction.modality']\" [field]=\"'inherentFunction.modality'\" [array]=\"'setupData.modalityTypes'\">\n\n                                                            </canano-other-dropdown>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td class=\"label\">\n                                                        <label for=\"inherentFunction.description\">\n                                                            Description\n                                                        </label>\n                                                    </td>\n                                                    <td colspan=\"3\">\n                                                        <textarea name=\"inherentFunction.description\" id=\"inherentFunction.description\" [(ngModel)]=\"inherentFunction.description\" rows=\"5\" cols=\"50\">\n                                                            {{inherentFunction.description}}\n                                                        </textarea>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <button *ngIf=\"inherentFunctionIndex!=-1\" (click)=\"deleteInherentFunction()\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                                    </td>\n                                                    <td colspan=\"3\" class=\"right\">\n                                                        <button [disabled]=\"inherentFunction.type==''\" (click)=\"saveInherentFunction()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                                        <button (click)=\"cancelInherentFunction()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button (click)=\"deleteComposingElement()\" *ngIf=\"composingElementIndex!=-1\" class=\"btn-canano btn-canano-danger btn-canano-xs mr-1\">Delete</button>\n                                    </td>\n                                    <td></td>\n                                    <td></td>\n                                    <td class=\"right\">\n                                        <button [disabled]=\"!readyToSubmit()||composingElement.type==''||composingElement.name==''\" (click)=\"saveComposingElement()\" class=\"btn-canano btn-canano-primary btn-canano-xs mr-1\">Save</button>\n                                        <button (click)=\"cancelComposingElement()\" class=\"btn-canano btn-canano-default btn-canano-xs mr-1\">Cancel</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        File\n                    </td>\n                    <td>\n                        <canano-file [reset]=\"resetStatus\" (getError)=\"getError($event)\"  (changeFile)=\"changeFile($event)\" [nanomaterial]=\"true\" [saveUrl]=\"consts.QUERY_NANOMATERIAL_SAVE_FILE\" [deleteUrl]=\"consts.QUERY_NANOMATERIAL_REMOVE_FILE\" [sampleId]=\"sampleId\" [data]=\"data\" [fileVariable]=\"'fileBean'\" [fileArray]=\"'files'\">\n\n                        </canano-file>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div class=\"mainBorder\">\n            <table class=\"dataMain\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"otherSampleNames\">\n                            Copy to other samples with the same primary organization?\n                        </label>\n                    </td>\n                    <td>\n                        <select class=\"multiple\" name=\"otherSampleNames\" id=\"otherSampleNames\" multiple size=\"10\" [(ngModel)]=\"data.otherSampleNames\">\n                            <option *ngFor=\"let type of setupData['otherSampleNames']\">\n                                {{type}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n            </table>\n        </div><br />\n        <div>\n            <table class=\"submit\">\n                <tr>\n                    <td *ngIf=\"dataId\" style=\"text-align:left;\">\n                        <button (click)=\"delete()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Delete</button>\n                    </td>\n                    <td>\n                        <button (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n                        <button [disabled]=\"!readyToSubmit()\" (click)=\"submit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Submit</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NanomaterialentityComponent } from './nanomaterialentity.component';\nimport { NanomaterialentityRoutingModule } from './nanomaterialentity-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FileModule } from 'src/app/cananolab-client/common/components/file/file.module';\n@NgModule({\n    declarations: [NanomaterialentityComponent],\n    imports: [\n      CommonModule,\n      NanomaterialentityRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule,\n      FileModule\n    ]\n  })\nexport class NanomaterialentityModule { }\n\n"],"sourceRoot":"webpack:///"}