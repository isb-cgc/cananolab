{"version":3,"file":"src_app_cananolab-client_main-display_samples_general-info_sample-search_sample-search_module_ts.js","mappings":"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","sources":["./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search-routing.module.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.component.ts","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.component.html","./src/app/cananolab-client/main-display/samples/general-info/sample-search/sample-search.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SampleSearchComponent } from './sample-search.component';\n\nconst routes: Routes = [{ path: '', component: SampleSearchComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SampleSearchRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Consts } from '../../../../../constants';\nimport { ApiService } from '../../../../common/services/api.service';\nimport { UtilService } from '../../../../common/services/util.service';\nimport { Router } from '@angular/router';\nimport { SampleSearchResultsService } from './sample-search-results/sample-search-results.service';\nimport { Properties } from 'src/assets/properties';\n@Component({\n  selector: 'canano-sample-search',\n  templateUrl: './sample-search.component.html',\n  styleUrls: ['./sample-search.component.scss']\n})\nexport class SampleSearchComponent implements OnInit {\n    @ViewChild( 'f', { static: false } ) sampleSearchForm: NgForm;\n    helpUrl = Consts.HELP_URL_SAMPLE_SEARCH;\n    toolHeadingName = 'Sample Search';\n    keywords;\n    data;\n    dataTrailer;\n    errors;\n    sampleSetupData = {};\n    loading;\n    loadingMessage = Consts.searchingMessage;\n    pocOperand = 'contains';\n    nameOperand = 'contains';\n    sampleName;\n    samplePointOfContact;\n    characterizationType; // Note - not plural (no s)\n    nanomaterialEntityTypes = [];\n    functionTypes = [];\n    functionalizingEntityTypes = [];\n    characterizationsList = [];\n    characterizations = [];\n    searchResults;\n\n// QUERY_SAMPLE_SETUP\n\n    constructor( private apiService: ApiService, private utilService: UtilService,\n                 private router: Router, private sampleSearchResultsService: SampleSearchResultsService){\n    }\n\n    ngOnInit(): void{\n        setTimeout(() => {\n            Properties.SAMPLE_TOOLS = false;\n        })\n        this.errors = {};\n        this.data = {\n            'text': '',\n            'sampleName': '',\n            'samplePointOfContact': '',\n            'pocOperand': 'contains',\n            'nameOperand': 'contains',\n            'nanomaterialEntityTypes': [],\n            'functionalizingEntityTypes': [],\n            'functionTypes': [],\n            'characterizationType': '',\n            'characterizations': []\n        };\n        this.dataTrailer = JSON.parse(JSON.stringify(this.data));\n        this.init();\n    }\n\n    init(){\n        this.loading = true;\n        this.loadingMessage = Consts.loadingMessage;\n        this.apiService.doGet( Consts.QUERY_SAMPLE_SETUP, '' ).subscribe(\n            data => {\n                this.loading = null;\n                this.sampleSetupData = data;\n            },\n            error => {\n                this.loading = null;\n            } );\n    }\n\n    onCharacterizationType(charType){\n        this.characterizationType = charType;\n        // QUERY_GET_CHARACTERIZATION_BY_TYPE\n        this.apiService.doGet( Consts.QUERY_GET_CHARACTERIZATION_BY_TYPE, 'type=' + charType ).subscribe(\n            data => {\n                this.characterizationsList = <any>data;\n            } );\n\n    }\n\n    onSubmit(){\n        this.loading = true;\n        this.loadingMessage = Consts.searchingMessage;\n        // QUERY_SEARCH_SAMPLE\n        this.apiService.doPost( Consts.QUERY_SEARCH_SAMPLE, this.data ).subscribe(\n            data => {\n                this.searchResults = <any>data;\n                this.loading = null;\n                // send search results to samplesSearchResults\n                this.sampleSearchResultsService.setSearchResults( this.searchResults );\n                this.router.navigate(['home/samples/sample-search-results']); // @FIXME TESTING  Don't hard code this!!!\n            },\n            error => {\n                this.loading = null;\n                this.errors = error;\n            } );\n    }\n\n    reset() {\n        this.data = JSON.parse(JSON.stringify(this.dataTrailer));\n    }\n\n}\n","<canano-main-display-heading\n    [helpUrl]=\"helpUrl\"\n    [toolHeadingName]=\"toolHeadingName\"\n    [otherUrl]=\"{title:'Advanced Search',link:'home/samples/sample-advanced-search'}\"\n>\n</canano-main-display-heading>\n<div class=\"mainSection\">\n    <div class=\"error\" *ngIf=\"errors['error']\">\n        {{errors['error']}}\n    </div>\n    <canano-loader [loading]=\"loading\" [message]=\"loadingMessage\"></canano-loader>\n    <form name=\"sampleSearchForm\">\n        <div class=\"mainBorder\">\n            <table class=\"searchForm\">\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"keywords\">\n                            Keywords\n                        </label>\n                    </td>\n                    <td colspan=\"5\">\n                        <textarea name=\"keywords\" id=\"keywords\" [(ngModel)]=\"data.text\" rows=\"3\" cols=\"60\">\n\n                        </textarea><br />\n                        <i>\n                            searching characterization keywords, publication keywords and text in characterization descriptions enter one keyword per line\n                        </i>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"sampleName\">\n                            Sample Name\n                        </label>\n                    </td>\n                    <td colspan=\"5\">\n                        <label for=\"nameOperand\">\n                            <select name=\"nameOperand\" [(ngModel)]=\"data.nameOperand\">\n                                <option [selected]=\"true\">contains</option>\n                                <option>equals</option>\n                            </select>\n                        </label>\n                        <input type=\"text\" id=\"sampleName\" name=\"data.sampleName\" [(ngModel)]=\"data.sampleName\" size=\"60\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"samplePointOfContact\">\n                            Sample Point of Contact\n                        </label>\n                    </td>\n                    <td colspan=\"5\">\n                        <label for=\"pocOperand\">\n                            <select name=\"pocOperand\" [(ngModel)]=\"data.pocOperand\">\n                                <option [selected]=\"true\">contains</option>\n                                <option>equals</option>\n                            </select>\n                        </label>\n                        <input type=\"text\" name=\"data.samplePointOfContact\" id=\"samplePointOfContact\" [(ngModel)]=\"data.samplePointOfContact\" size=\"60\">\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"nanomaterialEntityTypes\">\n                            Nanomaterial Entity\n                        </label>\n                    </td>\n                    <td>\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.nanomaterialEntityTypes\" id=\"nanomaterialEntityTypes\" [(ngModel)]=\"data.nanomaterialEntityTypes\">\n                            <option *ngFor=\"let samp of sampleSetupData['nanomaterialEntityTypes']\">\n                                {{samp}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"functionalizingEntityTypes\">\n                            Functionalizing Entity Types\n                        </label>\n                    </td>\n                    <td>\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.functionalizingEntityTypes\" id=\"functionalizingEntityTypes\" [(ngModel)]=\"data.functionalizingEntityTypes\">\n                            <option *ngFor=\"let samp of sampleSetupData['functionalizingEntityTypes']\">\n                                {{samp}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <label for=\"functionTypes\">\n                            Function Types\n                        </label>\n                    </td>\n                    <td>\n                        <select [size]=\"7\" class=\"multiple\" multiple name=\"data.functionTypes\" id=\"functionTypes\" [(ngModel)]=\"data.functionTypes\">\n                            <option *ngFor=\"let samp of sampleSetupData['functionTypes']\">\n                                {{samp}}\n                            </option>\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"label\">\n                        <label for=\"characterizationType\">\n                            Characterization Type\n                        </label>\n                    </td>\n                    <td>\n                        <select (ngModelChange)=\"onCharacterizationType($event)\" name=\"characterizationType\" [(ngModel)]=\"data.characterizationType\" id=\"characterizationType\">\n                            <option [selected]=\"true\" [ngValue]=\"''\">--Select--</option>\n                            <option *ngFor=\"let charType of sampleSetupData['characterizationTypes']\">\n                                {{charType}}\n                            </option>\n                        </select>\n                    </td>\n                    <td class=\"label\">\n                        <ng-container *ngIf=\"data.characterizationType!=''\">\n                            <label for=\"characterizations\">\n                                Characterization\n                            </label>\n                        </ng-container>\n                    </td>\n                    <td colspan=\"3\">\n                        <ng-container *ngIf=\"data.characterizationType!=''\">\n                            <select [size]=\"7\" class=\"multiple\" multiple name=\"data.characterizations\" id=\"characterizations\" [(ngModel)]=\"data.characterizations\">\n                                <option *ngFor=\"let samp of characterizationsList\">\n                                    {{samp}}\n                                </option>\n                            </select>\n                        </ng-container>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"buttons\">\n            <div>\n                Searching without any parameters returns all samples.\n            </div>\n            <button [disabled]=\"loading\" (click)=\"reset()\" class=\"btn-canano btn-canano-danger btn-canano-lg mr-1\">Reset</button>\n            <button [disabled]=\"loading\" (click)=\"onSubmit()\" class=\"btn-canano btn-canano-primary btn-canano-lg mr-1\">Search</button>\n\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleSearchComponent } from './sample-search.component';\nimport { SampleSearchRoutingModule } from './sample-search-routing.module';\nimport { SharedModule } from '../../../../common/modules/set-object-value/shared.module';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [SampleSearchComponent],\n    imports: [\n      CommonModule,\n      SampleSearchRoutingModule,\n      SharedModule,\n      FormsModule,\n      ReactiveFormsModule\n    ]\n  })\n  export class SampleSearchModule { }\n\n"],"names":["RouterModule","SampleSearchComponent","routes","path","component","SampleSearchRoutingModule","forChild","imports","exports","Consts","Properties","i0","constructor","apiService","utilService","router","sampleSearchResultsService","HELP_URL_SAMPLE_SEARCH","searchingMessage","ngOnInit","setTimeout","SAMPLE_TOOLS","errors","data","dataTrailer","JSON","parse","stringify","init","loading","loadingMessage","doGet","QUERY_SAMPLE_SETUP","subscribe","sampleSetupData","error","onCharacterizationType","charType","characterizationType","QUERY_GET_CHARACTERIZATION_BY_TYPE","characterizationsList","onSubmit","doPost","QUERY_SEARCH_SAMPLE","searchResults","setSearchResults","navigate","reset","selectors","viewQuery","ctx","CommonModule","SharedModule","FormsModule","ReactiveFormsModule","SampleSearchModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}